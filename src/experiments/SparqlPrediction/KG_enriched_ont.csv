,database,natural language q,sql,sql_result,sparql,sparql_result,difficulty,match,score,exception
0,concert_singer,How many singers do we have?,SELECT count(*) FROM singer,"(6,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:singer .        },"(6,)",easy,True,1,
1,concert_singer,"Show name, country, age for all singers ordered by age from the oldest to the youngest.","SELECT name ,  country ,  age FROM singer ORDER BY age DESC","('Joe Sharp', 'Netherlands', 52), ('John Nizinik', 'France', 43), ('Rose White', 'France', 41), ('Timbaland', 'United States', 32), ('Justin Brown', 'France', 29), ('Tribal King', 'France', 25)",select ?t1_name ?t1_country ?t1_age where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#country ?t1_country . ?t1 dbo:singer\#age ?t1_age . ?t1 dbo:singer\#age ?t1_age .        }  order by desc (?t1_age),"('Joe Sharp', 'Netherlands', 52), ('John Nizinik', 'France', 43), ('Rose White', 'France', 41), ('Timbaland', 'United States', 32), ('Justin Brown', 'France', 29), ('Tribal King', 'France', 25)",medium,True,1,
2,concert_singer,"What is the average, minimum, and maximum age of all singers from France?","SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","(34.5, 25, 43)",select (avg( ?t1_age) as ?aggregation_t1_age_250 ) (min( ?t1_age) as ?aggregation_t1_age_222 ) (max( ?t1_age) as ?aggregation_t1_age_457 ) where { ?t1 a dbo:singer . ?t1 dbo:singer\#age ?t1_age . ?t1 dbo:singer\#age ?t1_age . ?t1 dbo:singer\#age ?t1_age . ?t1 dbo:singer\#country ?t1_country . FILTER(?t1_country = 'France') .        },"(34.5, 25, 43)",medium,True,1,
3,concert_singer,Show the name and the release year of the song by the youngest singer.,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","('Love', '2016')",select ?t1_song_name ?t1_song_release_year where { ?t1 a dbo:singer . ?t1 dbo:singer\#song_name ?t1_song_name . ?t1 dbo:singer\#song_release_year ?t1_song_release_year . ?t1 dbo:singer\#age ?t1_age .        }   order by asc (?t1_age) limit 1,"('Love', '2016')",medium,True,1,
4,concert_singer,What are all distinct countries where singers above age 20 are from?,SELECT DISTINCT country FROM singer WHERE age  >  20,"('France',), ('Netherlands',), ('United States',)",select distinct ?t1_country where { ?t1 a dbo:singer . ?t1 dbo:singer\#country ?t1_country . ?t1 dbo:singer\#age ?t1_age . FILTER(?t1_age > 20) .        },"('Netherlands',), ('United States',), ('France',)",easy,True,1,
5,concert_singer,Show all countries and the number of singers in each country.,"SELECT country ,  count(*) FROM singer GROUP BY country","('Netherlands', 1), ('France', 4), ('United States', 1)",select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a dbo:singer . ?t1 dbo:singer\#country ?t1_country .        } group by ?t1_country,"('Netherlands', 1), ('United States', 1), ('France', 4)",medium,True,1,
6,concert_singer,List all song names by singers above the average age.,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),"('You',), ('Sun',), ('Gentleman',)",select ?t1_song_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#song_name ?t1_song_name . ?t1 dbo:singer\#age ?t1_age . FILTER(?t1_age > ?aggregation_t22_age_492) .       {select (avg( ?t22_age) as ?aggregation_t22_age_492 ) where { ?t22 a dbo:singer . ?t22 dbo:singer\#age ?t22_age .        }    } },"('You',), ('Sun',), ('Gentleman',)",hard,True,1,
7,concert_singer,Show location and name for all stadiums with a capacity between 5000 and 10000.,"SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",,select ?t1_location ?t1_name where { ?t1 a dbo:stadium . ?t1 dbo:stadium\#location ?t1_location . ?t1 dbo:stadium\#name ?t1_name . ?t1 dbo:stadium\#capacity ?t1_capacity . FILTER(?t1_capacity >= 5000 && ?t1_capacity <= 10000) .        },,medium,True,1,
8,concert_singer,What is the average and the maximum capacity of all stadiums?,"SELECT avg(capacity) ,  max(capacity) FROM stadium","(10621.666666666666, 52500)",select (avg( ?t1_capacity) as ?aggregation_t1_capacity_315 ) (max( ?t1_capacity) as ?aggregation_t1_capacity_107 ) where { ?t1 a dbo:stadium . ?t1 dbo:stadium\#capacity ?t1_capacity . ?t1 dbo:stadium\#capacity ?t1_capacity .        },"(10621.666666666666, 52500)",medium,True,1,
9,concert_singer,What is the name and capacity for the stadium with highest average attendance?,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","(""Stark's Park"", 10104)",select ?t1_name ?t1_capacity where { ?t1 a dbo:stadium . ?t1 dbo:stadium\#name ?t1_name . ?t1 dbo:stadium\#capacity ?t1_capacity . ?t1 dbo:stadium\#average ?t1_average .        }   order by desc (?t1_average) limit 1,"(""Stark's Park"", 10104)",medium,True,1,
10,concert_singer,How many concerts are there in year 2014 or 2015?,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,"(6,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:concert . ?t1 dbo:concert\#year ?t1_year . ?t1 dbo:concert\#year ?t1_year . FILTER(?t1_year = '2014' || ?t1_year = '2015') .        },"(6,)",medium,True,1,
11,concert_singer,Show the stadium name and the number of concerts in each stadium.,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T2.name","('Glebe Park', 1), ('Somerset Park', 2), ('Recreation Park', 1), (""Stark's Park"", 1), ('Balmoor', 1)",select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a dbo:stadium . ?t2 a dbo:concert . ?t2 dbo:concert\#ref-stadium_id ?t1 .  ?t1 dbo:stadium\#name ?t1_name .        } group by ?t1_name,"(""Stark's Park"", 1), ('Somerset Park', 2), ('Glebe Park', 1), ('Balmoor', 1), ('Recreation Park', 1)",medium,True,1,
12,concert_singer,Show the stadium name and capacity with most number of concerts in year 2014 or after.,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","('Somerset Park', 11998)",select ?t1_name ?t1_capacity where { ?t1 a dbo:stadium . ?t2 a dbo:concert . ?t2 dbo:concert\#ref-stadium_id ?t1 .  ?t1 dbo:stadium\#name ?t1_name . ?t1 dbo:stadium\#capacity ?t1_capacity . ?t2 dbo:concert\#year ?t2_year . FILTER(?t2_year >= '2014') .        } group by ?t1_name ?t1_capacity  order by desc (count(*)) limit 1,"('Somerset Park', 11998)",extra,True,1,
13,concert_singer,Which year has most number of concerts?,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"(2015,)",select ?t1_year where { ?t1 a dbo:concert . ?t1 dbo:concert\#year ?t1_year .        } group by ?t1_year  order by desc (count(*)) limit 1,"('2014',)",hard,True,1,false_negative
14,concert_singer,Show the stadium names without any concert.,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),"('Bayview Stadium',), ('Hampden Park',), ('Forthbank Stadium',), ('Gayfield Park',)",select ?t1_name where { ?t1 a dbo:stadium . ?t1 dbo:stadium\#name ?t1_name . ?t1 dbo:stadium\#stadium_id ?t1_stadium_id .     Filter not exists {{select ?t22_stadium_id where { ?t22 a dbo:concert . ?t22 dbo:concert\#stadium_id ?t22_stadium_id .        }    } FILTER (?t1_stadium_id in (?t22_stadium_id))}  },"('Bayview Stadium',), ('Hampden Park',), ('Forthbank Stadium',), ('Gayfield Park',)",hard,True,1,
15,concert_singer,Show countries where a singer above age 40 and a singer below 30 are from.,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,"('France',)",select distinct ?t1_country where { ?t1 a dbo:singer . ?t1 dbo:singer\#country ?t1_country . ?t1 dbo:singer\#age ?t1_age . FILTER(?t1_age > 40) . FILTER (?t1_country in (?t2_country)) .  { ?t2 a dbo:singer . ?t2 dbo:singer\#country ?t2_country . ?t2 dbo:singer\#age ?t2_age .  FILTER(?t2_age < 30) .     }      },"('France',)",hard,True,1,
16,concert_singer,Show names for all stadiums except for stadiums having a concert in year 2014.,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,"('Balmoor',), ('Gayfield Park',), ('Hampden Park',), ('Recreation Park',), ('Forthbank Stadium',), ('Bayview Stadium',)",SELECT distinct?col1 WHERE { { select (?t1_name as ?col1) where { ?t1 a dbo:stadium . ?t1 dbo:stadium\#name ?t1_name .   }}  MINUS {select (?t2_name as ?col1) where { ?t2 a dbo:stadium . ?t3 a dbo:concert . ?t3 dbo:concert\#ref-stadium_id ?t2 .  ?t2 dbo:stadium\#name ?t2_name . ?t3 dbo:concert\#year ?t3_year . FILTER(?t3_year = '2014') .        }     } },"('Bayview Stadium',), ('Hampden Park',), ('Forthbank Stadium',), ('Gayfield Park',), ('Recreation Park',), ('Balmoor',)",hard,True,1,
17,concert_singer,Show the name and theme for all concerts and the number of singers in each concert.,"SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id","('Week 2', 'Party All Night', 1), ('Auditions', 'Free choice', 3), ('Home Visits', 'Bleeding Love', 1), ('Week 1', 'Happy Tonight', 2), ('Week 1', 'Wide Awake', 1), ('Super bootcamp', 'Free choice 2', 2)",select ?t1_concert_name ?t1_theme (count( *) as ?aggregation_all) where { ?t1 a dbo:concert . ?t13 a dbo:singer_in_concert . ?t13 dbo:singer_in_concert\#ref-concert_id ?t1 .  ?t1 dbo:concert\#concert_name ?t1_concert_name . ?t1 dbo:concert\#theme ?t1_theme .        } group by ?t1_concert_name ?t1_theme,"('Auditions', 'Free choice', 3), ('Super bootcamp', 'Free choice 2', 2), ('Home Visits', 'Bleeding Love', 1), ('Week 1', 'Wide Awake', 1), ('Week 1', 'Happy Tonight', 2), ('Week 2', 'Party All Night', 1)",medium,True,1,
18,concert_singer,List singer names and number of concerts for each singer.,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","('Tribal King', 2), ('Justin Brown', 3), ('John Nizinik', 2), ('Rose White', 1), ('Timbaland', 2)",select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a dbo:singer . ?t13 a dbo:singer_in_concert . ?t13 dbo:singer_in_concert\#ref-singer_id ?t1 .  ?t1 dbo:singer\#name ?t1_name .        } group by ?t1_name,"('Timbaland', 2), ('Justin Brown', 3), ('John Nizinik', 2), ('Tribal King', 2), ('Rose White', 1)",medium,True,1,
19,concert_singer,List all singer names in concerts in year 2014.,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,"('Timbaland',), ('Justin Brown',), ('John Nizinik',), ('Justin Brown',), ('Tribal King',), ('Rose White',)",select ?t1_name where { ?t1 a dbo:singer . ?t2 a dbo:singer_in_concert . ?t2 dbo:singer_in_concert\#ref-singer_id ?t1 .  ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#singer_id ?t1_singer_id . ?t3 dbo:concert\#year ?t3_year . ?t3 a dbo:concert . ?t2 dbo:singer_in_concert\#ref-concert_id ?t3 .  ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#singer_id ?t1_singer_id . ?t3 dbo:concert\#year ?t3_year . FILTER(?t3_year = '2014') .        },"('Timbaland',), ('Justin Brown',), ('John Nizinik',), ('Justin Brown',), ('Tribal King',), ('Rose White',)",hard,True,1,
20,concert_singer,what is the name and nation of the singer who have a song having 'Hey' in its name?,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","('Justin Brown', 'France')","select ?t1_name ?t1_country where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#country ?t1_country . ?t1 dbo:singer\#song_name ?t1_song_name . FILTER(contains (?t1_song_name, 'Hey')) .        }","('Justin Brown', 'France')",medium,True,1,
21,concert_singer,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015","('Somerset Park', 'Ayr United')",select distinct ?t1_name ?t1_location where { ?t1 a dbo:stadium . ?t2 a dbo:concert . ?t2 dbo:concert\#ref-stadium_id ?t1 .  ?t1 dbo:stadium\#name ?t1_name . ?t1 dbo:stadium\#location ?t1_location . ?t2 dbo:concert\#year ?t2_year . FILTER(?t2_year = '2014') . FILTER (?t1_name in (?t3_name)) . FILTER (?t1_location in (?t3_location)) .  { ?t3 a dbo:stadium . ?t4 a dbo:concert . ?t4 dbo:concert\#ref-stadium_id ?t3 .  ?t3 dbo:stadium\#name ?t3_name . ?t3 dbo:stadium\#location ?t3_location . ?t4 dbo:concert\#year ?t4_year .  FILTER(?t4_year = '2015') .     }      },"('Somerset Park', 'Ayr United')",extra,True,1,
22,concert_singer,Find the number of concerts happened in the stadium with the highest capacity.,SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T2.Capacity ORDER BY T2.Capacity DESC LIMIT 1,"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:concert . ?t2 a dbo:stadium . ?t1 dbo:concert\#ref-stadium_id ?t2 .  ?t2 dbo:stadium\#capacity ?t2_capacity .        }   group by ?t2_capacity order by desc (?t2_capacity) limit 1,"(2,)",extra,True,1,
23,pets_1,Find the number of pets whose weight is heavier than 10.,SELECT count(*) FROM pets WHERE weight  >  10,"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:pets . ?t1 dbo:pets\#weight ?t1_weight . FILTER(?t1_weight > 10) .        },"(2,)",easy,True,1,
24,pets_1,Find the weight of the youngest dog.,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,"(9.3,)",select ?t1_weight where { ?t1 a dbo:pets . ?t1 dbo:pets\#weight ?t1_weight . ?t1 dbo:pets\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1,"(9.3,)",medium,True,1,
25,pets_1,Find the maximum weight for each type of pet. List the maximum weight and pet type.,"SELECT max(weight) ,  petType FROM pets GROUP BY petType","(13.4, 'dog'), (12.0, 'cat')",select (max( ?t1_weight) as ?aggregation_t1_weight_320 ) ?t1_pettype where { ?t1 a dbo:pets . ?t1 dbo:pets\#weight ?t1_weight . ?t1 dbo:pets\#pettype ?t1_pettype .        } group by ?t1_pettype,"(12.0, 'cat'), (13.4, 'dog')",medium,True,1,
26,pets_1,Find number of pets owned by students who are older than 20.,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,"(0,)",select (count( *) as ?aggregation_all) where { ?t13 a dbo:has_pet . ?t2 a dbo:student . ?t13 dbo:has_pet\#ref-stuid ?t2 .  ?t2 dbo:student\#age ?t2_age . FILTER(?t2_age > 20) .        },"(0,)",medium,True,1,
27,pets_1,Find the number of dog pets that are raised by female students (with sex F).,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:pets . ?t13 a dbo:has_pet . ?t13 dbo:has_pet\#ref-petid ?t1 .  ?t2 dbo:student\#sex ?t2_sex . ?t1 dbo:pets\#pettype ?t1_pettype . ?t2 a dbo:student . ?t13 dbo:has_pet\#ref-stuid ?t2 .  ?t2 dbo:student\#sex ?t2_sex . ?t1 dbo:pets\#pettype ?t1_pettype . FILTER(?t2_sex = 'F' && ?t1_pettype = 'dog') .        },"(2,)",hard,True,1,
28,pets_1,Find the number of distinct type of pets.,SELECT count(DISTINCT pettype) FROM pets,"(2,)",select distinct (count(distinct ?t1_pettype) as ?aggregation_t1_pettype_458 ) where { ?t1 a dbo:pets . ?t1 dbo:pets\#pettype ?t1_pettype .        },"(2,)",easy,True,1,
29,pets_1,Find the first name of students who have cat or dog pet.,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',"('Linda',), ('Tracy',)",select distinct ?t1_fname where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . ?t3 dbo:pets\#pettype ?t3_pettype . ?t3 a dbo:pets . ?t2 dbo:has_pet\#ref-petid ?t3 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . ?t3 dbo:pets\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat' || ?t3_pettype = 'dog') .        },"('Linda',), ('Tracy',)",extra,True,1,
30,pets_1,Find the name of students who have both cat and dog pets.,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',,select distinct ?t1_fname where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . ?t3 a dbo:pets . ?t2 dbo:has_pet\#ref-petid ?t3 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat') . FILTER (?t1_fname in (?t4_fname)) .  { ?t4 a dbo:student . ?t5 a dbo:has_pet . ?t5 dbo:has_pet\#ref-stuid ?t4 .  ?t4 dbo:student\#fname ?t4_fname . ?t4 dbo:student\#stuid ?t4_stuid . ?t6 dbo:pets\#pettype ?t6_pettype . ?t6 a dbo:pets . ?t5 dbo:has_pet\#ref-petid ?t6 .  ?t4 dbo:student\#fname ?t4_fname . ?t4 dbo:student\#stuid ?t4_stuid . ?t6 dbo:pets\#pettype ?t6_pettype .  FILTER(?t6_pettype = 'dog') .     }      },,extra,True,1,
31,pets_1,Find the major and age of students who do not have a cat pet.,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","(600, 19), (600, 21), (600, 20), (600, 26), (600, 18), (600, 18), (600, 20), (600, 19), (600, 17), (600, 22), (600, 20), (600, 18), (600, 16), (600, 17), (600, 27), (600, 20), (600, 18), (520, 22), (520, 19), (540, 17), (520, 20), (540, 18), (520, 18), (520, 19), (520, 18), (550, 20), (100, 17), (550, 21), (550, 20), (550, 20), (550, 18), (50, 18), (50, 26)",select ?t1_major ?t1_age where { ?t1 a dbo:student . ?t1 dbo:student\#major ?t1_major . ?t1 dbo:student\#age ?t1_age . ?t1 dbo:student\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a dbo:student . ?t23 a dbo:has_pet . ?t23 dbo:has_pet\#ref-stuid ?t22 .  ?t22 dbo:student\#stuid ?t22_stuid . ?t22 dbo:student\#stuid ?t22_stuid . ?t24 dbo:pets\#pettype ?t24_pettype . ?t24 a dbo:pets . ?t23 dbo:has_pet\#ref-petid ?t24 .  ?t22 dbo:student\#stuid ?t22_stuid . ?t22 dbo:student\#stuid ?t22_stuid . ?t24 dbo:pets\#pettype ?t24_pettype . FILTER(?t24_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t22_stuid))}  },"(600, 19), (600, 21), (600, 20), (600, 26), (600, 18), (600, 18), (600, 20), (600, 19), (600, 17), (600, 22), (600, 20), (600, 18), (600, 16), (600, 17), (600, 27), (600, 20), (600, 18), (520, 22), (520, 19), (540, 17), (520, 20), (540, 18), (520, 18), (520, 19), (520, 18), (550, 20), (100, 17), (550, 21), (550, 20), (550, 20), (550, 18), (50, 18), (50, 26)",extra,True,1,
32,pets_1,Find the id of students who do not have a cat pet.,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"(1018,), (1028,), (1035,), (1019,), (1002,), (1023,), (1009,), (1022,), (1020,), (1031,), (1011,), (1006,), (1008,), (1017,), (1005,), (1004,), (1034,), (1016,), (1012,), (1033,), (1015,), (1025,), (1007,), (1003,), (1026,), (1027,), (1014,), (1024,), (1021,), (1010,), (1032,), (1029,), (1030,)",SELECT distinct?col1 WHERE { { select (?t1_stuid as ?col1) where { ?t1 a dbo:student . ?t1 dbo:student\#stuid ?t1_stuid .   }}  MINUS {select (?t2_stuid as ?col1) where { ?t2 a dbo:student . ?t3 a dbo:has_pet . ?t3 dbo:has_pet\#ref-stuid ?t2 .  ?t2 dbo:student\#stuid ?t2_stuid . ?t2 dbo:student\#stuid ?t2_stuid . ?t4 dbo:pets\#pettype ?t4_pettype . ?t4 a dbo:pets . ?t3 dbo:has_pet\#ref-petid ?t4 .  ?t2 dbo:student\#stuid ?t2_stuid . ?t2 dbo:student\#stuid ?t2_stuid . ?t4 dbo:pets\#pettype ?t4_pettype . FILTER(?t4_pettype = 'cat') .        }     } },"(1002,), (1003,), (1004,), (1005,), (1006,), (1007,), (1008,), (1009,), (1010,), (1011,), (1012,), (1014,), (1015,), (1016,), (1017,), (1018,), (1019,), (1020,), (1021,), (1022,), (1023,), (1024,), (1025,), (1026,), (1027,), (1028,), (1029,), (1030,), (1031,), (1032,), (1033,), (1034,), (1035,)",hard,True,1,
33,pets_1,Find the first name and age of students who have a dog but do not have a cat as a pet.,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","('Tracy', 19), ('Tracy', 19)",select ?t1_fname ?t1_age where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#age ?t1_age . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 a dbo:pets . ?t2 dbo:has_pet\#ref-petid ?t3 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#age ?t1_age . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pettype ?t3_pettype . ?t1 dbo:student\#stuid ?t1_stuid . FILTER(?t3_pettype = 'dog') .     Filter not exists {{select ?t24_stuid where { ?t24 a dbo:student . ?t25 a dbo:has_pet . ?t25 dbo:has_pet\#ref-stuid ?t24 .  ?t24 dbo:student\#stuid ?t24_stuid . ?t24 dbo:student\#stuid ?t24_stuid . ?t26 dbo:pets\#pettype ?t26_pettype . ?t26 a dbo:pets . ?t25 dbo:has_pet\#ref-petid ?t26 .  ?t24 dbo:student\#stuid ?t24_stuid . ?t24 dbo:student\#stuid ?t24_stuid . ?t26 dbo:pets\#pettype ?t26_pettype . FILTER(?t26_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t24_stuid))}  },"('Tracy', 19), ('Tracy', 19)",extra,True,1,
34,pets_1,Find the type and weight of the youngest pet.,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","('dog', 9.3)",select ?t1_pettype ?t1_weight where { ?t1 a dbo:pets . ?t1 dbo:pets\#pettype ?t1_pettype . ?t1 dbo:pets\#weight ?t1_weight . ?t1 dbo:pets\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1,"('dog', 9.3)",medium,True,1,
35,pets_1,Find the id and weight of all pets whose age is older than 1.,"SELECT petid ,  weight FROM pets WHERE pet_age  >  1","(2001, 12.0), (2002, 13.4)",select ?t1_petid ?t1_weight where { ?t1 a dbo:pets . ?t1 dbo:pets\#petid ?t1_petid . ?t1 dbo:pets\#weight ?t1_weight . ?t1 dbo:pets\#pet_age ?t1_pet_age . FILTER(?t1_pet_age > 1) .        },"(2001, 12.0), (2002, 13.4)",medium,True,1,
36,pets_1,Find the average and maximum age for each type of pet.,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype","(1.5, 2, 'dog'), (3.0, 3, 'cat')",select (avg( ?t1_pet_age) as ?aggregation_t1_pet_age_383 ) (max( ?t1_pet_age) as ?aggregation_t1_pet_age_396 ) ?t1_pettype where { ?t1 a dbo:pets . ?t1 dbo:pets\#pet_age ?t1_pet_age . ?t1 dbo:pets\#pet_age ?t1_pet_age . ?t1 dbo:pets\#pettype ?t1_pettype .        } group by ?t1_pettype,"(3.0, 3, 'cat'), (1.5, 2, 'dog')",medium,True,1,
37,pets_1,Find the average weight for each pet type.,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype","(11.349999904633, 'dog'), (12.0, 'cat')",select (avg( ?t1_weight) as ?aggregation_t1_weight_68 ) ?t1_pettype where { ?t1 a dbo:pets . ?t1 dbo:pets\#weight ?t1_weight . ?t1 dbo:pets\#pettype ?t1_pettype .        } group by ?t1_pettype,"(12.0, 'cat'), (11.35, 'dog')",medium,True,1,false_negative
38,pets_1,Find the first name and age of students who have a pet.,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","('Linda', 18), ('Tracy', 19)",select distinct ?t1_fname ?t1_age where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#age ?t1_age . ?t1 dbo:student\#stuid ?t1_stuid .        },"('Linda', 18), ('Tracy', 19)",medium,True,1,
39,pets_1,Find the id of the pet owned by student whose last name is ‘Smith’.,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith',"(2001,)",select ?t1_petid where { ?t1 a dbo:has_pet . ?t2 a dbo:student . ?t1 dbo:has_pet\#ref-stuid ?t2 .  ?t1 dbo:has_pet\#petid ?t1_petid . ?t2 dbo:student\#lname ?t2_lname . FILTER(?t2_lname = 'Smith') .        },"(2001,)",medium,True,1,
40,pets_1,Find the number of pets for each student who has any pet and student id.,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","(2, 1002), (1, 1001)",select (count( *) as ?aggregation_all) ?t2_stuid where { ?t13 a dbo:has_pet . ?t2 a dbo:student . ?t13 dbo:has_pet\#ref-stuid ?t2 .  ?t2 dbo:student\#stuid ?t2_stuid .        } group by ?t2_stuid,"(1, 1001), (2, 1002)",medium,True,1,
41,pets_1,Find the first name and gender of student who have more than one pet.,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1","('Tracy', 'F')",select ?t1_fname ?t1_sex where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#fname ?t1_fname . ?t1 dbo:student\#sex ?t1_sex . ?t1 dbo:student\#stuid ?t1_stuid .        } group by ?t1_fname ?t1_sex   having(count( *)  > 1),"('Tracy', 'F')",medium,True,1,
42,pets_1,Find the last name of the student who has a cat that is age 3.,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"('Smith',)",select ?t1_lname where { ?t1 a dbo:student . ?t2 a dbo:has_pet . ?t2 dbo:has_pet\#ref-stuid ?t1 .  ?t1 dbo:student\#lname ?t1_lname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pet_age ?t3_pet_age . ?t3 dbo:pets\#pettype ?t3_pettype . ?t3 a dbo:pets . ?t2 dbo:has_pet\#ref-petid ?t3 .  ?t1 dbo:student\#lname ?t1_lname . ?t1 dbo:student\#stuid ?t1_stuid . ?t3 dbo:pets\#pet_age ?t3_pet_age . ?t3 dbo:pets\#pettype ?t3_pettype . FILTER(?t3_pet_age = 3 && ?t3_pettype = 'cat') .        },"('Smith',)",hard,True,1,
43,pets_1,Find the average age of students who do not have any pet.,SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid),"(19.625,)",select (avg( ?t1_age) as ?aggregation_t1_age_104 ) where { ?t1 a dbo:student . ?t1 dbo:student\#age ?t1_age . ?t1 dbo:student\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a dbo:student . ?t23 a dbo:has_pet . ?t23 dbo:has_pet\#ref-stuid ?t22 .  ?t22 dbo:student\#stuid ?t22_stuid . ?t22 dbo:student\#stuid ?t22_stuid .        }    } FILTER (?t1_stuid in (?t22_stuid))}  },"(19.625,)",extra,True,1,
44,car_1,How many continents are there?,SELECT count(*) FROM CONTINENTS;,"(6,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:continents .        },"(6,)",easy,True,1,
45,car_1,"How many countries does each continent have? List the continent id, continent name and the number of countries.","SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;","(0, 'NA', 1), (1, 'america', 3), (3, 'asia', 2), (5, 'australia', 2), (4, 'africa', 2), (2, 'europe', 6)",select ?t1_contid ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a dbo:continents . ?t2 a dbo:countries . ?t2 dbo:countries\#ref-continent ?t1 .  ?t1 dbo:continents\#contid ?t1_contid . ?t1 dbo:continents\#continent ?t1_continent .        } group by ?t1_contid ?t1_continent,"(1, 'america', 3), (2, 'europe', 6), (3, 'asia', 2), (4, 'africa', 2), (5, 'australia', 2), (0, 'NA', 1)",medium,True,1,
46,car_1,How many countries are listed?,SELECT count(*) FROM COUNTRIES;,"(16,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:countries .        },"(16,)",easy,True,1,
47,car_1,"How many models does each car maker produce? List maker full name, id and the number.","SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;","('Honda', 11, 1), ('Nissan Motors', 8, 2), ('Toyota', 19, 2), ('General Motors', 4, 5), ('Volvo', 21, 1), ('Opel', 14, 1), ('BMW', 3, 1), ('Saab', 17, 1), ('Kia Motors', 22, 1), ('Triumph', 20, 1), ('Daimler Benz', 13, 2), ('NA', 10, 1), ('Fiat', 9, 1), ('Citroen', 7, 1), ('American Motor Company', 1, 1), ('Ford Motor Company', 5, 3), ('Subaru', 18, 1), ('Volkswagen', 2, 2), ('Renault', 16, 1), ('Peugeaut', 15, 1), ('Chrysler', 6, 4), ('Mazda', 12, 1), ('Hyundai', 23, 1)",select ?t1_fullname ?t1_id (count( *) as ?aggregation_all) where { ?t1 a dbo:car_makers . ?t2 a dbo:model_list . ?t2 dbo:model_list\#ref-maker ?t1 .  ?t1 dbo:car_makers\#fullname ?t1_fullname . ?t1 dbo:car_makers\#id ?t1_id .        } group by ?t1_fullname ?t1_id,"('American Motor Company', 1, 1), ('Volkswagen', 2, 2), ('BMW', 3, 1), ('General Motors', 4, 5), ('Ford Motor Company', 5, 3), ('Chrysler', 6, 4), ('Citroen', 7, 1), ('Nissan Motors', 8, 2), ('Fiat', 9, 1), ('NA', 10, 1), ('Honda', 11, 1), ('Mazda', 12, 1), ('Daimler Benz', 13, 2), ('Opel', 14, 1), ('Peugeaut', 15, 1), ('Renault', 16, 1), ('Saab', 17, 1), ('Subaru', 18, 1), ('Toyota', 19, 2), ('Triumph', 20, 1), ('Volvo', 21, 1), ('Kia Motors', 22, 1), ('Hyundai', 23, 1)",medium,True,1,
48,car_1,Which model of the car has the minimum horsepower?,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,"('ford',)",select ?t1_model where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#model ?t1_model . ?t2 dbo:cars_data\#horsepower ?t2_horsepower .        }   order by asc (?t2_horsepower) limit 1,"('ford',)",hard,True,1,
49,car_1,Find the model of the car whose weight is below the average weight.,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),"('toyota',), ('plymouth',), ('amc',), ('ford',), ('datsun',), ('volkswagen',), ('peugeot',), ('audi',), ('saab',), ('bmw',), ('amc',), ('datsun',), ('chevrolet',), ('toyota',), ('ford',), ('volkswagen',), ('amc',), ('amc',), ('chevrolet',), ('mercury',), ('opel',), ('peugeot',), ('fiat',), ('toyota',), ('datsun',), ('volkswagen',), ('plymouth',), ('toyota',), ('dodge',), ('volkswagen',), ('chevrolet',), ('ford',), ('mazda',), ('volvo',), ('volkswagen',), ('peugeot',), ('renault',), ('ford',), ('datsun',), ('toyota',), ('dodge',), ('toyota',), ('amc',), ('plymouth',), ('volkswagen',), ('amc',), ('toyota',), ('chevrolet',), ('datsun',), ('mazda',), ('ford',), ('mercury',), ('fiat',), ('fiat',), ('opel',), ('audi',), ('volvo',), ('saab',), ('toyota',), ('ford',), ('amc',), ('datsun',), ('ford',), ('toyota',), ('chevrolet',), ('audi',), ('volkswagen',), ('opel',), ('toyota',), ('datsun',), ('dodge',), ('fiat',), ('fiat',), ('honda',), ('subaru',), ('fiat',), ('toyota',), ('ford',), ('amc',), ('pontiac',), ('toyota',), ('volkswagen',), ('datsun',), ('volkswagen',), ('audi',), ('peugeot',), ('volvo',), ('saab',), ('honda',), ('fiat',), ('opel',), ('capri',), ('dodge',), ('renault',), ('chevrolet',), ('chevrolet',), ('volkswagen',), ('honda',), ('volkswagen',), ('datsun',), ('toyota',), ('ford',), ('toyota',), ('honda',), ('buick',), ('renault',), ('plymouth',), ('datsun',), ('volkswagen',), ('pontiac',), ('toyota',), ('ford',), ('chevrolet',), ('dodge',), ('subaru',), ('volkswagen',), ('datsun',), ('bmw',), ('mazda',), ('volkswagen',), ('ford',), ('mazda',), ('datsun',), ('honda',), ('ford',), ('ford',), ('chevrolet',), ('toyota',), ('datsun',), ('dodge',), ('toyota',), ('plymouth',), ('oldsmobile',), ('datsun',), ('audi',), ('saab',), ('volkswagen',), ('honda',), ('ford',), ('volkswagen',), ('mazda',), ('dodge',), ('amc',), ('plymouth',), ('plymouth',), ('datsun',), ('fiat',), ('buick',), ('chevrolet',), ('oldsmobile',), ('pontiac',), ('volkswagen',), ('toyota',), ('chevrolet',), ('datsun',), ('chevrolet',), ('ford',), ('audi',), ('toyota',), ('mazda',), ('datsun',), ('toyota',), ('mazda',), ('dodge',), ('datsun',), ('volkswagen',), ('volkswagen',), ('audi',), ('honda',), ('renault',), ('subaru',), ('volkswagen',), ('datsun',), ('mazda',), ('triumph',), ('ford',), ('honda',), ('plymouth',), ('buick',), ('dodge',), ('chevrolet',), ('plymouth',), ('toyota',), ('plymouth',), ('honda',), ('subaru',), ('datsun',), ('toyota',), ('mazda',), ('plymouth',), ('ford',), ('ford',), ('volkswagen',), ('renault',), ('honda',), ('toyota',), ('datsun',), ('mazda',), ('saab',), ('toyota',), ('datsun',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('pontiac',), ('dodge',), ('pontiac',), ('ford',), ('volkswagen',), ('mazda',), ('mazda',), ('plymouth',), ('mercury',), ('nissan',), ('honda',), ('toyota',), ('honda',), ('honda',), ('datsun',), ('buick',), ('chrysler',), ('ford',), ('toyota',), ('dodge',), ('chevrolet',), ('ford',), ('volkswagen',), ('dodge',), ('ford',), ('chevrolet',)",select ?t1_model where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#model ?t1_model . ?t2 dbo:cars_data\#weight ?t2_weight . FILTER(?t2_weight < ?aggregation_t23_weight_329) .       {select (avg( ?t23_weight) as ?aggregation_t23_weight_329 ) where { ?t23 a dbo:cars_data . ?t23 dbo:cars_data\#weight ?t23_weight .        }    } },"('toyota',), ('plymouth',), ('amc',), ('ford',), ('datsun',), ('volkswagen',), ('peugeot',), ('audi',), ('saab',), ('bmw',), ('amc',), ('datsun',), ('chevrolet',), ('toyota',), ('amc',), ('amc',), ('chevrolet',), ('mercury',), ('opel',), ('peugeot',), ('fiat',), ('toyota',), ('datsun',), ('volkswagen',), ('plymouth',), ('toyota',), ('dodge',), ('volkswagen',), ('chevrolet',), ('ford',), ('mazda',), ('volvo',), ('volkswagen',), ('peugeot',), ('renault',), ('ford',), ('datsun',), ('toyota',), ('dodge',), ('toyota',), ('amc',), ('plymouth',), ('volkswagen',), ('amc',), ('toyota',), ('chevrolet',), ('datsun',), ('mazda',), ('ford',), ('mercury',), ('fiat',), ('fiat',), ('opel',), ('audi',), ('volvo',), ('saab',), ('toyota',), ('amc',), ('datsun',), ('ford',), ('toyota',), ('chevrolet',), ('audi',), ('volkswagen',), ('opel',), ('toyota',), ('datsun',), ('dodge',), ('fiat',), ('fiat',), ('honda',), ('subaru',), ('fiat',), ('toyota',), ('ford',), ('amc',), ('pontiac',), ('toyota',), ('volkswagen',), ('datsun',), ('volkswagen',), ('audi',), ('peugeot',), ('volvo',), ('saab',), ('honda',), ('fiat',), ('opel',), ('capri',), ('dodge',), ('renault',), ('chevrolet',), ('chevrolet',), ('volkswagen',), ('honda',), ('volkswagen',), ('datsun',), ('toyota',), ('ford',), ('toyota',), ('honda',), ('buick',), ('renault',), ('plymouth',), ('datsun',), ('volkswagen',), ('pontiac',), ('toyota',), ('ford',), ('chevrolet',), ('dodge',), ('subaru',), ('volkswagen',), ('datsun',), ('bmw',), ('mazda',), ('volkswagen',), ('ford',), ('mazda',), ('datsun',), ('honda',), ('ford',), ('ford',), ('chevrolet',), ('toyota',), ('datsun',), ('dodge',), ('toyota',), ('plymouth',), ('oldsmobile',), ('datsun',), ('audi',), ('saab',), ('volkswagen',), ('honda',), ('ford',), ('volkswagen',), ('mazda',), ('dodge',), ('amc',), ('plymouth',), ('plymouth',), ('datsun',), ('fiat',), ('buick',), ('chevrolet',), ('oldsmobile',), ('pontiac',), ('volkswagen',), ('toyota',), ('chevrolet',), ('datsun',), ('chevrolet',), ('ford',), ('audi',), ('toyota',), ('mazda',), ('datsun',), ('toyota',), ('mazda',), ('dodge',), ('datsun',), ('volkswagen',), ('volkswagen',), ('audi',), ('honda',), ('subaru',), ('volkswagen',), ('datsun',), ('mazda',), ('triumph',), ('honda',), ('plymouth',), ('buick',), ('dodge',), ('chevrolet',), ('plymouth',), ('toyota',), ('plymouth',), ('honda',), ('subaru',), ('datsun',), ('toyota',), ('mazda',), ('plymouth',), ('ford',), ('ford',), ('volkswagen',), ('honda',), ('toyota',), ('datsun',), ('mazda',), ('toyota',), ('datsun',), ('chevrolet',), ('chevrolet',), ('chevrolet',), ('pontiac',), ('dodge',), ('pontiac',), ('ford',), ('volkswagen',), ('mazda',), ('mazda',), ('plymouth',), ('mercury',), ('nissan',), ('honda',), ('toyota',), ('honda',), ('honda',), ('datsun',), ('buick',), ('chrysler',), ('ford',), ('toyota',), ('dodge',), ('chevrolet',), ('ford',), ('volkswagen',), ('dodge',), ('ford',), ('chevrolet',), ('volkswagen',), ('saab',), ('ford',), ('ford',), ('renault',), ('ford',), ('renault',)",extra,True,1,
50,car_1,Find the name of the makers that produced some cars in the year of 1970?,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,"('NA',), ('citroen',), ('saab',), ('nissan',), ('toyota',), ('chrysler',), ('bmw',), ('volkswagen',), ('gm',), ('ford',), ('amc',), ('peugeaut',)",select distinct ?t1_maker where { ?t1 a dbo:car_makers . ?t2 a dbo:model_list . ?t2 dbo:model_list\#ref-maker ?t1 .  ?t1 dbo:car_makers\#maker ?t1_maker . ?t1 dbo:car_makers\#id ?t1_id . ?t3 dbo:cars_data\#year ?t3_year . ?t14 a dbo:car_names . ?t14 dbo:car_names\#ref-model ?t2 .  ?t1 dbo:car_makers\#maker ?t1_maker . ?t1 dbo:car_makers\#id ?t1_id . ?t3 dbo:cars_data\#year ?t3_year . ?t3 a dbo:cars_data . ?t3 dbo:cars_data\#ref-id ?t14 .  ?t1 dbo:car_makers\#maker ?t1_maker . ?t1 dbo:car_makers\#id ?t1_id . ?t3 dbo:cars_data\#year ?t3_year . FILTER(?t3_year = 1970) .        },"('gm',), ('chrysler',), ('amc',), ('ford',), ('toyota',), ('nissan',), ('volkswagen',), ('peugeaut',), ('saab',), ('bmw',), ('NA',), ('citroen',)",extra,True,1,
51,car_1,Find the make and production time of the cars that were produced in the earliest year?,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);","('chevrolet chevelle malibu', 1970), ('buick skylark 320', 1970), ('plymouth satellite', 1970), ('amc rebel sst', 1970), ('ford torino', 1970), ('ford galaxie 500', 1970), ('chevrolet impala', 1970), ('plymouth fury iii', 1970), ('pontiac catalina', 1970), ('amc ambassador dpl', 1970), ('citroen ds-21 pallas', 1970), ('chevrolet chevelle concours (sw)', 1970), ('ford torino (sw)', 1970), ('plymouth satellite (sw)', 1970), ('amc rebel sst (sw)', 1970), ('dodge challenger se', 1970), ('plymouth cuda 340', 1970), ('ford mustang boss 302', 1970), ('chevrolet monte carlo', 1970), ('buick estate wagon (sw)', 1970), ('toyota corona mark ii', 1970), ('plymouth duster', 1970), ('amc hornet', 1970), ('ford maverick', 1970), ('datsun pl510', 1970), ('volkswagen 1131 deluxe sedan', 1970), ('peugeot 504', 1970), ('audi 100 ls', 1970), ('saab 99e', 1970), ('bmw 2002', 1970), ('amc gremlin', 1970), ('ford f250', 1970), ('chevy c20', 1970), ('dodge d200', 1970), ('hi 1200d', 1970)",select ?t1_make ?t2_year where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#make ?t1_make . ?t2 dbo:cars_data\#year ?t2_year . ?t2 dbo:cars_data\#year ?t2_year . FILTER(?t2_year = ?aggregation_t23_year_25) .       {select (min( ?t23_year) as ?aggregation_t23_year_25 ) where { ?t23 a dbo:cars_data . ?t23 dbo:cars_data\#year ?t23_year .        }    } },"('chevrolet chevelle malibu', 1970), ('buick skylark 320', 1970), ('plymouth satellite', 1970), ('amc rebel sst', 1970), ('ford torino', 1970), ('ford galaxie 500', 1970), ('chevrolet impala', 1970), ('plymouth fury iii', 1970), ('pontiac catalina', 1970), ('amc ambassador dpl', 1970), ('dodge challenger se', 1970), ('plymouth cuda 340', 1970), ('chevrolet monte carlo', 1970), ('buick estate wagon (sw)', 1970), ('toyota corona mark ii', 1970), ('plymouth duster', 1970), ('amc hornet', 1970), ('ford maverick', 1970), ('datsun pl510', 1970), ('volkswagen 1131 deluxe sedan', 1970), ('peugeot 504', 1970), ('audi 100 ls', 1970), ('saab 99e', 1970), ('bmw 2002', 1970), ('amc gremlin', 1970), ('ford f250', 1970), ('chevy c20', 1970), ('dodge d200', 1970), ('hi 1200d', 1970), ('citroen ds-21 pallas', 1970), ('chevrolet chevelle concours (sw)', 1970), ('ford torino (sw)', 1970), ('plymouth satellite (sw)', 1970), ('amc rebel sst (sw)', 1970), ('ford mustang boss 302', 1970)",extra,True,1,
52,car_1,Which distinct car models are the produced after 1980?,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,"('chevrolet',), ('mazda',), ('saab',), ('nissan',), ('oldsmobile',), ('renault',), ('chrysler',), ('pontiac',), ('volkswagen',), ('ford',), ('volvo',), ('honda',), ('mercury',), ('buick',), ('plymouth',), ('toyota',), ('subaru',), ('datsun',), ('peugeot',), ('amc',), ('dodge',)",select distinct ?t1_model where { ?t1 a dbo:model_list . ?t2 a dbo:car_names . ?t2 dbo:car_names\#ref-model ?t1 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:cars_data\#year ?t3_year . ?t3 a dbo:cars_data . ?t3 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:cars_data\#year ?t3_year . FILTER(?t3_year > 1980) .        },"('plymouth',), ('buick',), ('dodge',), ('chevrolet',), ('toyota',), ('honda',), ('subaru',), ('datsun',), ('mazda',), ('ford',), ('volkswagen',), ('renault',), ('peugeot',), ('saab',), ('volvo',), ('oldsmobile',), ('chrysler',), ('pontiac',), ('amc',), ('mercury',), ('nissan',)",hard,True,1,
53,car_1,How many car makers are there in each continents? List the continent name and the count.,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;","('NA', 1), ('asia', 7), ('america', 4), ('europe', 11)",select ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a dbo:continents . ?t13 a dbo:countries . ?t13 dbo:countries\#ref-continent ?t1 .  ?t1 dbo:continents\#continent ?t1_continent . ?t2 a dbo:car_makers . ?t2 dbo:car_makers\#ref-country ?t13 .  ?t1 dbo:continents\#continent ?t1_continent .        } group by ?t1_continent,"('america', 4), ('europe', 11), ('asia', 7), ('NA', 1)",hard,True,1,
54,car_1,Which of the countries has the most car makers? List the country name.,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.CountryName ORDER BY Count(*) DESC LIMIT 1;,"('japan',)",select ?t1_countryname where { ?t1 a dbo:countries . ?t2 a dbo:car_makers . ?t2 dbo:car_makers\#ref-country ?t1 .  ?t1 dbo:countries\#countryname ?t1_countryname . ?t1 dbo:countries\#countryid ?t1_countryid .        } group by ?t1_countryname  order by desc (count(*)) limit 1,"('japan',)",extra,True,1,
55,car_1,How many car models are produced by each maker? List the count and the maker full name.,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;","(1, 'Honda', 11), (2, 'Nissan Motors', 8), (2, 'Toyota', 19), (5, 'General Motors', 4), (1, 'Volvo', 21), (1, 'Opel', 14), (1, 'BMW', 3), (1, 'Saab', 17), (1, 'Kia Motors', 22), (1, 'Triumph', 20), (2, 'Daimler Benz', 13), (1, 'NA', 10), (1, 'Fiat', 9), (1, 'Citroen', 7), (1, 'American Motor Company', 1), (3, 'Ford Motor Company', 5), (1, 'Subaru', 18), (2, 'Volkswagen', 2), (1, 'Renault', 16), (1, 'Peugeaut', 15), (4, 'Chrysler', 6), (1, 'Mazda', 12), (1, 'Hyundai', 23)",select (count( *) as ?aggregation_all) ?t2_fullname ?t2_id where { ?t1 a dbo:model_list . ?t2 a dbo:car_makers . ?t1 dbo:model_list\#ref-maker ?t2 .  ?t2 dbo:car_makers\#fullname ?t2_fullname . ?t2 dbo:car_makers\#id ?t2_id .        } group by ?t2_fullname ?t2_id,"(1, 'American Motor Company', 1), (2, 'Volkswagen', 2), (1, 'BMW', 3), (5, 'General Motors', 4), (3, 'Ford Motor Company', 5), (4, 'Chrysler', 6), (1, 'Citroen', 7), (2, 'Nissan Motors', 8), (1, 'Fiat', 9), (1, 'NA', 10), (1, 'Honda', 11), (1, 'Mazda', 12), (2, 'Daimler Benz', 13), (1, 'Opel', 14), (1, 'Peugeaut', 15), (1, 'Renault', 16), (1, 'Saab', 17), (1, 'Subaru', 18), (2, 'Toyota', 19), (1, 'Triumph', 20), (1, 'Volvo', 21), (1, 'Kia Motors', 22), (1, 'Hyundai', 23)",medium,True,1,
56,car_1,What is the accelerate of the car make amc hornet sportabout (sw)?,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,"(13.5,)",select ?t1_accelerate where { ?t1 a dbo:cars_data . ?t2 a dbo:car_names . ?t1 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:cars_data\#accelerate ?t1_accelerate . ?t2 dbo:car_names\#make ?t2_make . FILTER(?t2_make = 'amc hornet sportabout (sw)') .        },"(13.5,)",medium,True,1,
57,car_1,How many car makers are there in france?,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:car_makers . ?t2 a dbo:countries . ?t1 dbo:car_makers\#ref-country ?t2 .  ?t2 dbo:countries\#countryname ?t2_countryname . FILTER(?t2_countryname = 'france') .        },"(3,)",medium,True,1,
58,car_1,How many car models are produced in the usa?,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,"(13,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:model_list . ?t2 a dbo:car_makers . ?t1 dbo:model_list\#ref-maker ?t2 .  ?t1 dbo:model_list\#maker ?t1_maker . ?t3 dbo:countries\#countryname ?t3_countryname . ?t3 a dbo:countries . ?t2 dbo:car_makers\#ref-country ?t3 .  ?t1 dbo:model_list\#maker ?t1_maker . ?t3 dbo:countries\#countryname ?t3_countryname . FILTER(?t3_countryname = 'usa') .        },"(13,)",hard,True,1,
59,car_1,What is the average miles per gallon(mpg) of the cars with 4 cylinders?,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,"(28.862318794508,)",select (avg( ?t1_mpg) as ?aggregation_t1_mpg_66 ) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#mpg ?t1_mpg . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 4) .        },"(28.86231884058,)",easy,True,1,false_negative
60,car_1,What is the smallest weight of the car produced with 4 cylinders on 1974?,SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;,"(1649,)",select ?t1_weight where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#weight ?t1_weight . ?t1 dbo:cars_data\#weight ?t1_weight . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . ?t1 dbo:cars_data\#year ?t1_year . FILTER(?t1_cylinders = 4 && ?t1_year = 1974) .        }   order by asc (?t1_weight) limit 1,"(1649,)",hard,True,1,
61,car_1,What are all the makers and models?,"SELECT Maker ,  Model FROM MODEL_LIST;","(1, 'amc'), (2, 'audi'), (3, 'bmw'), (4, 'buick'), (4, 'cadillac'), (5, 'capri'), (4, 'chevrolet'), (6, 'chrysler'), (7, 'citroen'), (8, 'datsun'), (6, 'dodge'), (9, 'fiat'), (5, 'ford'), (10, 'hi'), (11, 'honda'), (12, 'mazda'), (13, 'mercedes'), (13, 'mercedes-benz'), (5, 'mercury'), (8, 'nissan'), (4, 'oldsmobile'), (14, 'opel'), (15, 'peugeot'), (6, 'plymouth'), (4, 'pontiac'), (16, 'renault'), (17, 'saab'), (18, 'subaru'), (19, 'toyota'), (20, 'triumph'), (2, 'volkswagen'), (21, 'volvo'), (22, 'kia'), (23, 'hyundai'), (6, 'jeep'), (19, 'scion')",select ?t1_maker ?t1_model where { ?t1 a dbo:model_list . ?t1 dbo:model_list\#maker ?t1_maker . ?t1 dbo:model_list\#model ?t1_model .        },"(1, 'amc'), (2, 'audi'), (3, 'bmw'), (4, 'buick'), (4, 'cadillac'), (5, 'capri'), (4, 'chevrolet'), (6, 'chrysler'), (7, 'citroen'), (8, 'datsun'), (6, 'dodge'), (9, 'fiat'), (5, 'ford'), (10, 'hi'), (11, 'honda'), (12, 'mazda'), (13, 'mercedes'), (13, 'mercedes-benz'), (5, 'mercury'), (8, 'nissan'), (4, 'oldsmobile'), (14, 'opel'), (15, 'peugeot'), (6, 'plymouth'), (4, 'pontiac'), (16, 'renault'), (17, 'saab'), (18, 'subaru'), (19, 'toyota'), (20, 'triumph'), (2, 'volkswagen'), (21, 'volvo'), (22, 'kia'), (23, 'hyundai'), (6, 'jeep'), (19, 'scion')",medium,True,1,
62,car_1,What are the countries having at least one car maker? List name and id.,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;","('japan', 4), ('NA', 0), ('france', 3), ('uk', 7), ('usa', 1), ('italy', 5), ('germany', 2), ('sweden', 6), ('korea', 8)",select ?t1_countryname ?t1_countryid where { ?t1 a dbo:countries . ?t2 a dbo:car_makers . ?t2 dbo:car_makers\#ref-country ?t1 .  ?t1 dbo:countries\#countryname ?t1_countryname . ?t1 dbo:countries\#countryid ?t1_countryid . ?t1 dbo:countries\#countryid ?t1_countryid .        } group by ?t1_countryname ?t1_countryid   having(count( *)  >= 1),"('usa', 1), ('germany', 2), ('france', 3), ('japan', 4), ('italy', 5), ('NA', 0), ('sweden', 6), ('uk', 7), ('korea', 8)",medium,True,1,
63,car_1,What is the number of the cars with horsepower more than 150?,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,"(49,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#horsepower ?t1_horsepower . FILTER(?t1_horsepower > 150) .        },"(49,)",easy,True,1,
64,car_1,What is the average weight of cars each year?,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;","(2436.655172413793, 1980), (3078.735294117647, 1976), (3237.714285714286, 1972), (2532.166666666667, 1981), (2861.805555555556, 1978), (3055.344827586207, 1979), (3176.8, 1975), (3441.314285714286, 1970), (2453.548387096774, 1982), (2877.925925925926, 1974), (2997.357142857143, 1977), (3419.025, 1973), (2960.344827586207, 1971)",select (avg( ?t1_weight) as ?aggregation_t1_weight_479 ) ?t1_year where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#weight ?t1_weight . ?t1 dbo:cars_data\#year ?t1_year .        } group by ?t1_year,"(3441.314285714286, 1970), (2960.344827586207, 1971), (3237.714285714286, 1972), (3419.025, 1973), (2877.925925925926, 1974), (3176.8, 1975), (3078.735294117647, 1976), (2997.357142857143, 1977), (2861.805555555556, 1978), (3055.344827586207, 1979), (2436.655172413793, 1980), (2532.166666666667, 1981), (2453.548387096774, 1982)",medium,True,1,
65,car_1,Which countries in europe have at least 3 car manufacturers?,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,"('france',), ('germany',)",select ?t1_countryname where { ?t1 a dbo:countries . ?t2 a dbo:continents . ?t1 dbo:countries\#ref-continent ?t2 .  ?t1 dbo:countries\#countryname ?t1_countryname . ?t2 dbo:continents\#continent ?t2_continent . FILTER(?t2_continent = 'europe') .        } group by ?t1_countryname   having(count( *)  >= 3),,extra,False,0,
66,car_1,What is the maximum horsepower and the make of the car models with 3 cylinders?,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;","(110, 'mazda rx-4')",select ?t1_horsepower ?t2_make where { ?t1 a dbo:cars_data . ?t2 a dbo:car_names . ?t1 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:cars_data\#horsepower ?t1_horsepower . ?t2 dbo:car_names\#make ?t2_make . ?t1 dbo:cars_data\#horsepower ?t1_horsepower . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 3) .        }   order by desc (?t1_horsepower) limit 1,"(110, 'mazda rx-4')",extra,True,1,
67,car_1,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,"('mazda',)",select ?t1_model where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#model ?t1_model . ?t2 dbo:cars_data\#mpg ?t2_mpg .        }   order by desc (?t2_mpg) limit 1,"('mazda',)",hard,True,1,
68,car_1,What is the average horsepower of the cars before 1980?,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;,"(111.132911392405,)",select (avg( ?t1_horsepower) as ?aggregation_t1_horsepower_12 ) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#horsepower ?t1_horsepower . ?t1 dbo:cars_data\#year ?t1_year . FILTER(?t1_year < 1980) .        },"(111.132911392405,)",easy,True,1,
69,car_1,What is the average edispl of the cars of model volvo?,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,"(133.5,)",select (avg( ?t1_edispl) as ?aggregation_t1_edispl_207 ) where { ?t1 a dbo:cars_data . ?t2 a dbo:car_names . ?t1 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:cars_data\#edispl ?t1_edispl . ?t2 dbo:car_names\#model ?t2_model . FILTER(?t2_model = 'volvo') .        },"(133.5,)",medium,True,1,
70,car_1,What is the maximum accelerate for different number of cylinders?,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;","(24.8, 4), (22.2, 8), (21.0, 6), (13.5, 3), (20.1, 5)",select (max( ?t1_accelerate) as ?aggregation_t1_accelerate_431 ) ?t1_cylinders where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#accelerate ?t1_accelerate . ?t1 dbo:cars_data\#cylinders ?t1_cylinders .        } group by ?t1_cylinders,"(22.2, 8), (24.8, 4), (21.0, 6), (13.5, 3), (20.1, 5)",medium,True,1,
71,car_1,Which model has the most version(make) of cars?,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"('ford',)",select ?t1_model where { ?t1 a dbo:car_names . ?t1 dbo:car_names\#model ?t1_model .        } group by ?t1_model  order by desc (count(*)) limit 1,"('ford',)",hard,True,1,
72,car_1,How many cars have more than 4 cylinders?,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,"(195,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 4) .        },"(195,)",easy,True,1,
73,car_1,how many cars were produced in 1980?,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,"(29,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#year ?t1_year . FILTER(?t1_year = 1980) .        },"(29,)",easy,True,1,
74,car_1,How many car models were produced by the maker with full name American Motor Company?,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:model_list . ?t2 a dbo:car_makers . ?t1 dbo:model_list\#ref-maker ?t2 .  ?t2 dbo:car_makers\#fullname ?t2_fullname . FILTER(?t2_fullname = 'American Motor Company') .        },"(1,)",medium,True,1,
75,car_1,Which makers designed more than 3 car models? List full name and the id.,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;","('General Motors', 4), ('Chrysler', 6)",select ?t1_fullname ?t1_id where { ?t1 a dbo:car_makers . ?t2 a dbo:model_list . ?t2 dbo:model_list\#ref-maker ?t1 .  ?t1 dbo:car_makers\#fullname ?t1_fullname . ?t1 dbo:car_makers\#id ?t1_id . ?t1 dbo:car_makers\#id ?t1_id .        } group by ?t1_fullname ?t1_id   having(count( *)  > 3),"('General Motors', 4), ('Chrysler', 6)",medium,True,1,
76,car_1,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,"('chevrolet',), ('hi',), ('oldsmobile',), ('mercedes-benz',), ('chrysler',), ('pontiac',), ('ford',), ('mercury',), ('plymouth',), ('buick',), ('mercedes',), ('cadillac',), ('dodge',), ('amc',)",select distinct ?t1_model where { ?t1 a dbo:model_list . ?t2 a dbo:car_names . ?t2 dbo:car_names\#ref-model ?t1 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:car_makers\#fullname ?t3_fullname . ?t4 dbo:cars_data\#weight ?t4_weight . ?t3 a dbo:car_makers . ?t1 dbo:model_list\#ref-maker ?t3 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:car_makers\#fullname ?t3_fullname . ?t4 dbo:cars_data\#weight ?t4_weight . ?t4 a dbo:cars_data . ?t4 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:car_makers\#fullname ?t3_fullname . ?t4 dbo:cars_data\#weight ?t4_weight . FILTER(?t3_fullname = 'General Motors' || ?t4_weight > 3500) .        },"('chevrolet',), ('buick',), ('ford',), ('plymouth',), ('pontiac',), ('amc',), ('dodge',), ('hi',), ('mercury',), ('oldsmobile',), ('chrysler',), ('mercedes-benz',), ('cadillac',), ('mercedes',)",extra,True,1,
77,car_1,In which years cars were produced weighing no less than 3000 and no more than 4000?,SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;,"(1980,), (1976,), (1972,), (1981,), (1978,), (1979,), (1975,), (1970,), (1982,), (1974,), (1977,), (1973,), (1971,)",select distinct ?t1_year where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#year ?t1_year . ?t1 dbo:cars_data\#weight ?t1_weight . ?t1 dbo:cars_data\#weight ?t1_weight . FILTER(?t1_weight > 3000 && ?t1_weight < 4000) .        },"(1980,), (1976,), (1982,), (1973,), (1975,), (1981,), (1978,), (1970,), (1974,), (1971,), (1979,), (1977,), (1972,)",medium,True,1,
78,car_1,What is the horsepower of the car with the largest accelerate?,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,"(71,)",select ?t1_horsepower where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#horsepower ?t1_horsepower . ?t1 dbo:cars_data\#accelerate ?t1_accelerate .        }   order by desc (?t1_accelerate) limit 1,"(71,)",medium,True,1,
79,car_1,"For model volvo, how many cylinders does the car with the least accelerate have?",SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,"(6,)",select ?t1_cylinders where { ?t1 a dbo:cars_data . ?t2 a dbo:car_names . ?t1 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:cars_data\#cylinders ?t1_cylinders . ?t1 dbo:cars_data\#accelerate ?t1_accelerate . ?t2 dbo:car_names\#model ?t2_model . FILTER(?t2_model = 'volvo') .        }   order by asc (?t1_accelerate) limit 1,"(6,)",extra,True,1,
80,car_1,How many cars have a larger accelerate than the car with the largest horsepower?,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,"(399,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#accelerate ?t1_accelerate . FILTER(?t1_accelerate > ?t22_accelerate) .       {select ?t22_accelerate where { ?t22 a dbo:cars_data . ?t22 dbo:cars_data\#accelerate ?t22_accelerate . ?t22 dbo:cars_data\#horsepower ?t22_horsepower .        }   order by desc (?t22_horsepower) limit 1 } },"(399,)",hard,True,1,
81,car_1,How many countries has more than 2 car makers?,"SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 ) as sub;","(4,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:countries .        },"(16,)",easy,False,0,
82,car_1,How many cars has over 6 cylinders?,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,"(108,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 6) .        },"(108,)",easy,True,1,
83,car_1,"For the cars with 4 cylinders, which model has the largest horsepower?",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,"('citroen',)",select ?t1_model where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#model ?t1_model . ?t2 dbo:cars_data\#horsepower ?t2_horsepower . ?t2 dbo:cars_data\#cylinders ?t2_cylinders . FILTER(?t2_cylinders = 4) .        }   order by desc (?t2_horsepower) limit 1,"('citroen',)",extra,True,1,
84,car_1,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.","SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;","(79, 'mazda rx2 coupe'), (119, 'mazda rx3'), (251, 'mazda rx-4'), (342, 'mazda rx-7 gs')",select ?t1_makeid ?t1_make where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#makeid ?t1_makeid . ?t1 dbo:car_names\#make ?t1_make . ?t2 dbo:cars_data\#horsepower ?t2_horsepower . ?t2 dbo:cars_data\#cylinders ?t2_cylinders . FILTER(?t2_horsepower > ?aggregation_t23_horsepower_110 && ?t2_cylinders <= 3) .       {select (min( ?t23_horsepower) as ?aggregation_t23_horsepower_110 ) where { ?t23 a dbo:cars_data . ?t23 dbo:cars_data\#horsepower ?t23_horsepower .        }    } },"(79, 'mazda rx2 coupe'), (119, 'mazda rx3'), (251, 'mazda rx-4'), (342, 'mazda rx-7 gs')",extra,True,1,
85,car_1,"Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?","SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <  4;","(79, 'mazda rx2 coupe'), (119, 'mazda rx3'), (251, 'mazda rx-4'), (342, 'mazda rx-7 gs')",select ?t1_makeid ?t1_make where { ?t1 a dbo:car_names . ?t2 a dbo:cars_data . ?t2 dbo:cars_data\#ref-id ?t1 .  ?t1 dbo:car_names\#makeid ?t1_makeid . ?t1 dbo:car_names\#make ?t1_make . ?t2 dbo:cars_data\#horsepower ?t2_horsepower . ?t2 dbo:cars_data\#cylinders ?t2_cylinders . FILTER(?t2_horsepower > ?aggregation_t23_horsepower_243 && ?t2_cylinders < 4) .       {select (min( ?t23_horsepower) as ?aggregation_t23_horsepower_243 ) where { ?t23 a dbo:cars_data . ?t23 dbo:cars_data\#horsepower ?t23_horsepower .        }    } },"(79, 'mazda rx2 coupe'), (119, 'mazda rx3'), (251, 'mazda rx-4'), (342, 'mazda rx-7 gs')",extra,True,1,
86,car_1,What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?,SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;,"(43.1,)",select ?t1_mpg where { ?t1 a dbo:cars_data . ?t1 dbo:cars_data\#mpg ?t1_mpg . ?t1 dbo:cars_data\#mpg ?t1_mpg . ?t1 dbo:cars_data\#cylinders ?t1_cylinders . ?t1 dbo:cars_data\#year ?t1_year . FILTER(?t1_cylinders = 8 || ?t1_year < 1980) .        }   order by desc (?t1_mpg) limit 1,"(43.1,)",extra,True,1,
87,car_1,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,"('chevrolet',), ('mazda',), ('citroen',), ('saab',), ('audi',), ('nissan',), ('oldsmobile',), ('renault',), ('mercedes-benz',), ('chrysler',), ('pontiac',), ('bmw',), ('volkswagen',), ('fiat',), ('volvo',), ('triumph',), ('honda',), ('buick',), ('plymouth',), ('toyota',), ('subaru',), ('datsun',), ('opel',), ('peugeot',), ('dodge',), ('amc',)",select distinct ?t1_model where { ?t1 a dbo:model_list . ?t2 a dbo:car_names . ?t2 dbo:car_names\#ref-model ?t1 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:cars_data\#weight ?t3_weight . ?t4 dbo:car_makers\#fullname ?t4_fullname . ?t3 a dbo:cars_data . ?t3 dbo:cars_data\#ref-id ?t2 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:cars_data\#weight ?t3_weight . ?t4 dbo:car_makers\#fullname ?t4_fullname . ?t4 a dbo:car_makers . ?t1 dbo:model_list\#ref-maker ?t4 .  ?t1 dbo:model_list\#model ?t1_model . ?t1 dbo:model_list\#model ?t1_model . ?t3 dbo:cars_data\#weight ?t3_weight . ?t4 dbo:car_makers\#fullname ?t4_fullname . FILTER(?t3_weight < 3500 && ?t4_fullname != 'Ford Motor Company') .        },"('plymouth',), ('amc',), ('citroen',), ('buick',), ('toyota',), ('datsun',), ('volkswagen',), ('peugeot',), ('audi',), ('saab',), ('bmw',), ('chevrolet',), ('pontiac',), ('opel',), ('fiat',), ('dodge',), ('mazda',), ('volvo',), ('renault',), ('honda',), ('subaru',), ('oldsmobile',), ('mercedes-benz',), ('triumph',), ('chrysler',), ('nissan',)",extra,True,1,
88,car_1,What are the name of the countries where there is not a single car maker?,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,"('egypt',), ('australia',), ('mexico',), ('new zealand',), ('russia',), ('brazil',), ('nigeria',)",SELECT distinct?col1 WHERE { { select (?t1_countryname as ?col1) where { ?t1 a dbo:countries . ?t1 dbo:countries\#countryname ?t1_countryname .   }}  MINUS {select (?t2_countryname as ?col1) where { ?t2 a dbo:countries . ?t3 a dbo:car_makers . ?t3 dbo:car_makers\#ref-country ?t2 .  ?t2 dbo:countries\#countryname ?t2_countryname . ?t2 dbo:countries\#countryid ?t2_countryid .        }     } },"('russia',), ('nigeria',), ('australia',), ('new zealand',), ('egypt',), ('mexico',), ('brazil',)",hard,True,1,
89,car_1,Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id,  T1.Maker HAVING count(*)  >  3;","(2, 'volkswagen'), (4, 'gm'), (6, 'chrysler'), (5, 'ford'), (8, 'nissan'), (19, 'toyota')",select distinct ?t1_id ?t1_maker where { ?t1 a dbo:car_makers . ?t2 a dbo:model_list . ?t2 dbo:model_list\#ref-maker ?t1 .  ?t1 dbo:car_makers\#id ?t1_id . ?t1 dbo:car_makers\#maker ?t1_maker . ?t1 dbo:car_makers\#id ?t1_id . FILTER (?t1_id in (?t3_id)) . FILTER (?t1_maker in (?t3_maker)) .  { ?t3 a dbo:car_makers . ?t4 a dbo:model_list . ?t4 dbo:model_list\#ref-maker ?t3 .  ?t3 dbo:car_makers\#id ?t3_id . ?t3 dbo:car_makers\#maker ?t3_maker . ?t3 dbo:car_makers\#id ?t3_id .      }      } group by ?t1_id ?t1_maker   having(count( *)  >= 2),"(2, 'volkswagen'), (4, 'gm'), (5, 'ford'), (6, 'chrysler'), (8, 'nissan'), (13, 'daimler benz'), (19, 'toyota')",extra,False,0,
90,car_1,What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",,SELECT distinct?col1?col2 WHERE { { select (?t1_countryid as ?col1) (?t1_countryname as ?col2) where { ?t1 a dbo:countries . ?t2 a dbo:car_makers . ?t2 dbo:car_makers\#ref-country ?t1 .  ?t1 dbo:countries\#countryid ?t1_countryid . ?t1 dbo:countries\#countryname ?t1_countryname . ?t1 dbo:countries\#countryid ?t1_countryid .   }} UNION {select (?t1_countryid as ?col1) (?t1_countryname as ?col2) where { ?t1 a dbo:countries . ?t2 a dbo:car_makers . ?t2 dbo:car_makers\#ref-country ?t1 .  ?t1 dbo:countries\#countryid ?t1_countryid . ?t1 dbo:countries\#countryname ?t1_countryname . ?t1 dbo:countries\#countryid ?t1_countryid . ?t3 dbo:model_list\#model ?t3_model . ?t3 a dbo:model_list . ?t3 dbo:model_list\#ref-maker ?t2 .  ?t1 dbo:countries\#countryid ?t1_countryid . ?t1 dbo:countries\#countryname ?t1_countryname . ?t1 dbo:countries\#countryid ?t1_countryid . ?t3 dbo:model_list\#model ?t3_model . FILTER(?t3_model = 'fiat') .        }      } } group by ?t1_countryid ?t1_countryname   having(count( *)  > 3),,extra,,-2,HTTP Error 400: 
91,flight_2,Which country does Airline 'JetBlue Airways' belong to?,SELECT Country FROM AIRLINES WHERE Airline  =  'JetBlue Airways',"('USA',)",select ?t1_country where { ?t1 a dbo:airlines . ?t1 dbo:airlines\#country ?t1_country . ?t1 dbo:airlines\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        },"('USA',)",easy,True,1,
92,flight_2,What is the abbreviation of Airline 'JetBlue Airways'?,SELECT Abbreviation FROM AIRLINES WHERE Airline  =  'JetBlue Airways',"('JetBlue',)",select ?t1_abbreviation where { ?t1 a dbo:airlines . ?t1 dbo:airlines\#abbreviation ?t1_abbreviation . ?t1 dbo:airlines\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        },"('JetBlue',)",easy,True,1,
93,flight_2,List all airline names and their abbreviations in 'USA'.,"SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  'USA'","('United Airlines', 'UAL'), ('US Airways', 'USAir'), ('Delta Airlines', 'Delta'), ('Southwest Airlines', 'Southwest'), ('American Airlines', 'American'), ('Northwest Airlines', 'Northwest'), ('Continental Airlines', 'Continental'), ('JetBlue Airways', 'JetBlue'), ('Frontier Airlines', 'Frontier'), ('AirTran Airways', 'AirTran'), ('Allegiant Air', 'Allegiant'), ('Virgin America', 'Virgin')",select ?t1_airline ?t1_abbreviation where { ?t1 a dbo:airlines . ?t1 dbo:airlines\#airline ?t1_airline . ?t1 dbo:airlines\#abbreviation ?t1_abbreviation . ?t1 dbo:airlines\#country ?t1_country . FILTER(?t1_country = 'USA') .        },"('United Airlines', 'UAL'), ('US Airways', 'USAir'), ('Delta Airlines', 'Delta'), ('Southwest Airlines', 'Southwest'), ('American Airlines', 'American'), ('Northwest Airlines', 'Northwest'), ('Continental Airlines', 'Continental'), ('JetBlue Airways', 'JetBlue'), ('Frontier Airlines', 'Frontier'), ('AirTran Airways', 'AirTran'), ('Allegiant Air', 'Allegiant'), ('Virgin America', 'Virgin')",medium,True,1,
94,flight_2,List the airport code and name in the city of Anthony.,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  'Anthony'","('ANY', 'Anthony')",select ?t1_airportcode ?t1_airportname where { ?t1 a dbo:airports . ?t1 dbo:airports\#airportcode ?t1_airportcode . ?t1 dbo:airports\#airportname ?t1_airportname . ?t1 dbo:airports\#city ?t1_city . FILTER(?t1_city = 'Anthony') .        },"('ANY', 'Anthony')",medium,True,1,
95,flight_2,How many airlines do we have?,SELECT count(*) FROM AIRLINES,"(12,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:airlines .        },"(12,)",easy,True,1,
96,flight_2,How many airports do we have?,SELECT count(*) FROM AIRPORTS,"(100,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:airports .        },"(100,)",easy,True,1,
97,flight_2,How many flights do we have?,SELECT count(*) FROM FLIGHTS,"(1200,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights .        },"(1200,)",easy,True,1,
98,flight_2,Which airline has abbreviation 'UAL'?,SELECT Airline FROM AIRLINES WHERE Abbreviation  =  'UAL',"('United Airlines',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t1 dbo:airlines\#airline ?t1_airline . ?t1 dbo:airlines\#abbreviation ?t1_abbreviation . FILTER(?t1_abbreviation = 'UAL') .        },"('United Airlines',)",easy,True,1,
99,flight_2,How many airlines are from USA?,SELECT count(*) FROM AIRLINES WHERE Country  =  'USA',"(12,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:airlines . ?t1 dbo:airlines\#country ?t1_country . FILTER(?t1_country = 'USA') .        },"(12,)",easy,True,1,
100,flight_2,Which city and country is the Alton airport at?,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  'Alton'","('Alton', 'United States')",select ?t1_city ?t1_country where { ?t1 a dbo:airports . ?t1 dbo:airports\#city ?t1_city . ?t1 dbo:airports\#country ?t1_country . ?t1 dbo:airports\#airportname ?t1_airportname . FILTER(?t1_airportname = 'Alton') .        },"('Alton', 'United States')",medium,True,1,
101,flight_2,What is the airport name for airport 'AKO'?,SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  'AKO',"('Colorado Plains Regional Airport',)",select ?t1_airportname where { ?t1 a dbo:airports . ?t1 dbo:airports\#airportname ?t1_airportname . ?t1 dbo:airports\#airportcode ?t1_airportcode . FILTER(?t1_airportcode = 'AKO') .        },"('Colorado Plains Regional Airport',)",easy,True,1,
102,flight_2,What are airport names at City 'Aberdeen'?,SELECT AirportName FROM AIRPORTS WHERE City = 'Aberdeen',"('Phillips AAF',), ('Municipal',)",select ?t1_airportname where { ?t1 a dbo:airports . ?t1 dbo:airports\#airportname ?t1_airportname . ?t1 dbo:airports\#city ?t1_city . FILTER(?t1_city = 'Aberdeen') .        },"('Phillips AAF',), ('Municipal',)",easy,True,1,
103,flight_2,How many flights depart from 'APG'?,SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  'APG',"(11,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t1 dbo:flights\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        },"(11,)",easy,True,1,
104,flight_2,How many flights have destination ATO?,SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  'ATO',"(7,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t1 dbo:flights\#destairport ?t1_destairport . FILTER(?t1_destairport = 'ATO') .        },"(7,)",easy,True,1,
105,flight_2,How many flights depart from City Aberdeen?,SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen',"(21,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        },"(21,)",medium,True,1,
106,flight_2,How many flights arriving in Aberdeen city?,SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen',"(21,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        },"(21,)",medium,True,1,
107,flight_2,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  'Ashley' AND T3.City  =  'Aberdeen',"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t2 dbo:airports\#city ?t2_city . ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Ashley' && ?t2_city = 'Aberdeen') .        },"(0,)",hard,False,0,
108,flight_2,How many flights does airline 'JetBlue Airways' have?,SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = 'JetBlue Airways',"(100,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airlines . ?t2 dbo:airlines\#ref-uid ?t1 .  ?t2 dbo:airlines\#airline ?t2_airline . FILTER(?t2_airline = 'JetBlue Airways') .        },"(100,)",medium,True,1,
109,flight_2,How many 'United Airlines' flights go to Airport 'ASY'?,SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.DestAirport  =  'ASY',"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airlines . ?t2 dbo:airlines\#ref-uid ?t1 .  ?t2 dbo:airlines\#airline ?t2_airline . ?t1 dbo:flights\#destairport ?t1_destairport . FILTER(?t2_airline = 'United Airlines' && ?t1_destairport = 'ASY') .        },"(1,)",medium,True,1,
110,flight_2,How many 'United Airlines' flights depart from Airport 'AHD'?,SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.SourceAirport  =  'AHD',"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airlines . ?t2 dbo:airlines\#ref-uid ?t1 .  ?t2 dbo:airlines\#airline ?t2_airline . ?t1 dbo:flights\#sourceairport ?t1_sourceairport . FILTER(?t2_airline = 'United Airlines' && ?t1_sourceairport = 'AHD') .        },"(3,)",medium,True,1,
111,flight_2,How many United Airlines flights go to City 'Aberdeen'?,SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  'Aberdeen' AND T3.Airline  =  'United Airlines',"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:airlines . ?t13 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t13 .  ?t2 dbo:airports\#city ?t2_city . ?t1 dbo:airlines\#airline ?t1_airline . ?t2 a dbo:airports . ?t13 dbo:flights\#ref-destairport ?t2 .  ?t2 dbo:airports\#city ?t2_city . ?t1 dbo:airlines\#airline ?t1_airline . FILTER(?t2_city = 'Aberdeen' && ?t1_airline = 'United Airlines') .        },"(3,)",hard,True,1,
112,flight_2,Which city has most number of arriving flights?,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"('Albany',)",select ?t1_city where { ?t1 a dbo:airports . ?t2 a dbo:flights . ?t2 dbo:flights\#ref-destairport ?t1 .  ?t1 dbo:airports\#city ?t1_city . ?t1 dbo:airports\#airportcode ?t1_airportcode .        } group by ?t1_city  order by desc (count(*)) limit 1,"('Albany',)",extra,True,1,
113,flight_2,Which city has most number of departing flights?,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"('Albany',)",select ?t1_city where { ?t1 a dbo:airports . ?t2 a dbo:flights . ?t2 dbo:flights\#ref-destairport ?t1 .  ?t1 dbo:airports\#city ?t1_city . ?t1 dbo:airports\#airportcode ?t1_airportcode .        } group by ?t1_city  order by desc (count(*)) limit 1,"('Albany',)",extra,True,1,
114,flight_2,What is the code of airport that has the highest number of flights?,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,"('AAF',)",select ?t1_airportcode where { ?t1 a dbo:airports . ?t2 a dbo:flights . ?t2 dbo:flights\#ref-destairport ?t1 .  ?t1 dbo:airports\#airportcode ?t1_airportcode . ?t1 dbo:airports\#airportcode ?t1_airportcode .        } group by ?t1_airportcode  order by desc (count(*)) limit 1,"('AAF',)",extra,True,1,
115,flight_2,What is the code of airport that has fewest number of flights?,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,"('AID',)",select ?t1_airportcode where { ?t1 a dbo:airports . ?t2 a dbo:flights . ?t2 dbo:flights\#ref-destairport ?t1 .  ?t1 dbo:airports\#airportcode ?t1_airportcode . ?t1 dbo:airports\#airportcode ?t1_airportcode .        } group by ?t1_airportcode  order by asc (count(*)) limit 1,"('AID',)",extra,True,1,
116,flight_2,Which airline has most number of flights?,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"('United Airlines',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t1 dbo:airlines\#uid ?t1_uid .        } group by ?t1_airline  order by desc (count(*)) limit 1,"('AirTran Airways',)",extra,True,1,false_negative
117,flight_2,Find the abbreviation and country of the airline that has fewest number of flights?,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Abbreviation ,  T1.Country ORDER BY count(*) LIMIT 1","('UAL', 'USA')",select ?t1_abbreviation ?t1_country where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#abbreviation ?t1_abbreviation . ?t1 dbo:airlines\#country ?t1_country . ?t1 dbo:airlines\#uid ?t1_uid .        } group by ?t1_abbreviation ?t1_country  order by asc (count(*)) limit 1,"('AirTran', 'USA')",extra,True,1,false_negative
118,flight_2,What are airlines that have some flight departing from airport 'AHD'?,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'AHD',"('United Airlines',), ('United Airlines',), ('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Northwest Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Virgin America',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t2 dbo:flights\#sourceairport ?t2_sourceairport . FILTER(?t2_sourceairport = 'AHD') .        },"('United Airlines',), ('United Airlines',), ('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Northwest Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Virgin America',)",medium,True,1,
119,flight_2,What are airlines that have flights arriving at airport 'AHD'?,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  'AHD',"('United Airlines',), ('United Airlines',), ('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Northwest Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Virgin America',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t2 dbo:flights\#destairport ?t2_destairport . FILTER(?t2_destairport = 'AHD') .        },"('United Airlines',), ('United Airlines',), ('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Northwest Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Virgin America',)",medium,True,1,
120,flight_2,Find all airlines that have flights from both airports 'APG' and 'CVO'.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO',"('United Airlines',), ('AirTran Airways',), ('Delta Airlines',), ('Allegiant Air',), ('Northwest Airlines',), ('US Airways',), ('Southwest Airlines',)",select distinct ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t2 dbo:flights\#sourceairport ?t2_sourceairport . FILTER(?t2_sourceairport = 'APG') . FILTER (?t1_airline in (?t3_airline)) .  { ?t3 a dbo:airlines . ?t4 a dbo:flights . ?t3 dbo:airlines\#ref-uid ?t4 .  ?t3 dbo:airlines\#airline ?t3_airline . ?t4 dbo:flights\#sourceairport ?t4_sourceairport .  FILTER(?t4_sourceairport = 'CVO') .     }      },"('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Southwest Airlines',), ('Northwest Airlines',), ('AirTran Airways',), ('Allegiant Air',)",extra,True,1,
121,flight_2,Find all airlines that have flights from airport 'CVO' but not from 'APG'.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO' EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG',"('American Airlines',), ('Virgin America',), ('Frontier Airlines',), ('JetBlue Airways',)",SELECT distinct?col1 WHERE { { select (?t1_airline as ?col1) where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t2 dbo:flights\#sourceairport ?t2_sourceairport . FILTER(?t2_sourceairport = 'CVO') .   }}  MINUS {select (?t3_airline as ?col1) where { ?t3 a dbo:airlines . ?t4 a dbo:flights . ?t3 dbo:airlines\#ref-uid ?t4 .  ?t3 dbo:airlines\#airline ?t3_airline . ?t4 dbo:flights\#sourceairport ?t4_sourceairport . FILTER(?t4_sourceairport = 'APG') .        }     } },"('American Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('Virgin America',)",extra,True,1,
122,flight_2,Find all airlines that have at least 10 flights.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,"('United Airlines',), ('AirTran Airways',), ('American Airlines',), ('Delta Airlines',), ('Virgin America',), ('Allegiant Air',), ('Northwest Airlines',), ('Frontier Airlines',), ('US Airways',), ('JetBlue Airways',), ('Southwest Airlines',), ('Continental Airlines',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t1 dbo:airlines\#uid ?t1_uid .        } group by ?t1_airline   having(count( *)  > 10),"('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Southwest Airlines',), ('American Airlines',), ('Northwest Airlines',), ('Continental Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Allegiant Air',), ('Virgin America',)",medium,True,1,
123,flight_2,Find all airlines that have fewer than 200 flights.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,"('United Airlines',), ('AirTran Airways',), ('American Airlines',), ('Delta Airlines',), ('Virgin America',), ('Allegiant Air',), ('Northwest Airlines',), ('Frontier Airlines',), ('US Airways',), ('JetBlue Airways',), ('Southwest Airlines',), ('Continental Airlines',)",select ?t1_airline where { ?t1 a dbo:airlines . ?t2 a dbo:flights . ?t1 dbo:airlines\#ref-uid ?t2 .  ?t1 dbo:airlines\#airline ?t1_airline . ?t1 dbo:airlines\#uid ?t1_uid .        } group by ?t1_airline   having(count( *)  < 200),"('United Airlines',), ('US Airways',), ('Delta Airlines',), ('Southwest Airlines',), ('American Airlines',), ('Northwest Airlines',), ('Continental Airlines',), ('JetBlue Airways',), ('Frontier Airlines',), ('AirTran Airways',), ('Allegiant Air',), ('Virgin America',)",medium,True,1,
124,flight_2,What are flight numbers of Airline 'United Airlines'?,SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  'United Airlines',"(28,), (29,), (44,), (45,), (54,), (55,), (90,), (91,), (108,), (109,), (142,), (143,), (148,), (149,), (198,), (199,), (226,), (227,), (276,), (277,), (308,), (309,), (326,), (327,), (370,), (371,), (414,), (415,), (424,), (425,), (470,), (471,), (520,), (521,), (556,), (557,), (560,), (561,), (604,), (605,), (608,), (609,), (626,), (627,), (658,), (659,), (708,), (709,), (744,), (745,), (754,), (755,), (786,), (787,), (810,), (811,), (828,), (829,), (878,), (879,), (888,), (889,), (900,), (901,), (924,), (925,), (946,), (947,), (996,), (997,), (1000,), (1001,), (1026,), (1027,), (1062,), (1063,), (1068,), (1069,), (1100,), (1101,), (1144,), (1145,), (1166,), (1167,), (1168,), (1169,), (1192,), (1193,), (1208,), (1209,), (1216,), (1217,), (1250,), (1251,), (1274,), (1275,), (1284,), (1285,), (1328,), (1329,)",select ?t1_flightno where { ?t1 a dbo:flights . ?t2 a dbo:airlines . ?t2 dbo:airlines\#ref-uid ?t1 .  ?t1 dbo:flights\#flightno ?t1_flightno . ?t2 dbo:airlines\#airline ?t2_airline . FILTER(?t2_airline = 'United Airlines') .        },"(28,), (29,), (44,), (45,), (54,), (55,), (90,), (91,), (108,), (109,), (142,), (143,), (148,), (149,), (198,), (199,), (226,), (227,), (276,), (277,), (308,), (309,), (326,), (327,), (370,), (371,), (414,), (415,), (424,), (425,), (470,), (471,), (520,), (521,), (556,), (557,), (560,), (561,), (604,), (605,), (608,), (609,), (626,), (627,), (658,), (659,), (708,), (709,), (744,), (745,), (754,), (755,), (786,), (787,), (810,), (811,), (828,), (829,), (878,), (879,), (888,), (889,), (900,), (901,), (924,), (925,), (946,), (947,), (996,), (997,), (1000,), (1001,), (1026,), (1027,), (1062,), (1063,), (1068,), (1069,), (1100,), (1101,), (1144,), (1145,), (1166,), (1167,), (1168,), (1169,), (1192,), (1193,), (1208,), (1209,), (1216,), (1217,), (1250,), (1251,), (1274,), (1275,), (1284,), (1285,), (1328,), (1329,)",medium,True,1,
125,flight_2,What are flight numbers of flights departing from Airport 'APG'?,SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  'APG',"(28,), (1275,), (489,), (1377,), (101,), (743,), (29,), (478,), (382,), (1172,), (143,)",select ?t1_flightno where { ?t1 a dbo:flights . ?t1 dbo:flights\#flightno ?t1_flightno . ?t1 dbo:flights\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        },"(28,), (1275,), (489,), (1377,), (101,), (743,), (29,), (478,), (382,), (1172,), (143,)",easy,True,1,
126,flight_2,What are flight numbers of flights arriving at Airport 'APG'?,SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  'APG',"(29,), (1274,), (488,), (1376,), (100,), (742,), (28,), (479,), (383,), (1173,), (142,)",select ?t1_flightno where { ?t1 a dbo:flights . ?t1 dbo:flights\#flightno ?t1_flightno . ?t1 dbo:flights\#destairport ?t1_destairport . FILTER(?t1_destairport = 'APG') .        },"(29,), (1274,), (488,), (1376,), (100,), (742,), (28,), (479,), (383,), (1173,), (142,)",easy,True,1,
127,flight_2,What are flight numbers of flights departing from City 'Aberdeen '?,SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen',"(28,), (91,), (1275,), (489,), (1377,), (101,), (743,), (1138,), (1248,), (29,), (401,), (478,), (1071,), (45,), (754,), (909,), (382,), (1172,), (143,), (513,), (842,)",select ?t1_flightno where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t1 dbo:flights\#flightno ?t1_flightno . ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        },"(29,), (1274,), (488,), (1376,), (100,), (742,), (28,), (479,), (383,), (1173,), (142,), (90,), (1139,), (1249,), (400,), (1070,), (44,), (755,), (908,), (512,), (843,)",medium,False,0,
128,flight_2,What are flight numbers of flights arriving at City 'Aberdeen'?,SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen',"(29,), (90,), (1274,), (488,), (1376,), (100,), (742,), (1139,), (1249,), (28,), (400,), (479,), (1070,), (44,), (755,), (908,), (383,), (1173,), (142,), (512,), (843,)",select ?t1_flightno where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t1 dbo:flights\#flightno ?t1_flightno . ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        },"(29,), (1274,), (488,), (1376,), (100,), (742,), (28,), (479,), (383,), (1173,), (142,), (90,), (1139,), (1249,), (400,), (1070,), (44,), (755,), (908,), (512,), (843,)",medium,True,1,
129,flight_2,Find the number of flights landing in the city of Aberdeen or Abilene.,SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  'Aberdeen' OR T2.city  =  'Abilene',"(47,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:flights . ?t2 a dbo:airports . ?t1 dbo:flights\#ref-destairport ?t2 .  ?t2 dbo:airports\#city ?t2_city . ?t2 dbo:airports\#city ?t2_city . FILTER(?t2_city = 'Aberdeen' || ?t2_city = 'Abilene') .        },"(47,)",hard,True,1,
130,flight_2,Find the name of airports which do not have any flight in and out.,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),,select ?t1_airportname where { ?t1 a dbo:airports . ?t1 dbo:airports\#airportname ?t1_airportname . ?t1 dbo:airports\#airportcode ?t1_airportcode .     Filter not exists {{select ?t22_sourceairport where { ?t22 a dbo:flights . ?t22 dbo:flights\#sourceairport ?t22_sourceairport .        }    } FILTER (?t1_airportcode in (?t22_sourceairport))}  },,hard,True,1,
131,employee_hire_evaluation,How many employees are there?,SELECT count(*) FROM employee,"(10,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:employee .        },"(10,)",easy,True,1,
132,employee_hire_evaluation,Sort employee names by their age in ascending order.,SELECT name FROM employee ORDER BY age,"('George Chuter',), ('Andrew Sheridan',), ('Tim Payne',), ('Lee Mears',), ('Matt Stevens',), ('Jason Hobson',), ('Steve Borthwick',), ('Louis Deacon',), ('Phil Vickery',), ('Mark Regan',)",select ?t1_name where { ?t1 a dbo:employee . ?t1 dbo:employee\#name ?t1_name . ?t1 dbo:employee\#age ?t1_age .        }  order by asc (?t1_age),"('George Chuter',), ('Andrew Sheridan',), ('Lee Mears',), ('Tim Payne',), ('Matt Stevens',), ('Jason Hobson',), ('Steve Borthwick',), ('Louis Deacon',), ('Phil Vickery',), ('Mark Regan',)",easy,True,1,
133,employee_hire_evaluation,What is the number of employees from each city?,"SELECT count(*) ,  city FROM employee GROUP BY city","(3, 'Bristol'), (1, 'Leicester'), (2, 'Wasps'), (1, 'Sale'), (3, 'Bath')",select (count( *) as ?aggregation_all) ?t1_city where { ?t1 a dbo:employee . ?t1 dbo:employee\#city ?t1_city .        } group by ?t1_city,"(3, 'Bristol'), (3, 'Bath'), (2, 'Wasps'), (1, 'Sale'), (1, 'Leicester')",medium,True,1,
134,employee_hire_evaluation,Which cities do more than one employee under age 30 come from?,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,"('Bath',)",select ?t1_city where { ?t1 a dbo:employee . ?t1 dbo:employee\#city ?t1_city . ?t1 dbo:employee\#age ?t1_age . FILTER(?t1_age < 30) .        } group by ?t1_city   having(count( *)  > 1),"('Bath',)",medium,True,1,
135,employee_hire_evaluation,Find the number of shops in each location.,"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","(1, 'Mariehamn'), (1, 'Valkeakoski'), (1, 'Lahti'), (1, 'Kuopio'), (1, 'Turku'), (1, 'Helsinki'), (1, 'Kotka'), (1, 'Jakobstad'), (1, 'Espoo')",select (count( *) as ?aggregation_all) ?t1_location where { ?t1 a dbo:shop . ?t1 dbo:shop\#location ?t1_location .        } group by ?t1_location,"(1, 'Valkeakoski'), (1, 'Helsinki'), (1, 'Espoo'), (1, 'Turku'), (1, 'Jakobstad'), (1, 'Kotka'), (1, 'Kuopio'), (1, 'Lahti'), (1, 'Mariehamn')",medium,True,1,
136,employee_hire_evaluation,Find the manager name and district of the shop whose number of products is the largest.,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","('Ilkka Mäkelä', 'Lahden Stadion')",select ?t1_manager_name ?t1_district where { ?t1 a dbo:shop . ?t1 dbo:shop\#manager_name ?t1_manager_name . ?t1 dbo:shop\#district ?t1_district . ?t1 dbo:shop\#number_products ?t1_number_products .        }   order by desc (?t1_number_products) limit 1,"('Ilkka Mäkelä', 'Lahden Stadion')",medium,True,1,
137,employee_hire_evaluation,find the minimum and maximum number of products of all stores.,"SELECT min(Number_products) ,  max(Number_products) FROM shop","(1600, 15000)",select (min( ?t1_number_products) as ?aggregation_t1_number_products_357 ) (max( ?t1_number_products) as ?aggregation_t1_number_products_137 ) where { ?t1 a dbo:shop . ?t1 dbo:shop\#number_products ?t1_number_products . ?t1 dbo:shop\#number_products ?t1_number_products .        },"(1600, 15000)",medium,True,1,
138,employee_hire_evaluation,"Return the name, location and district of all shops in descending order of number of products.","SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC","('FC Lahti', 'Lahti', 'Lahden Stadion'), ('HJK', 'Helsinki', 'Finnair Stadium'), ('FC Inter', 'Turku', 'Veritas Stadion'), ('FC Honka', 'Espoo', 'Tapiolan Urheilupuisto'), ('FF Jaro', 'Jakobstad', 'Jakobstads Centralplan'), ('FC KooTeePee', 'Kotka', 'Arto Tolsa Areena'), ('FC Haka', 'Valkeakoski', 'Tehtaan kenttä'), ('KuPS', 'Kuopio', 'Magnum Areena'), ('IFK Mariehamn', 'Mariehamn', 'Wiklöf Holding Arena')",select ?t1_name ?t1_location ?t1_district where { ?t1 a dbo:shop . ?t1 dbo:shop\#name ?t1_name . ?t1 dbo:shop\#location ?t1_location . ?t1 dbo:shop\#district ?t1_district . ?t1 dbo:shop\#number_products ?t1_number_products .        }  order by desc (?t1_number_products),"('FC Lahti', 'Lahti', 'Lahden Stadion'), ('HJK', 'Helsinki', 'Finnair Stadium'), ('FC Inter', 'Turku', 'Veritas Stadion'), ('FC Honka', 'Espoo', 'Tapiolan Urheilupuisto'), ('FF Jaro', 'Jakobstad', 'Jakobstads Centralplan'), ('FC KooTeePee', 'Kotka', 'Arto Tolsa Areena'), ('FC Haka', 'Valkeakoski', 'Tehtaan kenttä'), ('KuPS', 'Kuopio', 'Magnum Areena'), ('IFK Mariehamn', 'Mariehamn', 'Wiklöf Holding Arena')",medium,True,1,
139,employee_hire_evaluation,Find the names of stores whose number products is more than the average number of products.,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),"('HJK',), ('FC Inter',), ('FC Lahti',)",select ?t1_name where { ?t1 a dbo:shop . ?t1 dbo:shop\#name ?t1_name . ?t1 dbo:shop\#number_products ?t1_number_products . FILTER(?t1_number_products > ?aggregation_t22_number_products_125) .       {select (avg( ?t22_number_products) as ?aggregation_t22_number_products_125 ) where { ?t22 a dbo:shop . ?t22 dbo:shop\#number_products ?t22_number_products .        }    } },"('HJK',), ('FC Inter',), ('FC Lahti',)",hard,True,1,
140,employee_hire_evaluation,find the name of employee who was awarded the most times in the evaluation.,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1,"('George Chuter',)",select ?t1_name where { ?t1 a dbo:employee . ?t2 a dbo:evaluation . ?t2 dbo:evaluation\#ref-employee_id ?t1 .  ?t1 dbo:employee\#name ?t1_name . ?t1 dbo:employee\#employee_id ?t1_employee_id .        } group by ?t1_name  order by desc (count(*)) limit 1,"('George Chuter',)",extra,True,1,
141,employee_hire_evaluation,Find the name of the employee who got the highest one time bonus.,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,"('Louis Deacon',)",select ?t1_name where { ?t1 a dbo:employee . ?t2 a dbo:evaluation . ?t2 dbo:evaluation\#ref-employee_id ?t1 .  ?t1 dbo:employee\#name ?t1_name . ?t2 dbo:evaluation\#bonus ?t2_bonus .        }   order by desc (?t2_bonus) limit 1,"('Louis Deacon',)",hard,True,1,
142,employee_hire_evaluation,Find the names of employees who never won any award in the evaluation.,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),"('Mark Regan',), ('Tim Payne',), ('Andrew Sheridan',), ('Phil Vickery',), ('Steve Borthwick',)",select ?t1_name where { ?t1 a dbo:employee . ?t1 dbo:employee\#name ?t1_name . ?t1 dbo:employee\#employee_id ?t1_employee_id .     Filter not exists {{select ?t22_employee_id where { ?t22 a dbo:evaluation . ?t22 dbo:evaluation\#employee_id ?t22_employee_id .        }    } FILTER (?t1_employee_id in (?t22_employee_id))}  },"('Mark Regan',), ('Tim Payne',), ('Andrew Sheridan',), ('Phil Vickery',), ('Steve Borthwick',)",hard,True,1,
143,employee_hire_evaluation,What is the name of the shop that is hiring the largest number of employees?,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name ORDER BY count(*) DESC LIMIT 1,"('FC Haka',)",select ?t1_name where { ?t1 a dbo:shop . ?t3 a dbo:hiring . ?t3 dbo:hiring\#ref-shop_id ?t1 .  ?t1 dbo:shop\#name ?t1_name . ?t1 dbo:shop\#shop_id ?t1_shop_id .        } group by ?t1_name  order by desc (count(*)) limit 1,"('FC Haka',)",extra,True,1,
144,employee_hire_evaluation,Find the name of the shops that do not hire any employee.,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),"('FC Honka',), ('KuPS',), ('IFK Mariehamn',)",select ?t1_name where { ?t1 a dbo:shop . ?t1 dbo:shop\#name ?t1_name . ?t1 dbo:shop\#shop_id ?t1_shop_id .     Filter not exists {{select ?t22_shop_id where { ?t22 a dbo:hiring . ?t22 dbo:hiring\#shop_id ?t22_shop_id .        }    } FILTER (?t1_shop_id in (?t22_shop_id))}  },"('FC Honka',), ('KuPS',), ('IFK Mariehamn',)",hard,True,1,
145,employee_hire_evaluation,Find the number of employees hired in each shop; show the shop name as well.,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","(2, 'FC Haka'), (1, 'FC KooTeePee'), (1, 'FC Lahti'), (1, 'HJK'), (1, 'FF Jaro'), (1, 'FC Inter')",select (count( *) as ?aggregation_all) ?t2_name where { ?t13 a dbo:hiring . ?t2 a dbo:shop . ?t13 dbo:hiring\#ref-shop_id ?t2 .  ?t2 dbo:shop\#name ?t2_name .        } group by ?t2_name,"(2, 'FC Haka'), (1, 'FC Lahti'), (1, 'FC Inter'), (1, 'FF Jaro'), (1, 'HJK'), (1, 'FC KooTeePee')",medium,True,1,
146,employee_hire_evaluation,What is total bonus given in all evaluations?,SELECT sum(bonus) FROM evaluation,"(19500.0,)",select (sum( ?t1_bonus) as ?aggregation_t1_bonus_202 ) where { ?t1 a dbo:evaluation . ?t1 dbo:evaluation\#bonus ?t1_bonus .        },"(19500.0,)",easy,True,1,
147,employee_hire_evaluation,Give me all the information about hiring.,SELECT * FROM hiring,"(1, 1, '2009', True), (1, 2, '2003', True), (8, 3, '2011', False), (4, 4, '2012', True), (5, 5, '2013', True), (2, 6, '2010', False), (6, 7, '2008', True)",select ?literal where { ?t1 a dbo:hiring . ?t1 ?t2 ?literal . filter isliteral(?literal) .        },"('2009',), (True,), (1,), (1,), ('2003',), (True,), (2,), (1,), ('2011',), (False,), (3,), (8,), ('2012',), (True,), (4,), (4,), ('2013',), (True,), (5,), (5,), ('2010',), (False,), (6,), (2,), ('2008',), (True,), (7,), (6,)",easy,True,1,false_negative
148,employee_hire_evaluation,Which district has both stores with less than 3000 products and stores with more than 10000 products?,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,,select distinct ?t1_district where { ?t1 a dbo:shop . ?t1 dbo:shop\#district ?t1_district . ?t1 dbo:shop\#number_products ?t1_number_products . FILTER(?t1_number_products < 3000) . FILTER (?t1_district in (?t2_district)) .  { ?t2 a dbo:shop . ?t2 dbo:shop\#district ?t2_district . ?t2 dbo:shop\#number_products ?t2_number_products .  FILTER(?t2_number_products > 10000) .     }      },,hard,True,1,
149,employee_hire_evaluation,How many different store locations are there?,SELECT count(DISTINCT LOCATION) FROM shop,"(9,)",select distinct (count(distinct ?t1_location) as ?aggregation_t1_location_483 ) where { ?t1 a dbo:shop . ?t1 dbo:shop\#location ?t1_location .        },"(9,)",easy,True,1,
150,cre_doc_template_mgt,How many documents do we have?,SELECT count(*) FROM Documents,"(15,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:documents .        },"(15,)",easy,True,1,
151,cre_doc_template_mgt,"List document IDs, document names, and document descriptions for all documents.","SELECT document_id ,  document_name ,  document_description FROM Documents","(0, 'Introduction of OS', 'n'), (1, 'Understanding DB', 'y'), (3, 'Summer Show', 'u'), (76, 'Robbin CV', 'y'), (80, 'Welcome to NY', 'h'), (82, 'Data base', 'w'), (2394, 'Customer reviews', 'y'), (3830, 'Do not panic', 'k'), (33930, 'How Google people work', 'z'), (50123, 'Learning French', 'r'), (651512, 'How to write a CV', 'f'), (801801, 'How to read a book', 'w'), (3540024, 'Palm reading', 'y'), (16514113, 'A history of Arts', 'h'), (385906526, 'About Korea', 'b')",select ?t1_document_id ?t1_document_name ?t1_document_description where { ?t1 a dbo:documents . ?t1 dbo:documents\#document_id ?t1_document_id . ?t1 dbo:documents\#document_name ?t1_document_name . ?t1 dbo:documents\#document_description ?t1_document_description .        },"(0, 'Introduction of OS', 'n'), (1, 'Understanding DB', 'y'), (3, 'Summer Show', 'u'), (76, 'Robbin CV', 'y'), (80, 'Welcome to NY', 'h'), (82, 'Data base', 'w'), (2394, 'Customer reviews', 'y'), (3830, 'Do not panic', 'k'), (33930, 'How Google people work', 'z'), (50123, 'Learning French', 'r'), (651512, 'How to write a CV', 'f'), (801801, 'How to read a book', 'w'), (3540024, 'Palm reading', 'y'), (16514113, 'A history of Arts', 'h'), (385906526, 'About Korea', 'b')",medium,True,1,
152,cre_doc_template_mgt,What is the document name and template id for document with description with the letter 'w' in it?,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE '%w%'","('Data base', 11), ('How to read a book', 4)","select ?t1_document_name ?t1_template_id where { ?t1 a dbo:documents . ?t1 dbo:documents\#document_name ?t1_document_name . ?t1 dbo:documents\#template_id ?t1_template_id . ?t1 dbo:documents\#document_description ?t1_document_description . FILTER(contains (?t1_document_description, 'w')) .        }","('Data base', 11), ('How to read a book', 4)",medium,True,1,
153,cre_doc_template_mgt,"What is the document id, template id and description for document named 'Robbin CV'?","SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  'Robbin CV'","(76, 20, 'y')",select ?t1_document_id ?t1_template_id ?t1_document_description where { ?t1 a dbo:documents . ?t1 dbo:documents\#document_id ?t1_document_id . ?t1 dbo:documents\#template_id ?t1_template_id . ?t1 dbo:documents\#document_description ?t1_document_description . ?t1 dbo:documents\#document_name ?t1_document_name . FILTER(?t1_document_name = 'Robbin CV') .        },"(76, 20, 'y')",medium,True,1,
154,cre_doc_template_mgt,How many different templates do all document use?,SELECT count(DISTINCT template_id) FROM Documents,"(12,)",select distinct (count(distinct ?t1_template_id) as ?aggregation_t1_template_id_139 ) where { ?t1 a dbo:documents . ?t1 dbo:documents\#template_id ?t1_template_id .        },"(12,)",easy,True,1,
155,cre_doc_template_mgt,How many documents are using the template with type code 'PPT'?,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:documents . ?t2 a dbo:templates . ?t1 dbo:documents\#ref-template_id ?t2 .  ?t2 dbo:templates\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'PPT') .        },"(3,)",medium,True,1,
156,cre_doc_template_mgt,Show all template ids and number of documents using each template.,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id","(14, 2), (22, 1), (20, 1), (8, 1), (11, 2), (10, 1), (7, 1), (1, 1), (25, 2), (4, 1), (21, 1), (6, 1)",select ?t1_template_id (count( *) as ?aggregation_all) where { ?t1 a dbo:documents . ?t1 dbo:documents\#template_id ?t1_template_id .        } group by ?t1_template_id,"(7, 1), (25, 2), (6, 1), (20, 1), (14, 2), (11, 2), (10, 1), (1, 1), (22, 1), (21, 1), (4, 1), (8, 1)",medium,True,1,
157,cre_doc_template_mgt,What is the id and type code for the template used by the most documents?,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ,  T2.Template_Type_Code ORDER BY count(*) DESC LIMIT 1","(25, 'PP')",select ?t1_template_id ?t2_template_type_code where { ?t1 a dbo:documents . ?t2 a dbo:templates . ?t1 dbo:documents\#ref-template_id ?t2 .  ?t1 dbo:documents\#template_id ?t1_template_id . ?t2 dbo:templates\#template_type_code ?t2_template_type_code .        } group by ?t1_template_id ?t2_template_type_code  order by desc (count(*)) limit 1,"(11, 'BK')",extra,True,1,false_negative
158,cre_doc_template_mgt,Show ids for all templates that are used by more than one document.,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,"(14,), (11,), (25,)",select ?t1_template_id where { ?t1 a dbo:documents . ?t1 dbo:documents\#template_id ?t1_template_id .        } group by ?t1_template_id   having(count( *)  > 1),"(25,), (14,), (11,)",easy,True,1,
159,cre_doc_template_mgt,Show ids for all templates not used by any document.,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,"(23,), (24,), (19,), (0,), (9,), (18,), (16,), (15,)",SELECT distinct?col1 WHERE { { select (?t1_template_id as ?col1) where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_id ?t1_template_id .   }}  MINUS {select (?t2_template_id as ?col1) where { ?t2 a dbo:documents . ?t2 dbo:documents\#template_id ?t2_template_id .        }     } },"(0,), (9,), (15,), (16,), (18,), (19,), (23,), (24,)",hard,True,1,
160,cre_doc_template_mgt,How many templates do we have?,SELECT count(*) FROM Templates,"(20,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:templates .        },"(20,)",easy,True,1,
161,cre_doc_template_mgt,"Show template ids, version numbers, and template type codes for all templates.","SELECT template_id ,  version_number ,  template_type_code FROM Templates","(0, 5, 'PP'), (1, 9, 'PP'), (4, 4, 'BK'), (6, 2, 'PPT'), (7, 8, 'PPT'), (8, 3, 'BK'), (9, 2, 'BK'), (10, 1, 'PPT'), (11, 6, 'BK'), (14, 7, 'AD'), (15, 9, 'CV'), (16, 5, 'CV'), (18, 5, 'PP'), (19, 7, 'AD'), (20, 6, 'BK'), (21, 9, 'AD'), (22, 0, 'PP'), (23, 2, 'BK'), (24, 8, 'PP'), (25, 5, 'PP')",select ?t1_template_id ?t1_version_number ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_id ?t1_template_id . ?t1 dbo:templates\#version_number ?t1_version_number . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        },"(0, 5, 'PP'), (1, 9, 'PP'), (4, 4, 'BK'), (6, 2, 'PPT'), (7, 8, 'PPT'), (8, 3, 'BK'), (9, 2, 'BK'), (10, 1, 'PPT'), (11, 6, 'BK'), (14, 7, 'AD'), (15, 9, 'CV'), (16, 5, 'CV'), (18, 5, 'PP'), (19, 7, 'AD'), (20, 6, 'BK'), (21, 9, 'AD'), (22, 0, 'PP'), (23, 2, 'BK'), (24, 8, 'PP'), (25, 5, 'PP')",medium,True,1,
162,cre_doc_template_mgt,Show all distinct template type codes for all templates.,SELECT DISTINCT template_type_code FROM Templates,"('AD',), ('PPT',), ('PP',), ('BK',), ('CV',)",select distinct ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        },"('PP',), ('BK',), ('PPT',), ('AD',), ('CV',)",easy,True,1,
163,cre_doc_template_mgt,What are the ids of templates with template type code PP or PPT?,SELECT template_id FROM Templates WHERE template_type_code  =  'PP' OR template_type_code  =  'PPT',"(0,), (1,), (6,), (7,), (10,), (18,), (22,), (24,), (25,)",select ?t1_template_id where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_id ?t1_template_id . ?t1 dbo:templates\#template_type_code ?t1_template_type_code . ?t1 dbo:templates\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'PP' || ?t1_template_type_code = 'PPT') .        },"(0,), (1,), (18,), (22,), (24,), (25,), (6,), (7,), (10,)",medium,True,1,
164,cre_doc_template_mgt,How many templates have template type code CV?,SELECT count(*) FROM Templates WHERE template_type_code  =  'CV',"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'CV') .        },"(2,)",easy,True,1,
165,cre_doc_template_mgt,What is the version number and template type code for the template with version number later than 5?,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","(9, 'PP'), (8, 'PPT'), (6, 'BK'), (7, 'AD'), (9, 'CV'), (7, 'AD'), (6, 'BK'), (9, 'AD'), (8, 'PP')",select ?t1_version_number ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#version_number ?t1_version_number . ?t1 dbo:templates\#template_type_code ?t1_template_type_code . ?t1 dbo:templates\#version_number ?t1_version_number . FILTER(?t1_version_number > 5) .        },"(9, 'PP'), (8, 'PPT'), (6, 'BK'), (7, 'AD'), (9, 'CV'), (7, 'AD'), (6, 'BK'), (9, 'AD'), (8, 'PP')",medium,True,1,
166,cre_doc_template_mgt,Show all template type codes and number of templates for each.,"SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code","('AD', 3), ('PPT', 3), ('PP', 6), ('BK', 6), ('CV', 2)",select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code,"('PP', 6), ('BK', 6), ('PPT', 3), ('AD', 3), ('CV', 2)",medium,True,1,
167,cre_doc_template_mgt,Which template type code has most number of templates?,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,"('PP',)",select ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code  order by desc (count(*)) limit 1,"('BK',)",hard,True,1,false_negative
168,cre_doc_template_mgt,Show all template type codes with less than three templates.,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,"('CV',)",select ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code   having(count( *)  < 3),"('CV',)",easy,True,1,
169,cre_doc_template_mgt,What the smallest version number and its template type code?,"SELECT min(Version_Number) ,  template_type_code FROM Templates GROUP BY template_type_code","(7, 'AD'), (1, 'PPT'), (0, 'PP'), (2, 'BK'), (5, 'CV')",select (min( ?t1_version_number) as ?aggregation_t1_version_number_491 ) ?t1_template_type_code where { ?t1 a dbo:templates . ?t1 dbo:templates\#version_number ?t1_version_number . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code,"(0, 'PP'), (2, 'BK'), (1, 'PPT'), (7, 'AD'), (5, 'CV')",medium,True,1,
170,cre_doc_template_mgt,What is the template type code of the template used by document with the name 'Data base'?,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  'Data base',"('BK',)",select ?t1_template_type_code where { ?t1 a dbo:templates . ?t2 a dbo:documents . ?t2 dbo:documents\#ref-template_id ?t1 .  ?t1 dbo:templates\#template_type_code ?t1_template_type_code . ?t2 dbo:documents\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Data base') .        },"('BK',)",medium,True,1,
171,cre_doc_template_mgt,Show all document names using templates with template type code BK.,SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  'BK',"('Robbin CV',), ('Data base',), ('How to read a book',), ('Palm reading',), ('About Korea',)",select ?t1_document_name where { ?t1 a dbo:documents . ?t2 a dbo:templates . ?t1 dbo:documents\#ref-template_id ?t2 .  ?t1 dbo:documents\#document_name ?t1_document_name . ?t2 dbo:templates\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'BK') .        },"('How to read a book',), ('Palm reading',), ('Data base',), ('About Korea',), ('Robbin CV',)",medium,True,1,
172,cre_doc_template_mgt,Show all template type codes and the number of documents using each type.,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","('BK', 5), ('AD', 3), ('PPT', 3), ('PP', 4)",select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a dbo:templates . ?t2 a dbo:documents . ?t2 dbo:documents\#ref-template_id ?t1 .  ?t1 dbo:templates\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code,"('PPT', 3), ('PP', 4), ('BK', 5), ('AD', 3)",medium,True,1,
173,cre_doc_template_mgt,Which template type code is used by most number of documents?,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,"('BK',)",select ?t1_template_type_code where { ?t1 a dbo:templates . ?t2 a dbo:documents . ?t2 dbo:documents\#ref-template_id ?t1 .  ?t1 dbo:templates\#template_type_code ?t1_template_type_code . ?t1 dbo:templates\#template_id ?t1_template_id .        } group by ?t1_template_type_code  order by desc (count(*)) limit 1,"('BK',)",extra,True,1,
174,cre_doc_template_mgt,Show all template type codes that are not used by any document.,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,"('CV',)",SELECT distinct?col1 WHERE { { select (?t1_template_type_code as ?col1) where { ?t1 a dbo:templates . ?t1 dbo:templates\#template_type_code ?t1_template_type_code .   }}  MINUS {select (?t2_template_type_code as ?col1) where { ?t2 a dbo:templates . ?t3 a dbo:documents . ?t3 dbo:documents\#ref-template_id ?t2 .  ?t2 dbo:templates\#template_type_code ?t2_template_type_code . ?t2 dbo:templates\#template_id ?t2_template_id .        }     } },"('CV',)",hard,True,1,
175,cre_doc_template_mgt,Show all template type codes and descriptions.,"SELECT template_type_code ,  template_type_description FROM Reference_template_types","('PPT', 'Presentation'), ('CV', 'CV'), ('AD', 'Advertisement'), ('PP', 'Paper'), ('BK', 'Book')",select ?t1_template_type_code ?t1_template_type_description where { ?t1 a dbo:reference_template_types . ?t1 dbo:reference_template_types\#template_type_code ?t1_template_type_code . ?t1 dbo:reference_template_types\#template_type_description ?t1_template_type_description .        },"('PPT', 'Presentation'), ('CV', 'CV'), ('AD', 'Advertisement'), ('PP', 'Paper'), ('BK', 'Book')",medium,True,1,
176,cre_doc_template_mgt,What is the template type descriptions for template type code 'AD'.,SELECT template_type_description FROM Reference_template_types WHERE template_type_code  =  'AD',"('Advertisement',)",select ?t1_template_type_description where { ?t1 a dbo:reference_template_types . ?t1 dbo:reference_template_types\#template_type_description ?t1_template_type_description . ?t1 dbo:reference_template_types\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'AD') .        },"('Advertisement',)",easy,True,1,
177,cre_doc_template_mgt,What is the template type code for template type description 'Book'.,SELECT template_type_code FROM Reference_template_types WHERE template_type_description  =  'Book',"('BK',)",select ?t1_template_type_code where { ?t1 a dbo:reference_template_types . ?t1 dbo:reference_template_types\#template_type_code ?t1_template_type_code . ?t1 dbo:reference_template_types\#template_type_description ?t1_template_type_description . FILTER(?t1_template_type_description = 'Book') .        },"('BK',)",easy,True,1,
178,cre_doc_template_mgt,What are the distinct template type descriptions for the templates ever used by any document?,SELECT DISTINCT T1.template_type_description FROM Reference_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,"('Paper',), ('Advertisement',), ('Book',), ('Presentation',)",select distinct ?t1_template_type_description where { ?t1 a dbo:reference_template_types . ?t2 a dbo:templates . ?t2 dbo:templates\#ref-template_type_code ?t1 .  ?t1 dbo:reference_template_types\#template_type_description ?t1_template_type_description . ?t1 dbo:reference_template_types\#template_type_code ?t1_template_type_code .        },"('Presentation',), ('CV',), ('Advertisement',), ('Paper',), ('Book',)",medium,False,0,
179,cre_doc_template_mgt,What are the template ids with template type description 'Presentation'.,SELECT T2.template_id FROM Reference_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  'Presentation',"(6,), (7,), (10,)",select ?t1_template_id where { ?t1 a dbo:templates . ?t2 a dbo:reference_template_types . ?t1 dbo:templates\#ref-template_type_code ?t2 .  ?t1 dbo:templates\#template_id ?t1_template_id . ?t2 dbo:reference_template_types\#template_type_description ?t2_template_type_description . FILTER(?t2_template_type_description = 'Presentation') .        },"(6,), (7,), (10,)",medium,True,1,
180,cre_doc_template_mgt,How many paragraphs in total?,SELECT count(*) FROM Paragraphs,"(15,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:paragraphs .        },"(15,)",easy,True,1,
181,cre_doc_template_mgt,How many paragraphs for the document with name 'Summer Show'?,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:paragraphs . ?t2 a dbo:documents . ?t1 dbo:paragraphs\#ref-document_id ?t2 .  ?t2 dbo:documents\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Summer Show') .        },"(1,)",medium,True,1,
182,cre_doc_template_mgt,Show paragraph details for paragraph with text 'Korea'.,SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea',"('NA',), ('NA',)",select ?t1_other_details where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#other_details ?t1_other_details . ?t1 dbo:paragraphs\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Korea') .        },"('NA',), ('NA',)",easy,True,1,
183,cre_doc_template_mgt,Show all paragraph ids and texts for the document with name 'Welcome to NY'.,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","(16615, 'Japan'), (608931827, 'Micronesia')",select ?t1_paragraph_id ?t1_paragraph_text where { ?t1 a dbo:paragraphs . ?t2 a dbo:documents . ?t1 dbo:paragraphs\#ref-document_id ?t2 .  ?t1 dbo:paragraphs\#paragraph_id ?t1_paragraph_id . ?t1 dbo:paragraphs\#paragraph_text ?t1_paragraph_text . ?t2 dbo:documents\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Welcome to NY') .        },"(16615, 'Japan'), (608931827, 'Micronesia')",medium,True,1,
184,cre_doc_template_mgt,Show all paragraph texts for the document 'Customer reviews'.,SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  'Customer reviews',"('Korea',), ('Ukraine',), ('Korea',)",select ?t1_paragraph_text where { ?t1 a dbo:paragraphs . ?t2 a dbo:documents . ?t1 dbo:paragraphs\#ref-document_id ?t2 .  ?t1 dbo:paragraphs\#paragraph_text ?t1_paragraph_text . ?t2 dbo:documents\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Customer reviews') .        },"('Korea',), ('Ukraine',), ('Korea',)",medium,True,1,
185,cre_doc_template_mgt,Show all document ids and the number of paragraphs in each document. Order by document id.,"SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","(3, 1), (80, 2), (2394, 3), (3830, 1), (33930, 1), (50123, 1), (651512, 2), (3540024, 1), (16514113, 2), (385906526, 1)",select ?t1_document_id (count( *) as ?aggregation_all) where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#document_id ?t1_document_id . ?t1 dbo:paragraphs\#document_id ?t1_document_id .        } group by ?t1_document_id order by asc (?t1_document_id),"(3, 1), (80, 2), (2394, 3), (3830, 1), (33930, 1), (50123, 1), (651512, 2), (3540024, 1), (16514113, 2), (385906526, 1)",medium,True,1,
186,cre_doc_template_mgt,"Show all document ids, names and the number of paragraphs in each document.","SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id,  T2.document_name","(3830, 'Do not panic', 1), (50123, 'Learning French', 1), (3540024, 'Palm reading', 1), (16514113, 'A history of Arts', 2), (80, 'Welcome to NY', 2), (385906526, 'About Korea', 1), (33930, 'How Google people work', 1), (3, 'Summer Show', 1), (651512, 'How to write a CV', 2), (2394, 'Customer reviews', 3)",select ?t1_document_id ?t2_document_name (count( *) as ?aggregation_all) where { ?t1 a dbo:paragraphs . ?t2 a dbo:documents . ?t1 dbo:paragraphs\#ref-document_id ?t2 .  ?t1 dbo:paragraphs\#document_id ?t1_document_id . ?t2 dbo:documents\#document_name ?t2_document_name .        } group by ?t1_document_id ?t2_document_name,"(2394, 'Customer reviews', 3), (3, 'Summer Show', 1), (50123, 'Learning French', 1), (651512, 'How to write a CV', 2), (33930, 'How Google people work', 1), (385906526, 'About Korea', 1), (80, 'Welcome to NY', 2), (3830, 'Do not panic', 1), (16514113, 'A history of Arts', 2), (3540024, 'Palm reading', 1)",extra,True,1,
187,cre_doc_template_mgt,List all document ids with at least two paragraphs.,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,"(16514113,), (2394,), (80,), (651512,)",select ?t1_document_id where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 2),"(2394,), (651512,), (80,), (16514113,)",easy,True,1,
188,cre_doc_template_mgt,What is the document id and name with greatest number of paragraphs?,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id, T2.document_name ORDER BY count(*) DESC LIMIT 1","(2394, 'Customer reviews')",select ?t1_document_id ?t2_document_name where { ?t1 a dbo:paragraphs . ?t2 a dbo:documents . ?t1 dbo:paragraphs\#ref-document_id ?t2 .  ?t1 dbo:paragraphs\#document_id ?t1_document_id . ?t2 dbo:documents\#document_name ?t2_document_name .        } group by ?t1_document_id ?t2_document_name  order by desc (count(*)) limit 1,"(2394, 'Customer reviews')",extra,True,1,
189,cre_doc_template_mgt,What is the document id with least number of paragraphs?,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,"(385906526,)",select ?t1_document_id where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#document_id ?t1_document_id .        } group by ?t1_document_id  order by asc (count(*)) limit 1,"(3,)",hard,True,1,false_negative
190,cre_doc_template_mgt,What is the document id with 1 to 2 paragraphs?,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,"(385906526,), (50123,), (16514113,), (3540024,), (3830,), (33930,), (3,), (80,), (651512,)",select ?t1_document_id where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 1 && count( *)  <= 2),"(3,), (50123,), (651512,), (33930,), (385906526,), (80,), (3830,), (16514113,), (3540024,)",easy,True,1,
191,cre_doc_template_mgt,Show the document id with paragraph text 'Brazil' and 'Ireland'.,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',"(16514113,)",select distinct ?t1_document_id where { ?t1 a dbo:paragraphs . ?t1 dbo:paragraphs\#document_id ?t1_document_id . ?t1 dbo:paragraphs\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Brazil') . FILTER (?t1_document_id in (?t2_document_id)) .  { ?t2 a dbo:paragraphs . ?t2 dbo:paragraphs\#document_id ?t2_document_id . ?t2 dbo:paragraphs\#paragraph_text ?t2_paragraph_text .  FILTER(?t2_paragraph_text = 'Ireland') .     }      },"(16514113,)",hard,True,1,
192,course_teach,How many teachers are there?,SELECT count(*) FROM teacher,"(7,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:teacher .        },"(7,)",easy,True,1,
193,course_teach,List the names of teachers in ascending order of age.,SELECT Name FROM teacher ORDER BY Age ASC,"('Vicente Carretero',), ('Gustaaf Deloor',), ('Joseph Huts',), ('John Deloor',), ('Lucy Wong',), ('Anne Walker',), ('Kearsley Brown',)",select ?t1_name where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#name ?t1_name . ?t1 dbo:teacher\#age ?t1_age .        }  order by asc (?t1_age),"('Vicente Carretero',), ('Gustaaf Deloor',), ('Joseph Huts',), ('John Deloor',), ('Lucy Wong',), ('Anne Walker',), ('Kearsley Brown',)",easy,True,1,
194,course_teach,What are the age and hometown of teachers?,"SELECT Age ,  Hometown FROM teacher","(32, 'Blackrod Urban District'), (29, 'Bolton County Borough'), (26, 'Farnworth Municipal Borough'), (33, 'Horwich Urban District'), (45, 'Kearsley Urban District'), (41, 'Little Lever Urban District'), (39, 'Turton Urban District')",select ?t1_age ?t1_hometown where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#age ?t1_age . ?t1 dbo:teacher\#hometown ?t1_hometown .        },"('32', 'Blackrod Urban District'), ('29', 'Bolton County Borough'), ('26', 'Farnworth Municipal Borough'), ('33', 'Horwich Urban District'), ('45', 'Kearsley Urban District'), ('41', 'Little Lever Urban District'), ('39', 'Turton Urban District')",medium,True,1,false_negative
195,course_teach,List the name of teachers whose hometown is not 'Little Lever Urban District'.,SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District',"('Joseph Huts',), ('Gustaaf Deloor',), ('Vicente Carretero',), ('John Deloor',), ('Kearsley Brown',), ('Lucy Wong',)",select ?t1_name where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#name ?t1_name . ?t1 dbo:teacher\#hometown ?t1_hometown . FILTER(?t1_hometown != 'Little Lever Urban District') .        },"('Joseph Huts',), ('Gustaaf Deloor',), ('Vicente Carretero',), ('John Deloor',), ('Kearsley Brown',), ('Lucy Wong',)",easy,True,1,
196,course_teach,Show the name of teachers aged either 32 or 33?,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,"('Joseph Huts',), ('John Deloor',)",select ?t1_name where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#name ?t1_name . ?t1 dbo:teacher\#age ?t1_age . ?t1 dbo:teacher\#age ?t1_age . FILTER(?t1_age = '32' || ?t1_age = '33') .        },"('Joseph Huts',), ('John Deloor',)",medium,True,1,
197,course_teach,What is the hometown of the youngest teacher?,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,"('Farnworth Municipal Borough',)",select ?t1_hometown where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#hometown ?t1_hometown . ?t1 dbo:teacher\#age ?t1_age .        }   order by asc (?t1_age) limit 1,"('Farnworth Municipal Borough',)",medium,True,1,
198,course_teach,Show different hometown of teachers and the number of teachers from each hometown.,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown","('Horwich Urban District', 1), ('Turton Urban District', 1), ('Blackrod Urban District', 1), ('Kearsley Urban District', 1), ('Bolton County Borough', 1), ('Little Lever Urban District', 1), ('Farnworth Municipal Borough', 1)",select ?t1_hometown (count( *) as ?aggregation_all) where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#hometown ?t1_hometown .        } group by ?t1_hometown,"('Blackrod Urban District', 1), ('Bolton County Borough', 1), ('Farnworth Municipal Borough', 1), ('Horwich Urban District', 1), ('Kearsley Urban District', 1), ('Little Lever Urban District', 1), ('Turton Urban District', 1)",medium,True,1,
199,course_teach,List the most common hometown of teachers.,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"('Horwich Urban District',)",select ?t1_hometown where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#hometown ?t1_hometown .        } group by ?t1_hometown  order by desc (count(*)) limit 1,"('Blackrod Urban District',)",hard,True,1,false_negative
200,course_teach,Show the hometowns shared by at least two teachers.,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2,,select ?t1_hometown where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#hometown ?t1_hometown .        } group by ?t1_hometown   having(count( *)  >= 2),,easy,True,1,
201,course_teach,Show names of teachers and the courses they are arranged to teach.,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID","('Vicente Carretero', 'Math'), ('Kearsley Brown', 'Math'), ('Gustaaf Deloor', 'Science'), ('Anne Walker', 'History'), ('Anne Walker', 'Bible'), ('Lucy Wong', 'Music')",select ?t1_name ?t2_course where { ?t1 a dbo:teacher . ?t3 a dbo:course_arrange . ?t3 dbo:course_arrange\#ref-teacher_id ?t1 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course ?t2_course . ?t2 dbo:course\#course_id ?t2_course_id . ?t2 a dbo:course . ?t3 dbo:course_arrange\#ref-course_id ?t2 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course ?t2_course . ?t2 dbo:course\#course_id ?t2_course_id .        },"('Kearsley Brown', 'Math'), ('Vicente Carretero', 'Math'), ('Gustaaf Deloor', 'Science'), ('Anne Walker', 'History'), ('Anne Walker', 'Bible'), ('Lucy Wong', 'Music')",medium,True,1,
202,course_teach,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name","('Anne Walker', 'History'), ('Anne Walker', 'Bible'), ('Gustaaf Deloor', 'Science'), ('Kearsley Brown', 'Math'), ('Lucy Wong', 'Music'), ('Vicente Carretero', 'Math')",select ?t1_name ?t2_course where { ?t1 a dbo:teacher . ?t3 a dbo:course_arrange . ?t3 dbo:course_arrange\#ref-teacher_id ?t1 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course ?t2_course . ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course_id ?t2_course_id . ?t2 a dbo:course . ?t3 dbo:course_arrange\#ref-course_id ?t2 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course ?t2_course . ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course_id ?t2_course_id .        }  order by asc (?t1_name),"('Anne Walker', 'History'), ('Anne Walker', 'Bible'), ('Gustaaf Deloor', 'Science'), ('Kearsley Brown', 'Math'), ('Lucy Wong', 'Music'), ('Vicente Carretero', 'Math')",hard,True,1,
203,course_teach,Show the name of the teacher for the math course.,SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  'Math',"('Vicente Carretero',), ('Kearsley Brown',)",select ?t1_name where { ?t1 a dbo:teacher . ?t3 a dbo:course_arrange . ?t3 dbo:course_arrange\#ref-teacher_id ?t1 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course_id ?t2_course_id . ?t2 dbo:course\#course ?t2_course . ?t2 a dbo:course . ?t3 dbo:course_arrange\#ref-course_id ?t2 .  ?t1 dbo:teacher\#name ?t1_name . ?t2 dbo:course\#course_id ?t2_course_id . ?t2 dbo:course\#course ?t2_course . FILTER(?t2_course = 'Math') .        },"('Kearsley Brown',), ('Vicente Carretero',)",hard,True,1,
204,course_teach,Show names of teachers and the number of courses they teach.,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","('Anne Walker', 2), ('Vicente Carretero', 1), ('Lucy Wong', 1), ('Kearsley Brown', 1), ('Gustaaf Deloor', 1)",select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a dbo:teacher . ?t13 a dbo:course_arrange . ?t13 dbo:course_arrange\#ref-teacher_id ?t1 .  ?t1 dbo:teacher\#name ?t1_name .        } group by ?t1_name,"('Kearsley Brown', 1), ('Vicente Carretero', 1), ('Gustaaf Deloor', 1), ('Anne Walker', 2), ('Lucy Wong', 1)",medium,True,1,
205,course_teach,Show names of teachers that teach at least two courses.,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,"('Anne Walker',)",select ?t1_name where { ?t1 a dbo:teacher . ?t2 a dbo:course_arrange . ?t2 dbo:course_arrange\#ref-teacher_id ?t1 .  ?t1 dbo:teacher\#name ?t1_name . ?t1 dbo:teacher\#teacher_id ?t1_teacher_id .        } group by ?t1_name   having(count( *)  >= 2),"('Anne Walker',)",medium,True,1,
206,course_teach,List the names of teachers who have not been arranged to teach courses.,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),"('Joseph Huts',), ('John Deloor',)",select ?t1_name where { ?t1 a dbo:teacher . ?t1 dbo:teacher\#name ?t1_name . ?t1 dbo:teacher\#teacher_id ?t1_teacher_id .     Filter not exists {{select ?t22_teacher_id where { ?t22 a dbo:course_arrange . ?t22 dbo:course_arrange\#teacher_id ?t22_teacher_id .        }    } FILTER (?t1_teacher_id in (?t22_teacher_id))}  },"('Joseph Huts',), ('John Deloor',)",hard,True,1,
207,museum_visit,How many visitors below age 30 are there?,SELECT count(*) FROM visitor WHERE age  <  30,"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:visitor . ?t1 dbo:visitor\#age ?t1_age . FILTER(?t1_age < 30) .        },"(3,)",easy,True,1,
208,museum_visit,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,"('Gonzalo Higuain',), ('Fernando Gago',), ('Guti Midfielder',)",select ?t1_name where { ?t1 a dbo:visitor . ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#level_of_membership ?t1_level_of_membership . ?t1 dbo:visitor\#level_of_membership ?t1_level_of_membership . FILTER(?t1_level_of_membership > 4) .        }  order by desc (?t1_level_of_membership),"('Gonzalo Higuain',), ('Fernando Gago',), ('Guti Midfielder',)",medium,True,1,
209,museum_visit,What is the average age of the visitors whose membership level is not higher than 4?,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,"(36.0,)",select (avg( ?t1_age) as ?aggregation_t1_age_119 ) where { ?t1 a dbo:visitor . ?t1 dbo:visitor\#age ?t1_age . ?t1 dbo:visitor\#level_of_membership ?t1_level_of_membership . FILTER(?t1_level_of_membership <= 4) .        },"(36.0,)",easy,True,1,
210,museum_visit,"Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.","SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","('Fernando Gago', 6), ('Gonzalo Higuain', 8), ('Guti Midfielder', 5)",select ?t1_name ?t1_level_of_membership where { ?t1 a dbo:visitor . ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#level_of_membership ?t1_level_of_membership . ?t1 dbo:visitor\#age ?t1_age . ?t1 dbo:visitor\#level_of_membership ?t1_level_of_membership . FILTER(?t1_level_of_membership > 4) .        }  order by desc (?t1_age),"('Fernando Gago', 6), ('Gonzalo Higuain', 8), ('Guti Midfielder', 5)",medium,True,1,
211,museum_visit,Find the id and name of the museum that has the most staff members?,"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","(1, 'Plaza Museum')",select ?t1_museum_id ?t1_name where { ?t1 a dbo:museum . ?t1 dbo:museum\#museum_id ?t1_museum_id . ?t1 dbo:museum\#name ?t1_name . ?t1 dbo:museum\#num_of_staff ?t1_num_of_staff .        }   order by desc (?t1_num_of_staff) limit 1,"(1, 'Plaza Museum')",medium,True,1,
212,museum_visit,Find the average number of staff working for the museums that were open before 2009.,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,"(31.333333333333,)",select (avg( ?t1_num_of_staff) as ?aggregation_t1_num_of_staff_285 ) where { ?t1 a dbo:museum . ?t1 dbo:museum\#num_of_staff ?t1_num_of_staff . ?t1 dbo:museum\#open_year ?t1_open_year . FILTER(?t1_open_year < '2009') .        },"(31.333333333333,)",easy,True,1,
213,museum_visit,What are the opening year and staff number of the museum named Plaza Museum?,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'","(62, 2000)",select ?t1_num_of_staff ?t1_open_year where { ?t1 a dbo:museum . ?t1 dbo:museum\#num_of_staff ?t1_num_of_staff . ?t1 dbo:museum\#open_year ?t1_open_year . ?t1 dbo:museum\#name ?t1_name . FILTER(?t1_name = 'Plaza Museum') .        },"(62, '2000')",medium,True,1,false_negative
214,museum_visit,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),"('Plaza Museum',), ('Capital Plaza Museum',), ('Jefferson Development Museum',)",select ?t1_name where { ?t1 a dbo:museum . ?t1 dbo:museum\#name ?t1_name . ?t1 dbo:museum\#num_of_staff ?t1_num_of_staff . FILTER(?t1_num_of_staff > ?aggregation_t22_num_of_staff_364) .       {select (min( ?t22_num_of_staff) as ?aggregation_t22_num_of_staff_364 ) where { ?t22 a dbo:museum . ?t22 dbo:museum\#num_of_staff ?t22_num_of_staff . ?t22 dbo:museum\#open_year ?t22_open_year . FILTER(?t22_open_year > '2010') .        }    } },"('Plaza Museum',), ('Capital Plaza Museum',), ('Jefferson Development Museum',)",hard,True,1,
215,museum_visit,"find the id, name and age for visitors who visited some museums more than once.","SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1","(6, 'Rafael van der Vaart', 25), (3, 'Arjen Robben', 27), (5, 'Fernando Gago', 36)",select ?t1_id ?t1_name ?t1_age where { ?t1 a dbo:visitor . ?t2 a dbo:visit . ?t2 dbo:visit\#ref-visitor_id ?t1 .  ?t1 dbo:visitor\#id ?t1_id . ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#age ?t1_age . ?t1 dbo:visitor\#id ?t1_id .        } group by ?t1_id ?t1_name ?t1_age   having(count( *)  > 1),"(5, 'Fernando Gago', 36), (3, 'Arjen Robben', 27), (6, 'Rafael van der Vaart', 25)",medium,True,1,
216,museum_visit,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?","SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id,  t1.name,  t1.Level_of_membership ORDER BY sum(t2.Total_spent) DESC LIMIT 1","(3, 'Arjen Robben', 1)",select ?t1_visitor_id ?t2_name ?t2_level_of_membership where { ?t1 a dbo:visit . ?t2 a dbo:visitor . ?t1 dbo:visit\#ref-visitor_id ?t2 .  ?t1 dbo:visit\#visitor_id ?t1_visitor_id . ?t2 dbo:visitor\#name ?t2_name . ?t2 dbo:visitor\#level_of_membership ?t2_level_of_membership . ?t1 dbo:visit\#total_spent ?t1_total_spent .        } group by ?t1_visitor_id ?t2_name ?t2_level_of_membership  order by desc (sum( ?t1_total_spent) ) limit 1,"(3, 'Arjen Robben', 1)",extra,True,1,
217,museum_visit,What are the id and name of the museum visited most times?,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ,  t1.name ORDER BY count(*) DESC LIMIT 1","(2, 'Capital Plaza Museum')",select ?t1_museum_id ?t2_name where { ?t1 a dbo:visit . ?t2 a dbo:museum . ?t1 dbo:visit\#ref-museum_id ?t2 .  ?t1 dbo:visit\#museum_id ?t1_museum_id . ?t2 dbo:museum\#name ?t2_name .        } group by ?t1_museum_id ?t2_name  order by desc (count(*)) limit 1,"(2, 'Capital Plaza Museum')",extra,True,1,
218,museum_visit,What is the name of the museum that had no visitor yet?,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),"('Jefferson Development Museum',), ('RiverPark Museum',), ('Place Tower Museum',), ('Central City District Residential Museum',)",select ?t1_name where { ?t1 a dbo:museum . ?t1 dbo:museum\#name ?t1_name . ?t1 dbo:museum\#museum_id ?t1_museum_id .     Filter not exists {{select ?t22_museum_id where { ?t22 a dbo:visit . ?t22 dbo:visit\#museum_id ?t22_museum_id .        }    } FILTER (?t1_museum_id in (?t22_museum_id))}  },"('Jefferson Development Museum',), ('RiverPark Museum',), ('Place Tower Museum',), ('Central City District Residential Museum',)",hard,True,1,
219,museum_visit,Find the name and age of the visitor who bought the most tickets at once.,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","('Arjen Robben', 27)",select ?t1_name ?t1_age where { ?t1 a dbo:visitor . ?t2 a dbo:visit . ?t2 dbo:visit\#ref-visitor_id ?t1 .  ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#age ?t1_age . ?t2 dbo:visit\#num_of_ticket ?t2_num_of_ticket .        }   order by desc (?t2_num_of_ticket) limit 1,"('Arjen Robben', 27)",hard,True,1,
220,museum_visit,What are the average and maximum number of tickets bought in all visits?,"SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit","(10.5, 24)",select (avg( ?t1_num_of_ticket) as ?aggregation_t1_num_of_ticket_228 ) (max( ?t1_num_of_ticket) as ?aggregation_t1_num_of_ticket_486 ) where { ?t1 a dbo:visit . ?t1 dbo:visit\#num_of_ticket ?t1_num_of_ticket . ?t1 dbo:visit\#num_of_ticket ?t1_num_of_ticket .        },"(10.5, 24)",medium,True,1,
221,museum_visit,What is the total ticket expense of the visitors whose membership level is 1?,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,"(570.83997,)",select (sum( ?t1_total_spent) as ?aggregation_t1_total_spent_419 ) where { ?t1 a dbo:visit . ?t2 a dbo:visitor . ?t1 dbo:visit\#ref-visitor_id ?t2 .  ?t1 dbo:visit\#total_spent ?t1_total_spent . ?t2 dbo:visitor\#level_of_membership ?t2_level_of_membership . FILTER(?t2_level_of_membership = 1) .        },"(570.84,)",medium,True,1,false_negative
222,museum_visit,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,"('Fernando Gago',)",select distinct ?t1_name where { ?t1 a dbo:visitor . ?t2 a dbo:visit . ?t2 dbo:visit\#ref-visitor_id ?t1 .  ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#id ?t1_id . ?t3 dbo:museum\#open_year ?t3_open_year . ?t3 a dbo:museum . ?t2 dbo:visit\#ref-museum_id ?t3 .  ?t1 dbo:visitor\#name ?t1_name . ?t1 dbo:visitor\#id ?t1_id . ?t3 dbo:museum\#open_year ?t3_open_year . FILTER(?t3_open_year < '2009') . FILTER (?t1_name in (?t4_name)) .  { ?t4 a dbo:visitor . ?t5 a dbo:visit . ?t5 dbo:visit\#ref-visitor_id ?t4 .  ?t4 dbo:visitor\#name ?t4_name . ?t4 dbo:visitor\#id ?t4_id . ?t6 dbo:museum\#open_year ?t6_open_year . ?t6 a dbo:museum . ?t5 dbo:visit\#ref-museum_id ?t6 .  ?t4 dbo:visitor\#name ?t4_name . ?t4 dbo:visitor\#id ?t4_id . ?t6 dbo:museum\#open_year ?t6_open_year .  FILTER(?t6_open_year > '2011') .     }      },"('Fernando Gago',)",extra,True,1,
223,museum_visit,Find the number of visitors who did not visit any museum opened after 2010.,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:visitor . ?t1 dbo:visitor\#id ?t1_id .     Filter not exists {{select ?t22_visitor_id where { ?t22 a dbo:visit . ?t23 a dbo:museum . ?t22 dbo:visit\#ref-museum_id ?t23 .  ?t22 dbo:visit\#visitor_id ?t22_visitor_id . ?t23 dbo:museum\#open_year ?t23_open_year . FILTER(?t23_open_year > '2010') .        }    } FILTER (?t1_id in (?t22_visitor_id))}  },"(3,)",extra,True,1,
224,museum_visit,How many museums were opened after 2013 or before 2008?,SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008,"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:museum . ?t1 dbo:museum\#open_year ?t1_open_year . ?t1 dbo:museum\#open_year ?t1_open_year . FILTER(?t1_open_year > '2013' || ?t1_open_year < '2008') .        },"(1,)",medium,True,1,
225,wta_1,Find the total number of players.,SELECT count(*) FROM players,"(20663,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:players .        },"(20663,)",easy,True,1,
226,wta_1,Find the total number of matches.,SELECT count(*) FROM matches,"(278,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:matches .        },"(278,)",easy,True,1,
227,wta_1,Find the average age of losers and winners of all matches.,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","(27.311213815813, 27.062177733552)",select (avg( ?t1_loser_age) as ?aggregation_t1_loser_age_226 ) (avg( ?t1_winner_age) as ?aggregation_t1_winner_age_435 ) where { ?t1 a dbo:matches . ?t1 dbo:matches\#loser_age ?t1_loser_age . ?t1 dbo:matches\#winner_age ?t1_winner_age .        },"(27.311213862585, 27.062177773184)",medium,True,1,false_negative
228,wta_1,Find the average rank of winners in all matches.,SELECT avg(winner_rank) FROM matches,"(13.715827338129,)",select (avg( ?t1_winner_rank) as ?aggregation_t1_winner_rank_348 ) where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_rank ?t1_winner_rank .        },"(13.715827338129,)",easy,True,1,
229,wta_1,Find the highest rank of losers in all matches.,SELECT min(loser_rank) FROM matches,"(1,)",select (min( ?t1_loser_rank) as ?aggregation_t1_loser_rank_212 ) where { ?t1 a dbo:matches . ?t1 dbo:matches\#loser_rank ?t1_loser_rank .        },"(1,)",easy,True,1,
230,wta_1,find the number of distinct country codes of all players.,SELECT count(DISTINCT country_code) FROM players,"(154,)",select distinct (count(distinct ?t1_country_code) as ?aggregation_t1_country_code_485 ) where { ?t1 a dbo:players . ?t1 dbo:players\#country_code ?t1_country_code .        },"(154,)",easy,True,1,
231,wta_1,Find the number of distinct name of losers.,SELECT count(DISTINCT loser_name) FROM matches,"(49,)",select distinct (count(distinct ?t1_loser_name) as ?aggregation_t1_loser_name_468 ) where { ?t1 a dbo:matches . ?t1 dbo:matches\#loser_name ?t1_loser_name .        },"(49,)",easy,True,1,
232,wta_1,Find the name of tourney that has more than 10 matches.,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,"('Us Open',), ('Australian Open',), ('Indian Wells',), ('Wimbledon',), ('Singapore',), ('French Open',), ('Cincinnati',), ('WTA Championships',), ('Miami',)",select ?t1_tourney_name where { ?t1 a dbo:matches . ?t1 dbo:matches\#tourney_name ?t1_tourney_name .        } group by ?t1_tourney_name   having(count( *)  > 10),"('Indian Wells',), ('Cincinnati',), ('WTA Championships',), ('Us Open',), ('Singapore',), ('French Open',), ('Wimbledon',), ('Australian Open',), ('Miami',)",easy,True,1,
233,wta_1,List the names of all winners who played in both 2013 and 2016.,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"('Serena Williams',), ('Petra Kvitova',), ('Victoria Azarenka',), ('Sara Errani',), ('Angelique Kerber',)",select distinct ?t1_winner_name where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#year ?t1_year . FILTER(?t1_year = 2013) . FILTER (?t1_winner_name in (?t2_winner_name)) .  { ?t2 a dbo:matches . ?t2 dbo:matches\#winner_name ?t2_winner_name . ?t2 dbo:matches\#year ?t2_year .  FILTER(?t2_year = 2016) .     }      },"('Angelique Kerber',), ('Serena Williams',), ('Petra Kvitova',), ('Sara Errani',), ('Victoria Azarenka',)",hard,True,1,
234,wta_1,List the number of all matches who played in years of 2013 or 2016.,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,"(170,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:matches . ?t1 dbo:matches\#year ?t1_year . ?t1 dbo:matches\#year ?t1_year . FILTER(?t1_year = 2013 || ?t1_year = 2016) .        },"(170,)",medium,True,1,
235,wta_1,What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","('USA', 'Serena'), ('GER', 'Angelique')",select distinct ?t1_country_code ?t1_first_name where { ?t1 a dbo:players . ?t2 a dbo:matches . ?t2 dbo:matches\#ref-winner_id ?t1 .  ?t1 dbo:players\#country_code ?t1_country_code . ?t1 dbo:players\#first_name ?t1_first_name . ?t2 dbo:matches\#tourney_name ?t2_tourney_name . FILTER(?t2_tourney_name = 'WTA Championships') . FILTER (?t1_country_code in (?t3_country_code)) . FILTER (?t1_first_name in (?t3_first_name)) .  { ?t3 a dbo:players . ?t4 a dbo:matches . ?t4 dbo:matches\#ref-winner_id ?t3 .  ?t3 dbo:players\#country_code ?t3_country_code . ?t3 dbo:players\#first_name ?t3_first_name . ?t4 dbo:matches\#tourney_name ?t4_tourney_name .  FILTER(?t4_tourney_name = 'Australian Open') .     }      },"('GER', 'Angelique'), ('USA', 'Serena')",extra,True,1,
236,wta_1,Find the first name and country code of the oldest player.,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","('Thelma', 'AUS')",select ?t1_first_name ?t1_country_code where { ?t1 a dbo:players . ?t1 dbo:players\#first_name ?t1_first_name . ?t1 dbo:players\#country_code ?t1_country_code . ?t1 dbo:players\#birth_date ?t1_birth_date .        }   order by asc (?t1_birth_date) limit 1,"('Thelma', 'AUS')",medium,True,1,
237,wta_1,List the first and last name of all players who are left / L hand in the order of birth date.,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","('Ann', 'Jones'), ('Wendy', 'Gilchrist'), ('Martina', 'Navratilova'), ('Mary', 'Carillo'), ('Katerina', 'Bohmova'), ('Petra', 'Delhees Jauch'), ('Nancy', 'Loeffler Caro'), ('Lise', 'Gregory'), ('Rene', 'Collins'), ('Nicole', 'Arendt'), ('Florencia', 'Labat'), ('Sabine', 'Appelmans'), ('Andreea', 'Ehritt Vanc'), ('Monica', 'Seles'), ('Gala', 'Leon Garcia'), ('Karen', 'Cross'), ('Julie', 'Pullin'), ('Vanessa', 'Webb'), ('Elena', 'Tatarkova'), ('Anca', 'Barna'), ('Francesca', 'Lubiani'), ('Gaelle', 'Widmer'), ('Amanda', 'Keen'), ('Amanda', 'Augustus'), ('Rita', 'Kuti Kis'), ('Amelie', 'Cocheteux'), ('Amelie', 'Castera'), ('Saori', 'Obata'), ('Marine', 'Nizri Spiegel'), ('Patty', 'Schnyder'), ('Julie', 'Ditty'), ('Joana', 'Cortez'), ('Barbara', 'Schwartz'), ('Ludmilla', 'Varmuza'), ('Magui', 'Serna'), ('Amanda', 'Grahame'), ('Kim', 'Kilsdonk'), ('Emilie', 'Loit'), ('Erika', 'Pineider'), ('Anne Gaelle', 'Sidot'), ('Erica', 'Biro'), ('Stephanie', 'Kovacic'), ('Sybille', 'Bammer'), ('Lisa', 'Fritz'), ('Maja', 'Matevzic'), ('Leanne', 'Baker'), ('Aurelie', 'Vedy'), ('Carla', 'Tiene'), ('Erika', 'Venere'), ('Jelena', 'Kostanic Tosic'), ('Clarisa', 'Fernandez'), ('Ansley', 'Cargill'), ('Dimana', 'Krastevitch'), ('Maria Jose', 'Martinez Sanchez'), ('Zerene', 'Reyes'), ('Melinda', 'Czink'), ('Sandra', 'Klemenschits'), ('Maria Elizabeth', 'Lopez'), ('Salome', 'Llaguno'), ('Lindsay', 'Cox'), ('Iveta', 'Benesova'), ('Eugenia', 'Chialvo'), ('Chun Yan', 'He'), ('Maria Fernanda', 'Alves'), ('Emily', 'Quin'), ('Fernanda', 'Oliveira Da Silva'), ('Annabel', 'Blow'), ('Julia', 'Smith'), ('Ana Lucia', 'Migliarini De Leon'), ('Elizabeth', 'Bondi'), ('Galina', 'Fokina'), ('Elise', 'Tamaela'), ('Bit Na', 'Lee'), ('Sonia', 'Iacovacci'), ('Mariana Pires', 'Junqueira'), ('Natalia', 'Bogdanova'), ('Irina', 'Smirnova'), ('Meghha', 'Vakaria'), ('Angela', 'Haynes'), ('Karly', 'Olson'), ('Casey', 'Dellacqua'), ('Kathrin', 'Hegel'), ('Beatrix', 'Csordas'), ('Zsuzsanna', 'Babos'), ('Emily', 'Applegate'), ('Olga', 'Pasichnichenko'), ('Theresa', 'Logar'), ('Jin A', 'Lee'), ('Hannah', 'Kuervers'), ('Andreea', 'Novaceanu'), ('Valentina', 'Tizzano'), ('Helen', 'Fritche'), ('Sandra', 'Sasidharan'), ('Isha', 'Lakhani'), ('Krushmi', 'Chheda'), ('Ljubica', 'Avramovic'), ('Avel Romaly', 'Coronado'), ('Shadisha', 'Robinson'), ('Carla', 'Zabaleta'), ('Diana', 'Arutyunova'), ('Cecile', 'Baijot'), ('Laura', 'Rocchi'), ('Rie', 'Imai'), ('Danielle', 'Harmsen'), ('Alejandra', 'Obregon'), ('Ariela', 'Perez'), ('Vasilisa', 'Davydova'), ('Emilia', 'Yorio'), ('Lizaan', 'Du Plessis'), ('Claire', 'Feuerstein'), ('Alexandria', 'Liles'), ('Katharine', 'Baker'), ('Emma', 'Laine'), ('Geraldine', 'Roma'), ('Alexandra', 'Kazanova'), ('Aya', 'El Akkad'), ('Allison', 'Baker'), ('Lucy', 'Fletcher'), ('Monika', 'Musilova'), ('Jitka', 'Gavdunova'), ('Elena', 'Petrucciano'), ('Varvara', 'Lepchenko'), ('Claire', 'De Gubernatis'), ('Seheno', 'Razafindramaso'), ('Karolina', 'Soor'), ('Melisa', 'Cabrera Handt'), ('Shraddha', 'Lodha'), ('Sylvia', 'Krywacz'), ('Amina', 'El Sahn'), ('Hendrike Lea', 'Heitmann'), ('Dunja', 'Antunovic'), ('Micaela', 'Acosta'), ('Katerina', 'Bohmova'), ('Catherine', 'Grotz'), ('Yurika', 'Sema'), ('Sheng Nan', 'Sun'), ('Lucie', 'Safarova'), ('Jitka', 'Kleisnerova'), ('Carolina', 'Escamilla'), ('Tapiwa', 'Marobela'), ('Punam', 'Reddy'), ('Katia', 'Sabate Orera'), ('Shana', 'Claes'), ('Chrissie', 'Seredni'), ('Yui', 'Nagasawa'), ('Marcela', 'Vojtiskova'), ('Seul Ki', 'Chin'), ('Nina', 'Munch Soegaard'), ('Hannah', 'Grady'), ('Karen', 'Castiblanco'), ('Angelique', 'Kerber'), ('Lauren', 'Lui'), ('Rana', 'Tharwat Hafez'), ('Nicole', 'Grunwald'), ('Ana', 'Veselinovic'), ('Diana Andreea', 'Gae'), ('Sanaa', 'Bhambri'), ('Ana', 'Beltran Trigueros'), ('Barbora', 'Bozkova'), ('Camila', 'Belassi'), ('Violette', 'Huck'), ('Megumi', 'Fukui'), ('Rita', 'Gouveia'), ('Mihaela', 'Buzarnescu'), ('Liset', 'Brito Herrera'), ('Paulina', 'Jorquera'), ('Ekaterina', 'Makarova'), ('Dessislava', 'Mladenova'), ('Sanaz', 'Marand'), ('Cristina', 'Greco Naccarato'), ('Cagla', 'Urcu'), ('Liege', 'Vieira'), ('Chang', 'Xu'), ('Jessica', 'Sweeting'), ('Yi Fan', 'Xu'), ('Eloisa Maria', 'Compostizo De Andres'), ('Karina', 'Porushkevich'), ('Ornella', 'Gentile'), ('Valeria', 'Casillo'), ('Bianca Ioana', 'Bonifate'), ('Michelle', 'Russ'), ('Monika', 'Lalewicz'), ('Amandine', 'Cazeaux'), ('Simonetta', 'Miori'), ('Fatima', 'El Allami'), ('Gabriela', 'Roux'), ('Sherazad', 'Benamar'), ('Sherazad', 'Reix'), ('Zora', 'Vlckova'), ('Naomi', 'Cavaday'), ('Nathalia', 'Rossi'), ('Maria Eugenia', 'Roca Recarey'), ('Lauren', 'Jones'), ('Roxane', 'Vaisemberg'), ('Ivana', 'Belejova'), ('Petra', 'Vogel'), ('Majdouline', 'Akrate'), ('Laura', 'Sadria'), ('Ia', 'Jikia'), ('Alessandra', 'Caprara'), ('Guadalupe', 'Moreno'), ('Lucie', 'Sipkova'), ('Xenia', 'Samoilova'), ('Kotomi', 'Takahata'), ('Stephanie', 'Theiler'), ('Maria', 'Prishlyak'), ('Grace', 'Leake'), ('Ioana Alexandra', 'Oprea'), ('Sanne', 'Bakker'), ('Katerina', 'Vankova'), ('Kristy', 'Frilling'), ('Tatiana', 'Bua'), ('Anastasia', 'Kontratevidi'), ('Chane', 'Hines'), ('Julia', 'Gavenko'), ('Yuuki', 'Tanaka'), ('Petra', 'Kvitova'), ('Leticia', 'Costas'), ('Sandra', 'Roma'), ('Nina', 'Mujezinovic'), ('Stella', 'Papaspyrou'), ('Chinami', 'Ogi'), ('Martina', 'Balogova'), ('Xinyun', 'Han'), ('Nicole', 'Riner'), ('Lara', 'Meccico'), ('Mai', 'Iwasaki'), ('Oksana', 'Kalashnikova'), ('Dipti', 'Srivastava'), ('Claudia', 'Mercado'), ('Margarita', 'Lazareva'), ('Shaozhuo', 'Liu'), ('Ana Maria', 'Chavez Franco'), ('Arantxa', 'Rus'), ('Ekaterina', 'Kamendova'), ('Monika', 'Tumova'), ('Gabriella', 'Boboc'), ('Ganna', 'Lukianchykova'), ('Sofia', 'Medina'), ('Ekaterina', 'Abaeva'), ('Andressa', 'Garcia'), ('Giulia', 'Bruzzone'), ('Catia', 'Rodrigues'), ('Danielle', 'Mills'), ('Flavia', 'Borges'), ('Misaki', 'Doi'), ('Veronika', 'Domagala'), ('Cindy', 'Chala'), ('Ksenia', 'Pervak'), ('Bianca', 'Botto'), ('Marianna', 'Natali'), ('Carolina', 'Orsi'), ('Aleksandra', 'Vukadinovic'), ('Elixane', 'Lechemia'), ('Sonya', 'Dayal'), ('Francesca', 'Campigotto'), ('Cristina Bianca', 'Danaila'), ('Tereza', 'Budilova'), ('Gemma', 'Praditngam'), ('Ekaterine', 'Gorgodze'), ('Dejana', 'Raickovic'), ('Alena', 'Gerasimova'), ('Quirine', 'Lemoine'), ('Chieh Yu', 'Hsu'), ('Anastasiya', 'Vasylyeva'), ('Alexia', 'Quartetto'), ('Joanna', 'Bougon'), ('Kristyna', 'Pliskova'), ('Elena', 'Bogdan'), ('Fiorella', 'Jerardino'), ('Julie', 'Gonzalez Rodriguez'), ('Alejandra', 'Barragan'), ('Renata', 'Bakieva'), ('Ashley', 'Krysiak'), ('Sarah Rebecca', 'Sekulic'), ('Na Lae', 'Han'), ('Natali', 'Coronel'), ('Kristyna', 'Hancarova'), ('Doroteja', 'Eric'), ('Kobkanok', 'Upapong'), ('Chanel', 'Simmonds'), ('Annie', 'Sullivan'), ('Xenia', 'Knoll'), ('Jenny Thuy', 'Le'), ('Francisca', 'Matos'), ('Christina', 'Madenoglou'), ('Alexandra', 'Avirvarei'), ('Georgina', 'Fedosenkova'), ('Alicia', 'Doms Golobart'), ('Amy', 'Hoburn'), ('Monica', 'Turewicz'), ('Martina', 'Zerbola'), ('Mashaal', 'Hameed'), ('Maria Sol', 'Carrasco'), ('Sabrina', 'Dos Reis'), ('Ruxandra', 'Ababii'), ('Daniella', 'Patton'), ('Veronika', 'Zavodska'), ('Briar', 'Preston'), ('Gabriela', 'Ce'), ('Amanda', 'Rodgers'), ('Constanze', 'Lotz'), ('Paula', 'Mocete Talamantes'), ('Verena', 'Gantschnig'), ('Ainhoa', 'Atucha Gomez'), ('Katarzyna', 'Kossowska'), ('Julia', 'Stamatova'), ('Vorranavaporn', 'Vorrarattanamongkol'), ('Michaela', 'Jasenakova'), ('Agustina Sol', 'Eskenazi'), ('Maja', 'Mladenovic'), ('Sandra', 'Garriga Catala'), ('Zanmarie', 'Pienaar'), ('Rita', 'Vilaca'), ('Julia', 'Kimmelmann'), ('Martina', 'Trevisan'), ('Charitomeni', 'Matoula'), ('Andreea', 'Istrate'), ('Sowjanya', 'Bavisetti'), ('Gabrielle', 'Moxey'), ('Viktoryia', 'Kisialeva'), ('Sarahi', 'Garcia Carrera'), ('Rachel', 'Girard'), ('Laura', 'Robson'), ('Kate', 'Vialle'), ('Anna', 'Montserrat Sanchez'), ('Carol', 'Augustine Benito'), ('Elena Teodora', 'Cadar'), ('Kamila', 'Pavelkova'), ('Arantxa', 'Sanchez'), ('Julia', 'Wachaczyk'), ('Ana Sofia', 'Sanchez'), ('Ecaterina', 'Oproiu'), ('Snigdha', 'Padamata'), ('Rona', 'Berisha'), ('Olga', 'Doroshina'), ('So Ra', 'Lee'), ('Brandy', 'Mina'), ('Natalie', 'Novakova'), ('Storm', 'Sanders'), ('Alexandra', 'Martinez'), ('Ysaline', 'Bonaventure'), ('Barbora', 'Trestikova'), ('Stefania', 'Hristov'), ('Ana Maria', 'Crisan'), ('Elpida', 'Papanelopoulou'), ('Tereza', 'Jankovska'), ('Rebecca', 'Andrade'), ('Kelly', 'Williford'), ('Tina', 'Rupert'), ('Mia Nicole', 'Eklund'), ('Bernarda', 'Pera'), ('Montserrat', 'Alonso'), ('Rosalie', 'Van Der Hoek'), ('Hedda', 'Odegaard'), ('Samira', 'Radjaa'), ('Zuzanna', 'Maciejewska'), ('Saumya', 'Vig'), ('Marie', 'Benoit'), ('Iga', 'Odrzywolek'), ('Shakhlo', 'Saidova'), ('Irina', 'Khromacheva'), ('Yuliya', 'Lysa'), ('Sophie', 'Blom'), ('Jennifer', 'Zerbone'), ('Kristina', 'Chasovskikh'), ('Maria Camila', 'Trujillo Hoyos'), ('Karina', 'Rovira'), ('Teodora Adina', 'Ardeleanu'), ('Yasmine', 'Rashad'), ('Judit', 'Vives Joan'), ('Sarah Beth', 'Askew'), ('Yasmine', 'Xantos'), ('Lea', 'Tholey'), ('Hikari', 'Yamamoto'), ('Ines Miren', 'De Pablo'), ('Stuti', 'Singh Tomar'), ('Naomi', 'Totka'), ('Polina', 'Bezsmertnaya'), ('Hannah', 'King'), ('Gabriele', 'Bertasiute'), ('Rebecca', 'Smaller'), ('Busra', 'Kayrun'), ('Stephani', 'Rodriguez'), ('Raquel', 'Montalvo'), ('Oana', 'Irimescu'), ('Taylor', 'Townsend'), ('Carmen', 'Blasco Robaina'), ('Giulia', 'Della Cioppa'), ('Nadege', 'Jorda'), ('Beatriz', 'Haddad Maia'), ('Nelise', 'Verster'), ('Eleonore', 'Barrere'), ('Anastasia', 'Prokopenko'), ('Dzina', 'Milovanovic'), ('Isabelle', 'Wallace'), ('Katelyn', 'Jackson'), ('Polina', 'Novoselova'), ('Maite', 'Cano'), ('Ria', 'Vaidya'), ('Ana Lorena', 'Garcia Navas'), ('Aayushi', 'Chouhan'), ('Ivona', 'Cudina'), ('Karina', 'Gurgenyan'), ('Maria', 'Patrascu'), ('Denisa', 'Chereches'), ('Mirabelle', 'Njoze'), ('Vasanti', 'Shinde'), ('Amanda', 'Schneider'), ('Katharina', 'Herpertz'), ('Tayisiya', 'Morderger'), ('Tamara', 'Tomic'), ('Maria Fernanda', 'Herazo Gonzalez'), ('Andra Maria', 'Nitescu'), ('Micheline', 'Aubuchon'), ('Ilayda', 'Yondem'), ('Kanako', 'Osafune'), ('Birgit', 'Burk'), ('Anastasiya', 'Komardina'), ('Nina', 'Holanova'), ('Jil Belen', 'Teichmann'), ('Francesca', 'Di Lorenzo'), ('Natsuho', 'Arakawa'), ('Emerald', 'Able'), ('Manca', 'Pislak'), ('Irys', 'Ekani'), ('Veronica', 'Miroshnichenko'), ('Martina', 'Capurro Taborda'), ('Mariam', 'Bolkvadze'), ('Diana', 'Valverde'), ('Do Hee', 'Bae'), ('Daniela', 'Morales Beckmann'), ('Ioana Diana', 'Pietroiu'), ('Luisa Fernanda', 'Echeverry Rodriguez'), ('Mayuka', 'Aikawa'), ('Nicole', 'Frenkel'), ('Daria', 'Kruzhkova'), ('Alejandra', 'Tamayo Gomez'), ('Tereza', 'Koplova'), ('Chiara', 'Lommer'), ('Laura', 'Illanes'), ('Olga', 'Fridman'), ('Ana Paula', 'Leal'), ('Shiraz', 'Bronstein'), ('Nicole', 'Bunea'), ('Charlotte', 'Robillard Millette'), ('Ashley', 'Kratzer'), ('Momoka', 'Chimura'), ('Anna', 'Slovakova'), ('Ai Qi', 'Chen'), ('Jiaying', 'He'), ('Ysabel', 'Gonzalez Rico'), ('Andreea', 'Stanescu'), ('Marketa', 'Vondrousova'), ('Ecaterina', 'Ivasco'), ('Ivon', 'Mihaleva'), ('Jasmine', 'Boyd'), ('Andrea', 'Arratia Fernandez'), ('Kayla', 'Day'), ('Ekaterina', 'Davletova'), ('Irina', 'Cantos Siemers'), ('Oceane', 'Mialon'), ('Watsachol', 'Sawasdee'), ('Ellen', 'Ashley'), ('Mila', 'Mejic'), ('Natalia', 'Nikolopoulou'), ('Marta', 'Del Pino Maturano'), ('Jayci', 'Goldsmith'), ('Yang', 'Lee'), ('Isabella', 'Tcherkes Zade'), ('Mara', 'Vidal'), ('Taylor', 'Johnson'), ('Julia', 'Vulpio'), ('Dagmar', 'Zdrubecka'), ('Olga', 'Danilovic'), ('Xiyu', 'Wang'), ('Lina', 'Shokry'), ('Ya Hsin', 'Lee'), ('Ruxandra', 'Schech'), ('Yasmina', 'Karimjanova'), ('Lara', 'Biter'), ('Najah', 'Dawson'), ('Giulia', 'Morlet'), ('Matilde', 'Mariani'), ('Isabella', 'Nunez'), ('Betina', 'Tokac'), ('Noa', 'Krznaric')",select ?t1_first_name ?t1_last_name where { ?t1 a dbo:players . ?t1 dbo:players\#first_name ?t1_first_name . ?t1 dbo:players\#last_name ?t1_last_name . ?t1 dbo:players\#birth_date ?t1_birth_date . ?t1 dbo:players\#hand ?t1_hand . FILTER(?t1_hand = 'L') .        }  order by asc (?t1_birth_date),"('Ann', 'Jones'), ('Wendy', 'Gilchrist'), ('Martina', 'Navratilova'), ('Mary', 'Carillo'), ('Katerina', 'Bohmova'), ('Petra', 'Delhees Jauch'), ('Nancy', 'Loeffler Caro'), ('Lise', 'Gregory'), ('Rene', 'Collins'), ('Nicole', 'Arendt'), ('Florencia', 'Labat'), ('Sabine', 'Appelmans'), ('Andreea', 'Ehritt Vanc'), ('Monica', 'Seles'), ('Gala', 'Leon Garcia'), ('Karen', 'Cross'), ('Julie', 'Pullin'), ('Vanessa', 'Webb'), ('Elena', 'Tatarkova'), ('Anca', 'Barna'), ('Francesca', 'Lubiani'), ('Gaelle', 'Widmer'), ('Amanda', 'Keen'), ('Amanda', 'Augustus'), ('Rita', 'Kuti Kis'), ('Amelie', 'Cocheteux'), ('Amelie', 'Castera'), ('Saori', 'Obata'), ('Marine', 'Nizri Spiegel'), ('Patty', 'Schnyder'), ('Julie', 'Ditty'), ('Joana', 'Cortez'), ('Barbara', 'Schwartz'), ('Ludmilla', 'Varmuza'), ('Magui', 'Serna'), ('Amanda', 'Grahame'), ('Kim', 'Kilsdonk'), ('Emilie', 'Loit'), ('Erika', 'Pineider'), ('Anne Gaelle', 'Sidot'), ('Erica', 'Biro'), ('Stephanie', 'Kovacic'), ('Sybille', 'Bammer'), ('Lisa', 'Fritz'), ('Maja', 'Matevzic'), ('Leanne', 'Baker'), ('Aurelie', 'Vedy'), ('Carla', 'Tiene'), ('Erika', 'Venere'), ('Jelena', 'Kostanic Tosic'), ('Clarisa', 'Fernandez'), ('Ansley', 'Cargill'), ('Dimana', 'Krastevitch'), ('Maria Jose', 'Martinez Sanchez'), ('Zerene', 'Reyes'), ('Melinda', 'Czink'), ('Sandra', 'Klemenschits'), ('Maria Elizabeth', 'Lopez'), ('Salome', 'Llaguno'), ('Lindsay', 'Cox'), ('Iveta', 'Benesova'), ('Eugenia', 'Chialvo'), ('Chun Yan', 'He'), ('Maria Fernanda', 'Alves'), ('Emily', 'Quin'), ('Fernanda', 'Oliveira Da Silva'), ('Annabel', 'Blow'), ('Julia', 'Smith'), ('Ana Lucia', 'Migliarini De Leon'), ('Elizabeth', 'Bondi'), ('Galina', 'Fokina'), ('Elise', 'Tamaela'), ('Bit Na', 'Lee'), ('Sonia', 'Iacovacci'), ('Mariana Pires', 'Junqueira'), ('Natalia', 'Bogdanova'), ('Irina', 'Smirnova'), ('Meghha', 'Vakaria'), ('Angela', 'Haynes'), ('Karly', 'Olson'), ('Casey', 'Dellacqua'), ('Kathrin', 'Hegel'), ('Beatrix', 'Csordas'), ('Zsuzsanna', 'Babos'), ('Emily', 'Applegate'), ('Olga', 'Pasichnichenko'), ('Theresa', 'Logar'), ('Jin A', 'Lee'), ('Hannah', 'Kuervers'), ('Andreea', 'Novaceanu'), ('Valentina', 'Tizzano'), ('Helen', 'Fritche'), ('Sandra', 'Sasidharan'), ('Isha', 'Lakhani'), ('Krushmi', 'Chheda'), ('Ljubica', 'Avramovic'), ('Avel Romaly', 'Coronado'), ('Shadisha', 'Robinson'), ('Carla', 'Zabaleta'), ('Diana', 'Arutyunova'), ('Cecile', 'Baijot'), ('Laura', 'Rocchi'), ('Rie', 'Imai'), ('Danielle', 'Harmsen'), ('Alejandra', 'Obregon'), ('Ariela', 'Perez'), ('Vasilisa', 'Davydova'), ('Emilia', 'Yorio'), ('Lizaan', 'Du Plessis'), ('Claire', 'Feuerstein'), ('Alexandria', 'Liles'), ('Katharine', 'Baker'), ('Emma', 'Laine'), ('Geraldine', 'Roma'), ('Aya', 'El Akkad'), ('Alexandra', 'Kazanova'), ('Allison', 'Baker'), ('Lucy', 'Fletcher'), ('Monika', 'Musilova'), ('Jitka', 'Gavdunova'), ('Elena', 'Petrucciano'), ('Varvara', 'Lepchenko'), ('Claire', 'De Gubernatis'), ('Seheno', 'Razafindramaso'), ('Karolina', 'Soor'), ('Melisa', 'Cabrera Handt'), ('Shraddha', 'Lodha'), ('Sylvia', 'Krywacz'), ('Amina', 'El Sahn'), ('Hendrike Lea', 'Heitmann'), ('Dunja', 'Antunovic'), ('Micaela', 'Acosta'), ('Katerina', 'Bohmova'), ('Catherine', 'Grotz'), ('Yurika', 'Sema'), ('Sheng Nan', 'Sun'), ('Lucie', 'Safarova'), ('Jitka', 'Kleisnerova'), ('Carolina', 'Escamilla'), ('Tapiwa', 'Marobela'), ('Punam', 'Reddy'), ('Katia', 'Sabate Orera'), ('Shana', 'Claes'), ('Chrissie', 'Seredni'), ('Yui', 'Nagasawa'), ('Marcela', 'Vojtiskova'), ('Seul Ki', 'Chin'), ('Nina', 'Munch Soegaard'), ('Hannah', 'Grady'), ('Karen', 'Castiblanco'), ('Angelique', 'Kerber'), ('Lauren', 'Lui'), ('Rana', 'Tharwat Hafez'), ('Nicole', 'Grunwald'), ('Ana', 'Veselinovic'), ('Sanaa', 'Bhambri'), ('Diana Andreea', 'Gae'), ('Ana', 'Beltran Trigueros'), ('Barbora', 'Bozkova'), ('Camila', 'Belassi'), ('Violette', 'Huck'), ('Megumi', 'Fukui'), ('Rita', 'Gouveia'), ('Mihaela', 'Buzarnescu'), ('Liset', 'Brito Herrera'), ('Paulina', 'Jorquera'), ('Ekaterina', 'Makarova'), ('Dessislava', 'Mladenova'), ('Sanaz', 'Marand'), ('Cristina', 'Greco Naccarato'), ('Cagla', 'Urcu'), ('Liege', 'Vieira'), ('Chang', 'Xu'), ('Jessica', 'Sweeting'), ('Yi Fan', 'Xu'), ('Eloisa Maria', 'Compostizo De Andres'), ('Karina', 'Porushkevich'), ('Ornella', 'Gentile'), ('Valeria', 'Casillo'), ('Bianca Ioana', 'Bonifate'), ('Michelle', 'Russ'), ('Monika', 'Lalewicz'), ('Amandine', 'Cazeaux'), ('Fatima', 'El Allami'), ('Simonetta', 'Miori'), ('Gabriela', 'Roux'), ('Sherazad', 'Benamar'), ('Sherazad', 'Reix'), ('Zora', 'Vlckova'), ('Naomi', 'Cavaday'), ('Nathalia', 'Rossi'), ('Maria Eugenia', 'Roca Recarey'), ('Lauren', 'Jones'), ('Roxane', 'Vaisemberg'), ('Ivana', 'Belejova'), ('Petra', 'Vogel'), ('Majdouline', 'Akrate'), ('Laura', 'Sadria'), ('Ia', 'Jikia'), ('Alessandra', 'Caprara'), ('Guadalupe', 'Moreno'), ('Lucie', 'Sipkova'), ('Xenia', 'Samoilova'), ('Kotomi', 'Takahata'), ('Stephanie', 'Theiler'), ('Maria', 'Prishlyak'), ('Grace', 'Leake'), ('Ioana Alexandra', 'Oprea'), ('Sanne', 'Bakker'), ('Katerina', 'Vankova'), ('Kristy', 'Frilling'), ('Tatiana', 'Bua'), ('Anastasia', 'Kontratevidi'), ('Chane', 'Hines'), ('Julia', 'Gavenko'), ('Yuuki', 'Tanaka'), ('Petra', 'Kvitova'), ('Leticia', 'Costas'), ('Sandra', 'Roma'), ('Nina', 'Mujezinovic'), ('Stella', 'Papaspyrou'), ('Chinami', 'Ogi'), ('Martina', 'Balogova'), ('Xinyun', 'Han'), ('Nicole', 'Riner'), ('Lara', 'Meccico'), ('Mai', 'Iwasaki'), ('Oksana', 'Kalashnikova'), ('Dipti', 'Srivastava'), ('Claudia', 'Mercado'), ('Margarita', 'Lazareva'), ('Shaozhuo', 'Liu'), ('Ana Maria', 'Chavez Franco'), ('Arantxa', 'Rus'), ('Ekaterina', 'Kamendova'), ('Monika', 'Tumova'), ('Gabriella', 'Boboc'), ('Ganna', 'Lukianchykova'), ('Sofia', 'Medina'), ('Ekaterina', 'Abaeva'), ('Andressa', 'Garcia'), ('Giulia', 'Bruzzone'), ('Catia', 'Rodrigues'), ('Danielle', 'Mills'), ('Flavia', 'Borges'), ('Misaki', 'Doi'), ('Veronika', 'Domagala'), ('Cindy', 'Chala'), ('Ksenia', 'Pervak'), ('Bianca', 'Botto'), ('Marianna', 'Natali'), ('Carolina', 'Orsi'), ('Aleksandra', 'Vukadinovic'), ('Elixane', 'Lechemia'), ('Sonya', 'Dayal'), ('Francesca', 'Campigotto'), ('Cristina Bianca', 'Danaila'), ('Tereza', 'Budilova'), ('Gemma', 'Praditngam'), ('Ekaterine', 'Gorgodze'), ('Dejana', 'Raickovic'), ('Alena', 'Gerasimova'), ('Quirine', 'Lemoine'), ('Chieh Yu', 'Hsu'), ('Anastasiya', 'Vasylyeva'), ('Alexia', 'Quartetto'), ('Joanna', 'Bougon'), ('Kristyna', 'Pliskova'), ('Elena', 'Bogdan'), ('Fiorella', 'Jerardino'), ('Julie', 'Gonzalez Rodriguez'), ('Alejandra', 'Barragan'), ('Renata', 'Bakieva'), ('Ashley', 'Krysiak'), ('Sarah Rebecca', 'Sekulic'), ('Na Lae', 'Han'), ('Natali', 'Coronel'), ('Kristyna', 'Hancarova'), ('Doroteja', 'Eric'), ('Chanel', 'Simmonds'), ('Kobkanok', 'Upapong'), ('Annie', 'Sullivan'), ('Jenny Thuy', 'Le'), ('Xenia', 'Knoll'), ('Francisca', 'Matos'), ('Christina', 'Madenoglou'), ('Alexandra', 'Avirvarei'), ('Georgina', 'Fedosenkova'), ('Alicia', 'Doms Golobart'), ('Amy', 'Hoburn'), ('Monica', 'Turewicz'), ('Martina', 'Zerbola'), ('Mashaal', 'Hameed'), ('Sabrina', 'Dos Reis'), ('Maria Sol', 'Carrasco'), ('Ruxandra', 'Ababii'), ('Daniella', 'Patton'), ('Veronika', 'Zavodska'), ('Briar', 'Preston'), ('Gabriela', 'Ce'), ('Amanda', 'Rodgers'), ('Constanze', 'Lotz'), ('Paula', 'Mocete Talamantes'), ('Verena', 'Gantschnig'), ('Ainhoa', 'Atucha Gomez'), ('Katarzyna', 'Kossowska'), ('Julia', 'Stamatova'), ('Vorranavaporn', 'Vorrarattanamongkol'), ('Michaela', 'Jasenakova'), ('Agustina Sol', 'Eskenazi'), ('Maja', 'Mladenovic'), ('Sandra', 'Garriga Catala'), ('Rita', 'Vilaca'), ('Zanmarie', 'Pienaar'), ('Julia', 'Kimmelmann'), ('Martina', 'Trevisan'), ('Charitomeni', 'Matoula'), ('Andreea', 'Istrate'), ('Sowjanya', 'Bavisetti'), ('Gabrielle', 'Moxey'), ('Viktoryia', 'Kisialeva'), ('Sarahi', 'Garcia Carrera'), ('Rachel', 'Girard'), ('Laura', 'Robson'), ('Kate', 'Vialle'), ('Anna', 'Montserrat Sanchez'), ('Elena Teodora', 'Cadar'), ('Carol', 'Augustine Benito'), ('Kamila', 'Pavelkova'), ('Arantxa', 'Sanchez'), ('Ana Sofia', 'Sanchez'), ('Julia', 'Wachaczyk'), ('Ecaterina', 'Oproiu'), ('Snigdha', 'Padamata'), ('Rona', 'Berisha'), ('Olga', 'Doroshina'), ('So Ra', 'Lee'), ('Brandy', 'Mina'), ('Natalie', 'Novakova'), ('Storm', 'Sanders'), ('Alexandra', 'Martinez'), ('Ysaline', 'Bonaventure'), ('Barbora', 'Trestikova'), ('Stefania', 'Hristov'), ('Ana Maria', 'Crisan'), ('Elpida', 'Papanelopoulou'), ('Tereza', 'Jankovska'), ('Rebecca', 'Andrade'), ('Kelly', 'Williford'), ('Tina', 'Rupert'), ('Mia Nicole', 'Eklund'), ('Bernarda', 'Pera'), ('Montserrat', 'Alonso'), ('Rosalie', 'Van Der Hoek'), ('Hedda', 'Odegaard'), ('Samira', 'Radjaa'), ('Zuzanna', 'Maciejewska'), ('Saumya', 'Vig'), ('Marie', 'Benoit'), ('Iga', 'Odrzywolek'), ('Shakhlo', 'Saidova'), ('Irina', 'Khromacheva'), ('Yuliya', 'Lysa'), ('Sophie', 'Blom'), ('Jennifer', 'Zerbone'), ('Kristina', 'Chasovskikh'), ('Maria Camila', 'Trujillo Hoyos'), ('Karina', 'Rovira'), ('Teodora Adina', 'Ardeleanu'), ('Yasmine', 'Rashad'), ('Judit', 'Vives Joan'), ('Sarah Beth', 'Askew'), ('Yasmine', 'Xantos'), ('Lea', 'Tholey'), ('Hikari', 'Yamamoto'), ('Ines Miren', 'De Pablo'), ('Stuti', 'Singh Tomar'), ('Naomi', 'Totka'), ('Polina', 'Bezsmertnaya'), ('Hannah', 'King'), ('Gabriele', 'Bertasiute'), ('Rebecca', 'Smaller'), ('Busra', 'Kayrun'), ('Stephani', 'Rodriguez'), ('Raquel', 'Montalvo'), ('Oana', 'Irimescu'), ('Taylor', 'Townsend'), ('Carmen', 'Blasco Robaina'), ('Giulia', 'Della Cioppa'), ('Nadege', 'Jorda'), ('Beatriz', 'Haddad Maia'), ('Nelise', 'Verster'), ('Eleonore', 'Barrere'), ('Anastasia', 'Prokopenko'), ('Dzina', 'Milovanovic'), ('Isabelle', 'Wallace'), ('Katelyn', 'Jackson'), ('Polina', 'Novoselova'), ('Maite', 'Cano'), ('Ria', 'Vaidya'), ('Ana Lorena', 'Garcia Navas'), ('Aayushi', 'Chouhan'), ('Ivona', 'Cudina'), ('Karina', 'Gurgenyan'), ('Maria', 'Patrascu'), ('Denisa', 'Chereches'), ('Mirabelle', 'Njoze'), ('Vasanti', 'Shinde'), ('Amanda', 'Schneider'), ('Katharina', 'Herpertz'), ('Tayisiya', 'Morderger'), ('Tamara', 'Tomic'), ('Maria Fernanda', 'Herazo Gonzalez'), ('Andra Maria', 'Nitescu'), ('Micheline', 'Aubuchon'), ('Ilayda', 'Yondem'), ('Birgit', 'Burk'), ('Kanako', 'Osafune'), ('Anastasiya', 'Komardina'), ('Nina', 'Holanova'), ('Jil Belen', 'Teichmann'), ('Francesca', 'Di Lorenzo'), ('Natsuho', 'Arakawa'), ('Emerald', 'Able'), ('Manca', 'Pislak'), ('Irys', 'Ekani'), ('Veronica', 'Miroshnichenko'), ('Martina', 'Capurro Taborda'), ('Mariam', 'Bolkvadze'), ('Diana', 'Valverde'), ('Do Hee', 'Bae'), ('Daniela', 'Morales Beckmann'), ('Ioana Diana', 'Pietroiu'), ('Luisa Fernanda', 'Echeverry Rodriguez'), ('Mayuka', 'Aikawa'), ('Nicole', 'Frenkel'), ('Daria', 'Kruzhkova'), ('Alejandra', 'Tamayo Gomez'), ('Tereza', 'Koplova'), ('Chiara', 'Lommer'), ('Laura', 'Illanes'), ('Olga', 'Fridman'), ('Ana Paula', 'Leal'), ('Shiraz', 'Bronstein'), ('Nicole', 'Bunea'), ('Charlotte', 'Robillard Millette'), ('Ashley', 'Kratzer'), ('Momoka', 'Chimura'), ('Anna', 'Slovakova'), ('Ai Qi', 'Chen'), ('Jiaying', 'He'), ('Ysabel', 'Gonzalez Rico'), ('Andreea', 'Stanescu'), ('Marketa', 'Vondrousova'), ('Ecaterina', 'Ivasco'), ('Ivon', 'Mihaleva'), ('Jasmine', 'Boyd'), ('Andrea', 'Arratia Fernandez'), ('Kayla', 'Day'), ('Ekaterina', 'Davletova'), ('Irina', 'Cantos Siemers'), ('Oceane', 'Mialon'), ('Watsachol', 'Sawasdee'), ('Ellen', 'Ashley'), ('Mila', 'Mejic'), ('Natalia', 'Nikolopoulou'), ('Marta', 'Del Pino Maturano'), ('Jayci', 'Goldsmith'), ('Yang', 'Lee'), ('Isabella', 'Tcherkes Zade'), ('Mara', 'Vidal'), ('Taylor', 'Johnson'), ('Julia', 'Vulpio'), ('Dagmar', 'Zdrubecka'), ('Olga', 'Danilovic'), ('Xiyu', 'Wang'), ('Lina', 'Shokry'), ('Ya Hsin', 'Lee'), ('Ruxandra', 'Schech'), ('Yasmina', 'Karimjanova'), ('Lara', 'Biter'), ('Najah', 'Dawson'), ('Giulia', 'Morlet'), ('Matilde', 'Mariani'), ('Isabella', 'Nunez'), ('Betina', 'Tokac'), ('Noa', 'Krznaric')",medium,True,1,
238,wta_1,Find the first name and country code of the player who did the most number of tours.,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",,select ?t1_country_code ?t1_first_name where { ?t1 a dbo:players . ?t2 a dbo:rankings . ?t2 dbo:rankings\#ref-player_id ?t1 .  ?t1 dbo:players\#country_code ?t1_country_code . ?t1 dbo:players\#first_name ?t1_first_name . ?t2 dbo:rankings\#tours ?t2_tours .        }   order by desc (?t2_tours) limit 1,,hard,,-2,timed out
239,wta_1,Find the year that has the most number of matches.,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"(2016,)",select ?t1_year where { ?t1 a dbo:matches . ?t1 dbo:matches\#year ?t1_year .        } group by ?t1_year  order by desc (count(*)) limit 1,"(2016,)",hard,True,1,false_negative
240,wta_1,Find the name and rank points of the winner who won the most times.,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name, winner_rank_points ORDER BY count(*) DESC LIMIT 1","('Elena Vesnina', 2340)",select ?t1_winner_name ?t1_winner_rank_points where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#winner_rank_points ?t1_winner_rank_points .        } group by ?t1_winner_name ?t1_winner_rank_points  order by desc (count(*)) limit 1,"('Elena Vesnina', 2340)",hard,True,1,
241,wta_1,Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,"('Serena Williams',)",select ?t1_winner_name where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#winner_rank_points ?t1_winner_rank_points . ?t1 dbo:matches\#tourney_name ?t1_tourney_name . FILTER(?t1_tourney_name = 'Australian Open') .        }   order by desc (?t1_winner_rank_points) limit 1,"('Serena Williams',)",hard,True,1,
242,wta_1,find the names of loser and winner who played in the match with greatest number of minutes.,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","('Petra Kvitova', 'Angelique Kerber')",select ?t1_winner_name ?t1_loser_name where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#loser_name ?t1_loser_name . ?t1 dbo:matches\#minutes ?t1_minutes .        }   order by desc (?t1_minutes) limit 1,"('Petra Kvitova', 'Angelique Kerber')",medium,True,1,
243,wta_1,Find the total ranking points for each player and their first name.,"SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",,select (sum( ?t1_ranking_points) as ?aggregation_t1_ranking_points_331 ) ?t2_first_name where { ?t1 a dbo:rankings . ?t2 a dbo:players . ?t1 dbo:rankings\#ref-player_id ?t2 .  ?t1 dbo:rankings\#ranking_points ?t1_ranking_points . ?t2 dbo:players\#first_name ?t2_first_name .        } group by ?t2_first_name,,medium,True,1,false_negative
244,wta_1,find the number of players for each country.,"SELECT count(*) ,  country_code FROM players GROUP BY country_code","(79, 'DEN'), (342, 'NED'), (8, 'GUD'), (3, 'SAM'), (1, 'UAE'), (44, 'SIN'), (3, 'NCA'), (63, 'ALG'), (150, 'VEN'), (39, 'CUB'), (4, 'rc='), (236, 'AUT'), (169, 'HUN'), (243, 'SUI'), (68, 'IRL'), (3, 'ECA'), (660, 'GBR'), (232, 'ISR'), (33, 'ESA'), (48, 'EST'), (1, 'NA'), (56, 'HKG'), (247, 'BEL'), (25, 'MNE'), (1, 'ANG'), (145, 'SLO'), (456, 'CZE'), (31, 'LTU'), (163, 'GRE'), (2, 'MON'), (1, 'MGL'), (17, 'MLT'), (29, 'TRI'), (7, 'SEN'), (1, 'GRN'), (853, 'ESP'), (57, 'TUN'), (4, 'GHA'), (19, 'JAM'), (144, 'BLR'), (422, 'ROU'), (35, 'MAS'), (6, 'AHO'), (283, 'RSA'), (15, 'MRI'), (6, 'TJK'), (19, 'VIE'), (3, 'RHO'), (48, 'YUG'), (3, 'LES'), (38, 'DOM'), (15, 'LIE'), (12, 'TKM'), (24, 'CRC'), (10, 'AZE'), (68, 'NOR'), (16, 'SCG'), (45, 'MDA'), (1, 'AND'), (97, 'BOL'), (7, 'IRQ'), (22, 'URS'), (2, 'TOG'), (181, 'INA'), (26, 'ZIM'), (478, 'IND'), (11, 'LIB'), (112, 'EGY'), (8, 'CMR'), (142, 'POR'), (91, 'GEO'), (456, 'ARG'), (4, 'BRU'), (240, 'CRO'), (2217, 'USA'), (224, 'SRB'), (37, 'LUX'), (27, 'ARM'), (3, 'OMA'), (810, 'RUS'), (13, 'NAM'), (75, 'BIH'), (99, 'KAZ'), (103, 'FIN'), (1, 'PNG'), (17, 'BOT'), (18, 'PAK'), (2, 'ALB'), (22, 'PAN'), (1, 'ZAM'), (23, 'KGZ'), (20, 'BER'), (5, 'BRN'), (56, 'PAR'), (104, 'NZL'), (833, 'GER'), (56, 'LAT'), (311, 'UKR'), (5, 'BDI'), (171, 'THA'), (6, 'JOR'), (2, 'CGO'), (240, 'COL'), (70, 'PHI'), (266, 'POL'), (5, 'FIJ'), (203, 'TUR'), (324, 'SWE'), (247, 'SVK'), (22, 'CYP'), (8, 'ANT'), (4, 'MRN'), (80, 'NGR'), (20, 'BAR'), (114, 'CHI'), (742, 'AUS'), (736, 'FRA'), (8, 'HON'), (181, 'BUL'), (11, 'UNK'), (391, 'CHN'), (43, 'PUR'), (97, 'MAR'), (1, 'TTO'), (21, 'SYR'), (21, 'MAD'), (331, 'CAN'), (456, 'BRA'), (15, 'IRI'), (146, 'TPE'), (23, 'MKD'), (22, 'FRG'), (12, 'POC'), (18, 'ISL'), (5, 'HAI'), (90, 'ECU'), (274, 'KOR'), (32, 'SRI'), (76, 'PER'), (29, 'GUA'), (17, 'REU'), (22, 'BAH'), (866, 'ITA'), (2, 'BEN'), (21, 'TCH'), (23, 'KEN'), (823, 'JPN'), (56, 'URU'), (4, 'SMR'), (416, 'MEX'), (1, 'QAT'), (123, 'UZB'), (8, 'ETH'), (3, 'KUW')",select (count( *) as ?aggregation_all) ?t1_country_code where { ?t1 a dbo:players . ?t1 dbo:players\#country_code ?t1_country_code .        } group by ?t1_country_code,"(243, 'SUI'), (240, 'CRO'), (247, 'BEL'), (742, 'AUS'), (2217, 'USA'), (247, 'SVK'), (171, 'THA'), (866, 'ITA'), (145, 'SLO'), (331, 'CAN'), (416, 'MEX'), (232, 'ISR'), (169, 'HUN'), (736, 'FRA'), (853, 'ESP'), (833, 'GER'), (150, 'VEN'), (456, 'ARG'), (236, 'AUT'), (456, 'CZE'), (104, 'NZL'), (810, 'RUS'), (422, 'ROU'), (144, 'BLR'), (181, 'BUL'), (43, 'PUR'), (283, 'RSA'), (26, 'ZIM'), (660, 'GBR'), (391, 'CHN'), (342, 'NED'), (324, 'SWE'), (823, 'JPN'), (146, 'TPE'), (16, 'SCG'), (240, 'COL'), (37, 'LUX'), (181, 'INA'), (22, 'URS'), (10, 'AZE'), (274, 'KOR'), (79, 'DEN'), (142, 'POR'), (22, 'FRG'), (21, 'TCH'), (456, 'BRA'), (76, 'PER'), (68, 'NOR'), (56, 'HKG'), (163, 'GRE'), (266, 'POL'), (91, 'GEO'), (311, 'UKR'), (103, 'FIN'), (48, 'YUG'), (56, 'PAR'), (21, 'MAD'), (224, 'SRB'), (478, 'IND'), (56, 'URU'), (114, 'CHI'), (90, 'ECU'), (24, 'CRC'), (68, 'IRL'), (123, 'UZB'), (57, 'TUN'), (99, 'KAZ'), (97, 'MAR'), (48, 'EST'), (75, 'BIH'), (56, 'LAT'), (3, 'OMA'), (23, 'KGZ'), (203, 'TUR'), (32, 'SRI'), (45, 'MDA'), (112, 'EGY'), (4, 'SMR'), (35, 'MAS'), (2, 'MON'), (27, 'ARM'), (19, 'JAM'), (97, 'BOL'), (44, 'SIN'), (3, 'SAM'), (63, 'ALG'), (31, 'LTU'), (38, 'DOM'), (5, 'HAI'), (15, 'MRI'), (15, 'LIE'), (22, 'BAH'), (29, 'GUA'), (23, 'MKD'), (70, 'PHI'), (25, 'MNE'), (19, 'VIE'), (12, 'POC'), (2, 'ALB'), (12, 'TKM'), (17, 'MLT'), (1, 'ANG'), (80, 'NGR'), (17, 'REU'), (8, 'CMR'), (2, 'BEN'), (29, 'TRI'), (6, 'AHO'), (33, 'ESA'), (17, 'BOT'), (4, 'BRU'), (22, 'CYP'), (39, 'CUB'), (18, 'ISL'), (23, 'KEN'), (20, 'BAR'), (2, 'TOG'), (21, 'SYR'), (5, 'BRN'), (15, 'IRI'), (18, 'PAK'), (3, 'KUW'), (5, 'BDI'), (13, 'NAM'), (11, 'LIB'), (8, 'HON'), (3, 'NCA'), (8, 'GUD'), (3, 'LES'), (1, 'UAE'), (4, 'MRN'), (5, 'FIJ'), (20, 'BER'), (8, 'ANT'), (22, 'PAN'), (3, 'ECA'), (6, 'JOR'), (3, 'RHO'), (8, 'ETH'), (2, 'CGO'), (7, 'SEN'), (6, 'TJK'), (7, 'IRQ'), (4, 'GHA'), (11, 'UNK'), (4, 'rc='), (1, 'QAT'), (1, 'PNG'), (1, 'MGL'), (1, 'GRN'), (1, 'AND'), (1, 'ZAM'), (1, 'TTO'), (1, 'NA')",medium,True,1,
245,wta_1,find the code of the country where has the greatest number of players.,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"('USA',)",select ?t1_country_code where { ?t1 a dbo:players . ?t1 dbo:players\#country_code ?t1_country_code .        } group by ?t1_country_code  order by desc (count(*)) limit 1,"('USA',)",hard,True,1,false_negative
246,wta_1,Find the codes of countries that have more than 50 players.,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,"('DEN',), ('NED',), ('ALG',), ('VEN',), ('AUT',), ('HUN',), ('SUI',), ('IRL',), ('GBR',), ('ISR',), ('HKG',), ('BEL',), ('SLO',), ('CZE',), ('GRE',), ('ESP',), ('TUN',), ('BLR',), ('ROU',), ('RSA',), ('NOR',), ('BOL',), ('INA',), ('IND',), ('EGY',), ('POR',), ('GEO',), ('ARG',), ('CRO',), ('USA',), ('SRB',), ('RUS',), ('BIH',), ('KAZ',), ('FIN',), ('PAR',), ('NZL',), ('GER',), ('LAT',), ('UKR',), ('THA',), ('COL',), ('PHI',), ('POL',), ('TUR',), ('SWE',), ('SVK',), ('NGR',), ('CHI',), ('AUS',), ('FRA',), ('BUL',), ('CHN',), ('MAR',), ('CAN',), ('BRA',), ('TPE',), ('ECU',), ('KOR',), ('PER',), ('ITA',), ('JPN',), ('URU',), ('MEX',), ('UZB',)",select ?t1_country_code where { ?t1 a dbo:players . ?t1 dbo:players\#country_code ?t1_country_code .        } group by ?t1_country_code   having(count( *)  > 50),"('SUI',), ('CRO',), ('BEL',), ('AUS',), ('USA',), ('SVK',), ('THA',), ('ITA',), ('SLO',), ('CAN',), ('MEX',), ('ISR',), ('HUN',), ('FRA',), ('ESP',), ('GER',), ('VEN',), ('ARG',), ('AUT',), ('CZE',), ('NZL',), ('RUS',), ('ROU',), ('BLR',), ('BUL',), ('RSA',), ('GBR',), ('CHN',), ('NED',), ('SWE',), ('JPN',), ('TPE',), ('COL',), ('INA',), ('KOR',), ('DEN',), ('POR',), ('BRA',), ('PER',), ('NOR',), ('HKG',), ('GRE',), ('POL',), ('GEO',), ('UKR',), ('FIN',), ('PAR',), ('SRB',), ('IND',), ('URU',), ('CHI',), ('ECU',), ('IRL',), ('UZB',), ('TUN',), ('KAZ',), ('MAR',), ('BIH',), ('LAT',), ('TUR',), ('EGY',), ('BOL',), ('ALG',), ('PHI',), ('NGR',)",easy,True,1,
247,wta_1,Find the total number of tours for each ranking date.,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",,select (sum( ?t1_tours) as ?aggregation_t1_tours_441 ) ?t1_ranking_date where { ?t1 a dbo:rankings . ?t1 dbo:rankings\#tours ?t1_tours . ?t1 dbo:rankings\#ranking_date ?t1_ranking_date .        } group by ?t1_ranking_date,,medium,True,1,false_negative
248,wta_1,Find the number of matches happened in each year.,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR","(108, 2017), (158, 2016), (12, 2013)",select (count( *) as ?aggregation_all) ?t1_year where { ?t1 a dbo:matches . ?t1 dbo:matches\#year ?t1_year .        } group by ?t1_year,"(158, 2016), (108, 2017), (12, 2013)",medium,True,1,
249,wta_1,Find the name and rank of the 3 youngest winners across all matches.,"SELECT DISTINCT winner_name ,  winner_rank, winner_age FROM matches ORDER BY winner_age LIMIT 3","('Madison Keys', 17, 20.91718), ('Madison Keys', 24, 21.089664), ('Madison Keys', 16, 21.319645)",select distinct ?t1_winner_name ?t1_winner_rank where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#winner_rank ?t1_winner_rank . ?t1 dbo:matches\#winner_age ?t1_winner_age .        }   order by asc (?t1_winner_age) limit 1,"('Madison Keys', 17)",medium,False,0,
250,wta_1,How many different winners both participated in the WTA Championships and were left handed?,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',"(2,)",select distinct (count(distinct ?t1_winner_name) as ?aggregation_t1_winner_name_135 ) where { ?t1 a dbo:matches . ?t1 dbo:matches\#winner_name ?t1_winner_name . ?t1 dbo:matches\#tourney_name ?t1_tourney_name . ?t1 dbo:matches\#winner_hand ?t1_winner_hand . FILTER(?t1_tourney_name = 'WTA Championships' && ?t1_winner_hand = 'L') .        },"(2,)",medium,True,1,
251,wta_1,"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.","SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","('Serena', 'USA', 19810926)",select ?t1_first_name ?t1_country_code ?t1_birth_date where { ?t1 a dbo:players . ?t2 a dbo:matches . ?t2 dbo:matches\#ref-winner_id ?t1 .  ?t1 dbo:players\#first_name ?t1_first_name . ?t1 dbo:players\#country_code ?t1_country_code . ?t1 dbo:players\#birth_date ?t1_birth_date . ?t2 dbo:matches\#winner_rank_points ?t2_winner_rank_points .        }   order by desc (?t2_winner_rank_points) limit 1,"('Serena', 'USA', 19810926)",hard,True,1,
252,wta_1,Find the number of players for each hand type.,"SELECT count(*) ,  hand FROM players GROUP BY hand","(955, 'NA'), (14193, 'U'), (5028, 'R'), (487, 'L')",select (count( *) as ?aggregation_all) ?t1_hand where { ?t1 a dbo:players . ?t1 dbo:players\#hand ?t1_hand .        } group by ?t1_hand,"(5028, 'R'), (487, 'L'), (14193, 'U'), (955, 'NA')",medium,True,1,
253,battle_death,How many ships ended up being 'Captured'?,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',"(4,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:ship . ?t1 dbo:ship\#disposition_of_ship ?t1_disposition_of_ship . FILTER(?t1_disposition_of_ship = 'Captured') .        },"(4,)",easy,True,1,
254,battle_death,List the name and tonnage ordered by in descending alphaetical order for the names.,"SELECT name ,  tonnage FROM ship ORDER BY name DESC","('Three Brothers', 't'), ('Mary', 't'), ('Lettice', 't'), ('HMS Avon', '391'), ('HMS Atalanta', '225'), ('Bon Accord', 't'), ('Bacchus', 't')",select ?t1_name ?t1_tonnage where { ?t1 a dbo:ship . ?t1 dbo:ship\#name ?t1_name . ?t1 dbo:ship\#tonnage ?t1_tonnage . ?t1 dbo:ship\#name ?t1_name .        }  order by desc (?t1_name),"('Three Brothers', 't'), ('Mary', 't'), ('Lettice', 't'), ('HMS Avon', '391'), ('HMS Atalanta', '225'), ('Bon Accord', 't'), ('Bacchus', 't')",medium,True,1,
255,battle_death,"List the name, date and result of each battle.","SELECT name ,  date FROM battle","('Battle of Adrianople', '14 April 1205'), ('Battle of Serres', 'June 1205'), ('Battle of Rusion', '31 January 1206'), ('Battle of Rodosto', 'February 1206'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Boruy', 'June 1205'), ('Battle of Philippopolis', '31 June 1208'), ('Siege of Constantinople', '1235')",select ?t1_name ?t1_date where { ?t1 a dbo:battle . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#date ?t1_date .        },"('Battle of Adrianople', '14 April 1205'), ('Battle of Serres', 'June 1205'), ('Battle of Rusion', '31 January 1206'), ('Battle of Rodosto', 'February 1206'), ('Battle of Messinopolis', '4 September 1207'), ('Battle of Boruy', 'June 1205'), ('Battle of Philippopolis', '31 June 1208'), ('Siege of Constantinople', '1235')",medium,True,1,
256,battle_death,What is maximum and minimum death toll caused each time?,"SELECT max(killed) ,  min(killed) FROM death","(29, 0)",select (max( ?t1_killed) as ?aggregation_t1_killed_41 ) (min( ?t1_killed) as ?aggregation_t1_killed_121 ) where { ?t1 a dbo:death . ?t1 dbo:death\#killed ?t1_killed . ?t1 dbo:death\#killed ?t1_killed .        },"(29, 0)",medium,True,1,
257,battle_death,What is the average number of injuries caused each time?,SELECT avg(injured) FROM death,"(1.076923076923,)",select (avg( ?t1_injured) as ?aggregation_t1_injured_496 ) where { ?t1 a dbo:death . ?t1 dbo:death\#injured ?t1_injured .        },"(1.076923076923,)",easy,True,1,
258,battle_death,What are the death and injury situations caused by the ship with tonnage 't'?,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","(8, 0), (3, 0), (25, 0), (2, 0), (0, 0), (4, 5), (0, 0), (29, 0), (0, 0), (0, 0), (14, 0)",select ?t1_killed ?t1_injured where { ?t1 a dbo:death . ?t2 a dbo:ship . ?t1 dbo:death\#ref-caused_by_ship_id ?t2 .  ?t1 dbo:death\#killed ?t1_killed . ?t1 dbo:death\#injured ?t1_injured . ?t2 dbo:ship\#tonnage ?t2_tonnage . FILTER(?t2_tonnage = 't') .        },"(8, 0), (29, 0), (3, 0), (0, 0), (25, 0), (2, 0), (0, 0), (0, 0), (4, 5), (14, 0), (0, 0)",medium,True,1,
259,battle_death,What are the name and results of the battles when the bulgarian commander is not 'Boril',"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'","('Battle of Adrianople', 'Bulgarian victory'), ('Battle of Serres', 'Bulgarian victory'), ('Battle of Rusion', 'Bulgarian victory'), ('Battle of Rodosto', 'Bulgarian victory'), ('Battle of Messinopolis', 'Bulgarian victory'), ('Siege of Constantinople', 'Two Year Truce')",select ?t1_name ?t1_result where { ?t1 a dbo:battle . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#result ?t1_result . ?t1 dbo:battle\#bulgarian_commander ?t1_bulgarian_commander . FILTER(?t1_bulgarian_commander != 'Boril') .        },"('Battle of Adrianople', 'Bulgarian victory'), ('Battle of Serres', 'Bulgarian victory'), ('Battle of Rusion', 'Bulgarian victory'), ('Battle of Rodosto', 'Bulgarian victory'), ('Battle of Messinopolis', 'Bulgarian victory'), ('Siege of Constantinople', 'Two Year Truce')",medium,True,1,
260,battle_death,What are the different ids and names of the battles that lost any 'Brig' type shipes?,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","(4, 'Battle of Rodosto'), (5, 'Battle of Messinopolis'), (6, 'Battle of Boruy'), (7, 'Battle of Philippopolis'), (8, 'Siege of Constantinople')",select distinct ?t1_id ?t1_name where { ?t1 a dbo:battle . ?t2 a dbo:ship . ?t2 dbo:ship\#ref-lost_in_battle ?t1 .  ?t1 dbo:battle\#id ?t1_id . ?t1 dbo:battle\#name ?t1_name . ?t2 dbo:ship\#ship_type ?t2_ship_type . FILTER(?t2_ship_type = 'Brig') .        },"(8, 'Siege of Constantinople'), (7, 'Battle of Philippopolis'), (6, 'Battle of Boruy'), (5, 'Battle of Messinopolis'), (4, 'Battle of Rodosto')",medium,True,1,
261,battle_death,What are the ids and names of the battles that led to more than 10 people killed in total.,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10","(5, 'Battle of Messinopolis'), (8, 'Siege of Constantinople'), (6, 'Battle of Boruy')",select ?t1_id ?t1_name where { ?t1 a dbo:battle . ?t2 a dbo:ship . ?t2 dbo:ship\#ref-lost_in_battle ?t1 .  ?t1 dbo:battle\#id ?t1_id . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#id ?t1_id . ?t3 dbo:death\#killed ?t3_killed . ?t3 a dbo:death . ?t3 dbo:death\#ref-caused_by_ship_id ?t2 .  ?t1 dbo:battle\#id ?t1_id . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#id ?t1_id . ?t3 dbo:death\#killed ?t3_killed .        } group by ?t1_id ?t1_name   having(sum( ?t3_killed)  > 10),"(8, 'Siege of Constantinople'), (6, 'Battle of Boruy'), (5, 'Battle of Messinopolis')",hard,True,1,
262,battle_death,What is the ship id and name that caused most total injuries?,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","(3, 'Mary')",select ?t1_id ?t1_name where { ?t1 a dbo:ship . ?t2 a dbo:death . ?t2 dbo:death\#ref-caused_by_ship_id ?t1 .  ?t1 dbo:ship\#id ?t1_id . ?t1 dbo:ship\#name ?t1_name . ?t1 dbo:ship\#id ?t1_id .        } group by ?t1_id ?t1_name  order by desc (count(*)) limit 1,"(3, 'Mary')",extra,True,1,
263,battle_death,What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',"('Battle of Adrianople',)",select ?t1_name where { ?t1 a dbo:battle . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#bulgarian_commander ?t1_bulgarian_commander . ?t1 dbo:battle\#latin_commander ?t1_latin_commander . FILTER(?t1_bulgarian_commander = 'Kaloyan' && ?t1_latin_commander = 'Baldwin I') .        },"('Battle of Adrianople',)",medium,True,1,
264,battle_death,How many different results are there for the battles?,SELECT count(DISTINCT RESULT) FROM battle,"(3,)",select distinct (count(distinct ?t1_result) as ?aggregation_t1_result_149 ) where { ?t1 a dbo:battle . ?t1 dbo:battle\#result ?t1_result .        },"(3,)",easy,True,1,
265,battle_death,How many battles did not lose any ship with tonnage '225'?,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,"(7,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:battle . ?t1 dbo:battle\#id ?t1_id .     Filter not exists {{select ?t22_lost_in_battle where { ?t22 a dbo:ship . ?t22 dbo:ship\#lost_in_battle ?t22_lost_in_battle . ?t22 dbo:ship\#tonnage ?t22_tonnage . FILTER(?t22_tonnage = '225') .        }    } FILTER (?t1_id in (?t22_lost_in_battle))}  },"(7,)",extra,True,1,
266,battle_death,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","('Siege of Constantinople', '1235')",select distinct ?t1_name ?t1_date where { ?t1 a dbo:battle . ?t2 a dbo:ship . ?t2 dbo:ship\#ref-lost_in_battle ?t1 .  ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#date ?t1_date . ?t2 dbo:ship\#name ?t2_name . FILTER(?t2_name = 'Lettice') . FILTER (?t1_name in (?t3_name)) . FILTER (?t1_date in (?t3_date)) .  { ?t3 a dbo:battle . ?t4 a dbo:ship . ?t4 dbo:ship\#ref-lost_in_battle ?t3 .  ?t3 dbo:battle\#name ?t3_name . ?t3 dbo:battle\#date ?t3_date . ?t4 dbo:ship\#name ?t4_name .  FILTER(?t4_name = 'HMS Atalanta') .     }      },"('Siege of Constantinople', '1235')",extra,True,1,
267,battle_death,"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.","SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","('Battle of Adrianople', 'Bulgarian victory', 'Kaloyan'), ('Battle of Serres', 'Bulgarian victory', 'Kaloyan'), ('Battle of Rusion', 'Bulgarian victory', 'Kaloyan')",SELECT distinct?col1?col2?col3 WHERE { { select (?t1_name as ?col1) (?t1_result as ?col2) (?t1_bulgarian_commander as ?col3) where { ?t1 a dbo:battle . ?t1 dbo:battle\#name ?t1_name . ?t1 dbo:battle\#result ?t1_result . ?t1 dbo:battle\#bulgarian_commander ?t1_bulgarian_commander .   }}  MINUS {select (?t2_name as ?col1) (?t2_result as ?col2) (?t2_bulgarian_commander as ?col3) where { ?t2 a dbo:battle . ?t3 a dbo:ship . ?t3 dbo:ship\#ref-lost_in_battle ?t2 .  ?t2 dbo:battle\#name ?t2_name . ?t2 dbo:battle\#result ?t2_result . ?t2 dbo:battle\#bulgarian_commander ?t2_bulgarian_commander . ?t3 dbo:ship\#location ?t3_location . FILTER(?t3_location = 'English Channel') .        }     } },"('Battle of Adrianople', 'Bulgarian victory', 'Kaloyan'), ('Battle of Serres', 'Bulgarian victory', 'Kaloyan'), ('Battle of Rusion', 'Bulgarian victory', 'Kaloyan')",extra,True,1,
268,battle_death,What are the notes of the death events which has substring 'East'?,SELECT note FROM death WHERE note LIKE '%East%',"('East Champaran, Bihar',)","select ?t1_note where { ?t1 a dbo:death . ?t1 dbo:death\#note ?t1_note . ?t1 dbo:death\#note ?t1_note . FILTER(contains (?t1_note, 'East')) .        }","('East Champaran, Bihar',)",medium,True,1,
269,student_transcripts_tracking,what are all the addresses including line 1 and line 2?,"SELECT line_1 ,  line_2 FROM addresses","('2294 Grant Square Apt. 235', 'Apt. 370'), ('3999 Aufderhar Ways Suite 593', 'Apt. 388'), ('67942 Carlotta Ferry Apt. 686', 'Apt. 583'), ('0144 Lamar Plaza Apt. 346', 'Suite 703'), ('858 Peggie Bypass Suite 212', 'Apt. 335'), ('16998 Mraz Lodge', 'Apt. 689'), ('193 Marlin Brook', 'Apt. 406'), ('202 Hessel Views Apt. 468', 'Apt. 305'), ('0643 Muller Vista', 'Suite 383'), ('7081 Eda Center', 'Suite 830'), ('9283 Schulist Falls Apt. 037', 'Suite 239'), ('979 Haag Shores Suite 656', 'Apt. 468'), ('492 Wilkinson Route', 'Suite 865'), ('186 Evan Motorway Apt. 409', 'Suite 079'), ('74046 Metz Walk Apt. 113', 'Suite 674')",select ?t1_line_1 ?t1_line_2 where { ?t1 a dbo:addresses . ?t1 dbo:addresses\#line_1 ?t1_line_1 . ?t1 dbo:addresses\#line_2 ?t1_line_2 .        },"('3999 Aufderhar Ways Suite 593', 'Apt. 388'), ('67942 Carlotta Ferry Apt. 686', 'Apt. 583'), ('0144 Lamar Plaza Apt. 346', 'Suite 703'), ('858 Peggie Bypass Suite 212', 'Apt. 335'), ('16998 Mraz Lodge', 'Apt. 689'), ('193 Marlin Brook', 'Apt. 406'), ('202 Hessel Views Apt. 468', 'Apt. 305'), ('0643 Muller Vista', 'Suite 383'), ('7081 Eda Center', 'Suite 830'), ('9283 Schulist Falls Apt. 037', 'Suite 239'), ('979 Haag Shores Suite 656', 'Apt. 468'), ('492 Wilkinson Route', 'Suite 865'), ('186 Evan Motorway Apt. 409', 'Suite 079'), ('74046 Metz Walk Apt. 113', 'Suite 674'), ('2294 Grant Square Apt. 235', 'Apt. 370')",medium,True,1,
270,student_transcripts_tracking,How many courses in total are listed?,SELECT count(*) FROM Courses,"(15,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:courses .        },"(15,)",easy,True,1,
271,student_transcripts_tracking,How is the math course described?,SELECT course_description FROM Courses WHERE course_name  =  'math',"('q',)",select ?t1_course_description where { ?t1 a dbo:courses . ?t1 dbo:courses\#course_description ?t1_course_description . ?t1 dbo:courses\#course_name ?t1_course_name . FILTER(?t1_course_name = 'math') .        },"('q',)",easy,True,1,
272,student_transcripts_tracking,What is the zip code of the address in the city Port Chelsea?,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',"('148',)",select ?t1_zip_postcode where { ?t1 a dbo:addresses . ?t1 dbo:addresses\#zip_postcode ?t1_zip_postcode . ?t1 dbo:addresses\#city ?t1_city . FILTER(?t1_city = 'Port Chelsea') .        },"('148',)",easy,True,1,
273,student_transcripts_tracking,Which department offers the most number of degrees? List department name and id.,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name ,  T1.department_id ORDER BY count(*) DESC LIMIT 1","('statistics', 8)",select ?t1_department_name ?t2_department_id where { ?t1 a dbo:departments . ?t2 a dbo:degree_programs . ?t2 dbo:degree_programs\#ref-department_id ?t1 .  ?t1 dbo:departments\#department_name ?t1_department_name . ?t2 dbo:degree_programs\#department_id ?t2_department_id .        } group by ?t1_department_name ?t2_department_id  order by desc (count(*)) limit 1,"('statistics', 8)",extra,True,1,
274,student_transcripts_tracking,How many departments offer any degree?,SELECT count(DISTINCT department_id) FROM Degree_Programs,"(10,)",select distinct (count(distinct ?t1_department_id) as ?aggregation_t1_department_id_272 ) where { ?t1 a dbo:degree_programs . ?t1 dbo:degree_programs\#department_id ?t1_department_id .        },"(10,)",easy,True,1,
275,student_transcripts_tracking,How many different degree names are offered?,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,"(3,)",select distinct (count(distinct ?t1_degree_summary_name) as ?aggregation_t1_degree_summary_name_94 ) where { ?t1 a dbo:degree_programs . ?t1 dbo:degree_programs\#degree_summary_name ?t1_degree_summary_name .        },"(3,)",easy,True,1,
276,student_transcripts_tracking,How many degrees does the engineering department offer?,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',"(0,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:degree_programs . ?t2 a dbo:departments . ?t1 dbo:degree_programs\#ref-department_id ?t2 .  ?t2 dbo:departments\#department_name ?t2_department_name . FILTER(?t2_department_name = 'engineer') .        },"(0,)",medium,True,1,
277,student_transcripts_tracking,What are the names and descriptions of all the sections?,"SELECT section_name ,  section_description FROM Sections","('a', 'non'), ('b', 'voluptatem'), ('c', 'qui'), ('d', 'voluptas'), ('e', 'ex'), ('f', 'doloremque'), ('g', 'provident'), ('h', 'et'), ('j', 'quis'), ('k', 'nesciunt'), ('l', 'ad'), ('o', 'et'), ('p', 'facilis'), ('u', 'reprehenderit'), ('y', 'qui')",select ?t1_section_name ?t1_section_description where { ?t1 a dbo:sections . ?t1 dbo:sections\#section_name ?t1_section_name . ?t1 dbo:sections\#section_description ?t1_section_description .        },"('a', 'non'), ('b', 'voluptatem'), ('c', 'qui'), ('d', 'voluptas'), ('e', 'ex'), ('f', 'doloremque'), ('g', 'provident'), ('h', 'et'), ('j', 'quis'), ('k', 'nesciunt'), ('l', 'ad'), ('o', 'et'), ('p', 'facilis'), ('u', 'reprehenderit'), ('y', 'qui')",medium,True,1,
278,student_transcripts_tracking,What are the names and id of courses having at most 2 sections?,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","('nlp', 8), ('ml', 10), ('cal', 7), ('dl', 9), ('ds', 1), ('fr', 5), ('en', 4), ('math', 2), ('la', 6), ('pl', 14), ('db', 12)",select ?t1_course_name ?t1_course_id where { ?t1 a dbo:courses . ?t2 a dbo:sections . ?t2 dbo:sections\#ref-course_id ?t1 .  ?t1 dbo:courses\#course_name ?t1_course_name . ?t1 dbo:courses\#course_id ?t1_course_id . ?t1 dbo:courses\#course_id ?t1_course_id .        } group by ?t1_course_name ?t1_course_id   having(count( *)  <= 2),"('dl', 9), ('math', 2), ('nlp', 8), ('ds', 1), ('fr', 5), ('cal', 7), ('db', 12), ('pl', 14), ('en', 4), ('la', 6), ('ml', 10)",medium,True,1,
279,student_transcripts_tracking,List the section_name in reversed lexicographical order.,SELECT section_name FROM Sections ORDER BY section_name DESC,"('y',), ('u',), ('p',), ('o',), ('l',), ('k',), ('j',), ('h',), ('g',), ('f',), ('e',), ('d',), ('c',), ('b',), ('a',)",select ?t1_section_name where { ?t1 a dbo:sections . ?t1 dbo:sections\#section_name ?t1_section_name . ?t1 dbo:sections\#section_name ?t1_section_name .        }  order by desc (?t1_section_name),"('y',), ('u',), ('p',), ('o',), ('l',), ('k',), ('j',), ('h',), ('g',), ('f',), ('e',), ('d',), ('c',), ('b',), ('a',)",easy,True,1,
280,student_transcripts_tracking,What is the semester which most student registered in? Show both the name and the id.,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","('summer 2010', 2)",select ?t1_semester_name ?t1_semester_id where { ?t1 a dbo:semesters . ?t3 a dbo:student_enrolment . ?t3 dbo:student_enrolment\#ref-semester_id ?t1 .  ?t1 dbo:semesters\#semester_name ?t1_semester_name . ?t1 dbo:semesters\#semester_id ?t1_semester_id . ?t1 dbo:semesters\#semester_id ?t1_semester_id .        } group by ?t1_semester_name ?t1_semester_id  order by desc (count(*)) limit 1,"('summer 2010', 2)",extra,True,1,
281,student_transcripts_tracking,What is the description of the department whose name has the substring the computer?,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',"('error',)","select ?t1_department_description where { ?t1 a dbo:departments . ?t1 dbo:departments\#department_description ?t1_department_description . ?t1 dbo:departments\#department_name ?t1_department_name . FILTER(contains (?t1_department_name, 'computer')) .        }","('error',)",medium,True,1,
282,student_transcripts_tracking,"Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.","SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","('Reva', 'Golda', 'Osinski', 9), ('Jarvis', 'Aaliyah', 'Carroll', 4), ('Jordy', 'Osborne', 'Rempel', 14)",select ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id where { ?t1 a dbo:students . ?t2 a dbo:student_enrolment . ?t2 dbo:student_enrolment\#ref-student_id ?t1 .  ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#student_id ?t1_student_id . ?t1 dbo:students\#student_id ?t1_student_id . ?t3 a dbo:degree_programs . ?t2 dbo:student_enrolment\#ref-degree_program_id ?t3 .  ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#student_id ?t1_student_id . ?t1 dbo:students\#student_id ?t1_student_id .        } group by ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id   having(count( *)  = 2),"('Jordy', 'Osborne', 'Rempel', 14), ('Reva', 'Golda', 'Osinski', 9), ('Jarvis', 'Aaliyah', 'Carroll', 4)",medium,True,1,
283,student_transcripts_tracking,"Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.","SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","('Frida', 'Aisha', 'Huel'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Reva', 'Golda', 'Osinski'), ('Stanford', 'Mona', 'Rogahn')",select distinct ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a dbo:students . ?t2 a dbo:student_enrolment . ?t2 dbo:student_enrolment\#ref-student_id ?t1 .  ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#student_id ?t1_student_id . ?t3 dbo:degree_programs\#degree_summary_name ?t3_degree_summary_name . ?t3 a dbo:degree_programs . ?t2 dbo:student_enrolment\#ref-degree_program_id ?t3 .  ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#student_id ?t1_student_id . ?t3 dbo:degree_programs\#degree_summary_name ?t3_degree_summary_name . FILTER(?t3_degree_summary_name = 'Bachelor') .        },"('Reva', 'Golda', 'Osinski'), ('Jarvis', 'Aaliyah', 'Carroll'), ('Milton', 'Vaughn', 'Christiansen'), ('Stanford', 'Mona', 'Rogahn'), ('Frida', 'Aisha', 'Huel')",hard,True,1,
284,student_transcripts_tracking,Find the kind of program which most number of students are enrolled in?,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"('Bachelor',)",select ?t1_degree_summary_name where { ?t1 a dbo:degree_programs . ?t3 a dbo:student_enrolment . ?t3 dbo:student_enrolment\#ref-degree_program_id ?t1 .  ?t1 dbo:degree_programs\#degree_summary_name ?t1_degree_summary_name . ?t1 dbo:degree_programs\#degree_program_id ?t1_degree_program_id .        } group by ?t1_degree_summary_name  order by desc (count(*)) limit 1,"('Bachelor',)",extra,True,1,
285,student_transcripts_tracking,Find the program which most number of students are enrolled in. List both the id and the summary.,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","(9, 'Bachelor')",select ?t1_degree_program_id ?t1_degree_summary_name where { ?t1 a dbo:degree_programs . ?t3 a dbo:student_enrolment . ?t3 dbo:student_enrolment\#ref-degree_program_id ?t1 .  ?t1 dbo:degree_programs\#degree_program_id ?t1_degree_program_id . ?t1 dbo:degree_programs\#degree_summary_name ?t1_degree_summary_name . ?t1 dbo:degree_programs\#degree_program_id ?t1_degree_program_id .        } group by ?t1_degree_program_id ?t1_degree_summary_name  order by desc (count(*)) limit 1,"(9, 'Bachelor')",extra,True,1,
286,student_transcripts_tracking,Which semesters do not have any student enrolled? List the semester name.,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),"('fall 2010',), ('spring 2013',), ('spring 2014',), ('spring 2016',), ('spring 2017',), ('winter 2018',)",select ?t1_semester_name where { ?t1 a dbo:semesters . ?t1 dbo:semesters\#semester_name ?t1_semester_name . ?t1 dbo:semesters\#semester_id ?t1_semester_id .     Filter not exists {{select ?t22_semester_id where { ?t22 a dbo:student_enrolment . ?t22 dbo:student_enrolment\#semester_id ?t22_semester_id .        }    } FILTER (?t1_semester_id in (?t22_semester_id))}  },"('fall 2010',), ('spring 2013',), ('spring 2014',), ('spring 2016',), ('spring 2017',), ('winter 2018',)",hard,True,1,
287,student_transcripts_tracking,What are all the course names of the courses which ever have students enrolled in?,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,"('ml',), ('en',), ('rs',), ('math',), ('la',), ('nlp',), ('os',), ('db',), ('ai',), ('pl',)",select distinct ?t1_course_name where { ?t1 a dbo:courses . ?t2 a dbo:student_enrolment_courses . ?t2 dbo:student_enrolment_courses\#ref-course_id ?t1 .  ?t1 dbo:courses\#course_name ?t1_course_name . ?t1 dbo:courses\#course_id ?t1_course_id .        },"('math',), ('nlp',), ('la',), ('pl',), ('ai',), ('ml',), ('os',), ('db',), ('en',), ('rs',)",easy,True,1,
288,student_transcripts_tracking,What's the name of the course with most number of enrollments?,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,"('ml',)",select ?t1_course_name where { ?t1 a dbo:courses . ?t2 a dbo:student_enrolment_courses . ?t2 dbo:student_enrolment_courses\#ref-course_id ?t1 .  ?t1 dbo:courses\#course_name ?t1_course_name . ?t1 dbo:courses\#course_id ?t1_course_id .        } group by ?t1_course_name  order by desc (count(*)) limit 1,"('la',)",extra,True,1,false_negative
289,student_transcripts_tracking,Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,"('Weimann',), ('Gleichner',)",SELECT distinct?col1 WHERE { { select (?t1_last_name as ?col1) where { ?t1 a dbo:students . ?t2 a dbo:addresses . ?t1 dbo:students\#ref-permanent_address_id ?t2 .  ?t1 dbo:students\#last_name ?t1_last_name . ?t2 dbo:addresses\#state_province_county ?t2_state_province_county . FILTER(?t2_state_province_county = 'NorthCarolina') .   }}  MINUS {select distinct (?t3_last_name as ?col1) where { ?t3 a dbo:students . ?t4 a dbo:student_enrolment . ?t4 dbo:student_enrolment\#ref-student_id ?t3 .  ?t3 dbo:students\#last_name ?t3_last_name . ?t3 dbo:students\#student_id ?t3_student_id .        }     } },"('Jaskolski',)",extra,False,0,
290,student_transcripts_tracking,Show the date and id of the transcript with at least 2 course results.,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T2.transcript_date, T1.transcript_id HAVING count(*)  >=  2","('1975-05-06 12:04:47', 8), ('2010-12-13 10:55:15', 6), ('2013-06-30 13:01:40', 5), ('1998-11-22 12:18:29', 15)",select ?t1_transcript_date ?t2_transcript_id where { ?t1 a dbo:transcripts . ?t2 a dbo:transcript_contents . ?t2 dbo:transcript_contents\#ref-transcript_id ?t1 .  ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date . ?t2 dbo:transcript_contents\#transcript_id ?t2_transcript_id .        } group by ?t1_transcript_date ?t2_transcript_id   having(count( *)  >= 2),,extra,True,1,false_negative
291,student_transcripts_tracking,What is the phone number of the man with the first name Timmothy and the last name Ward?,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',"('(096)889-8954x524',)",select ?t1_cell_mobile_number where { ?t1 a dbo:students . ?t1 dbo:students\#cell_mobile_number ?t1_cell_mobile_number . ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#last_name ?t1_last_name . FILTER(?t1_first_name = 'Timmothy' && ?t1_last_name = 'Ward') .        },"('(096)889-8954x524',)",medium,True,1,
292,student_transcripts_tracking,"Who is the first student to register? List the first name, middle name and last name.","SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","('Timmothy', 'Anna', 'Ward')",select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a dbo:students . ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#date_first_registered ?t1_date_first_registered .        }   order by asc (?t1_date_first_registered) limit 1,"('Timmothy', 'Anna', 'Ward')",medium,True,1,
293,student_transcripts_tracking,"Who is the earliest graduate of the school? List the first name, middle name and last name.","SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1","('Timmothy', 'Anna', 'Ward')",select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a dbo:students . ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#middle_name ?t1_middle_name . ?t1 dbo:students\#last_name ?t1_last_name . ?t1 dbo:students\#date_left ?t1_date_left .        }   order by asc (?t1_date_left) limit 1,"('Timmothy', 'Anna', 'Ward')",medium,True,1,
294,student_transcripts_tracking,Whose permanent address is different from his or her current address? List his or her first name.,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,,"select ?t1_first_name where { ?t1 a dbo:students . ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#current_address_id ?t1_current_address_id . FILTER(?t1_current_address_id != [0, 34, False]) .        }",,easy,,-2,HTTP Error 400: 
295,student_transcripts_tracking,Which address holds the most number of students currently? List the address id and all lines.,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id,  T1.line_1 ,  T1.line_2 ORDER BY count(*) DESC LIMIT 1","(9, '0643 Muller Vista', 'Suite 383')",select ?t1_address_id ?t1_line_1 ?t1_line_2 where { ?t1 a dbo:addresses . ?t2 a dbo:students . ?t2 dbo:students\#ref-permanent_address_id ?t1 .  ?t1 dbo:addresses\#address_id ?t1_address_id . ?t1 dbo:addresses\#line_1 ?t1_line_1 . ?t1 dbo:addresses\#line_2 ?t1_line_2 . ?t1 dbo:addresses\#address_id ?t1_address_id .        } group by ?t1_address_id ?t1_line_1 ?t1_line_2  order by desc (count(*)) limit 1,"(5, '858 Peggie Bypass Suite 212', 'Apt. 335')",extra,True,1,false_negative
296,student_transcripts_tracking,"On average, when were the transcripts printed?",SELECT avg(extract(year from transcript_date)) FROM Transcripts,"(1989.933333333333,)",select (avg( ?t1_transcript_date) as ?aggregation_t1_transcript_date_458 ) where { ?t1 a dbo:transcripts . ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date .        },"(None,)",easy,False,0,
297,student_transcripts_tracking,When is the first transcript released? List the date and details.,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","('1975-05-06 12:04:47', 'NA')",select ?t1_transcript_date ?t1_other_details where { ?t1 a dbo:transcripts . ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date . ?t1 dbo:transcripts\#other_details ?t1_other_details . ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date .        }   order by asc (?t1_transcript_date) limit 1,"('1975-05-06 12:04:47', 'NA')",medium,True,1,
298,student_transcripts_tracking,How many transcripts are released?,SELECT count(*) FROM Transcripts,"(15,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:transcripts .        },"(15,)",easy,True,1,
299,student_transcripts_tracking,What is the last transcript release date?,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,"('2013-06-30 13:01:40',)",select ?t1_transcript_date where { ?t1 a dbo:transcripts . ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date . ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date .        }   order by desc (?t1_transcript_date) limit 1,"('2013-06-30 13:01:40',)",medium,True,1,
300,student_transcripts_tracking,How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","(4, 0)",select (count( *) as ?aggregation_all) ?t1_student_course_id where { ?t1 a dbo:transcript_contents . ?t1 dbo:transcript_contents\#student_course_id ?t1_student_course_id .        } group by ?t1_student_course_id  order by desc (count(*)) limit 1,"(4, 0)",hard,True,1,
301,student_transcripts_tracking,"Show the date of the transcript which shows the least number of results, also list the id.","SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T2.transcript_date, T1.transcript_id ORDER BY count(*) ASC LIMIT 1","('1975-10-28 15:16:51', 2)",select ?t1_transcript_date ?t2_transcript_id where { ?t1 a dbo:transcripts . ?t2 a dbo:transcript_contents . ?t2 dbo:transcript_contents\#ref-transcript_id ?t1 .  ?t1 dbo:transcripts\#transcript_date ?t1_transcript_date . ?t2 dbo:transcript_contents\#transcript_id ?t2_transcript_id .        } group by ?t1_transcript_date ?t2_transcript_id  order by asc (count(*)) limit 1,"(None, None)",extra,True,1,false_negative
302,student_transcripts_tracking,Find the semester when both Master students and Bachelor students got enrolled in.,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"(13,)",select distinct ?t1_semester_id where { ?t1 a dbo:student_enrolment . ?t2 a dbo:degree_programs . ?t1 dbo:student_enrolment\#ref-degree_program_id ?t2 .  ?t1 dbo:student_enrolment\#semester_id ?t1_semester_id . ?t2 dbo:degree_programs\#degree_summary_name ?t2_degree_summary_name . FILTER(?t2_degree_summary_name = 'Master') . FILTER (?t1_semester_id in (?t3_semester_id)) .  {select distinct ?t3_semester_id where { ?t3 a dbo:student_enrolment . ?t4 a dbo:degree_programs . ?t3 dbo:student_enrolment\#ref-degree_program_id ?t4 .  ?t3 dbo:student_enrolment\#semester_id ?t3_semester_id . ?t4 dbo:degree_programs\#degree_summary_name ?t4_degree_summary_name . FILTER(?t4_degree_summary_name = 'Bachelor') .        }    }      },"(13,)",extra,True,1,
303,student_transcripts_tracking,How many different addresses do the students currently live?,SELECT count(DISTINCT current_address_id) FROM Students,"(9,)",select distinct (count(distinct ?t1_current_address_id) as ?aggregation_t1_current_address_id_384 ) where { ?t1 a dbo:students . ?t1 dbo:students\#current_address_id ?t1_current_address_id .        },"(9,)",easy,True,1,
304,student_transcripts_tracking,List all the student details in reversed lexicographical order.,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"('voluptatem',), ('rerum',), ('quia',), ('qui',), ('omnis',), ('omnis',), ('non',), ('nesciunt',), ('laborum',), ('facilis',), ('et',), ('dolorum',), ('autem',), ('atque',), ('assumenda',)",select ?t1_other_student_details where { ?t1 a dbo:students . ?t1 dbo:students\#other_student_details ?t1_other_student_details . ?t1 dbo:students\#other_student_details ?t1_other_student_details .        }  order by desc (?t1_other_student_details),"('voluptatem',), ('rerum',), ('quia',), ('qui',), ('omnis',), ('omnis',), ('non',), ('nesciunt',), ('laborum',), ('facilis',), ('et',), ('dolorum',), ('autem',), ('atque',), ('assumenda',)",easy,True,1,
305,student_transcripts_tracking,Describe the section h.,SELECT section_description FROM Sections WHERE section_name  =  'h',"('et',)",select ?t1_section_description where { ?t1 a dbo:sections . ?t1 dbo:sections\#section_description ?t1_section_description . ?t1 dbo:sections\#section_name ?t1_section_name . FILTER(?t1_section_name = 'h') .        },"('et',)",easy,True,1,
306,student_transcripts_tracking,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.,SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582',"('Delaney',), ('Hobart',), ('Jarvis',), ('Warren',)",SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a dbo:students . ?t2 a dbo:addresses . ?t1 dbo:students\#ref-permanent_address_id ?t2 .  ?t1 dbo:students\#first_name ?t1_first_name . ?t2 dbo:addresses\#country ?t2_country . FILTER(?t2_country = 'Haiti') .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a dbo:students . ?t1 dbo:students\#first_name ?t1_first_name . ?t1 dbo:students\#cell_mobile_number ?t1_cell_mobile_number . FILTER(?t1_cell_mobile_number = '09700166582') .        }      } },"('Hobart',), ('Warren',), ('Delaney',), ('Jarvis',)",extra,True,1,
307,tvshow,List the title of all cartoons in alphabetical order.,SELECT Title FROM Cartoon ORDER BY title,"('Dawn of the Dead Man!',), ('Day of the Dark Knight!',), ('Deep Cover for Batman!',), ('Enter the Outsiders!',), ('Evil Under the Sea!',), ('Fall of the Blue Beetle!',), ('Invasion of the Secret Santas!',), ('Journey to the Center of the Bat!',), ('Return of the Fearsome Fangs!',), ('Terror on Dinosaur Island!',), ('The Eyes of Despero!',), ('The Rise of the Blue Beetle!',)",select ?t1_title where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#title ?t1_title . ?t1 dbo:cartoon\#title ?t1_title .        }  order by asc (?t1_title),"('Dawn of the Dead Man!',), ('Day of the Dark Knight!',), ('Deep Cover for Batman!',), ('Enter the Outsiders!',), ('Evil Under the Sea!',), ('Fall of the Blue Beetle!',), ('Invasion of the Secret Santas!',), ('Journey to the Center of the Bat!',), ('Return of the Fearsome Fangs!',), ('Terror on Dinosaur Island!',), ('The Eyes of Despero!',), ('The Rise of the Blue Beetle!',)",easy,True,1,
308,tvshow,List all cartoon directed by 'Ben Jones'.,SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';,"('The Rise of the Blue Beetle!',), ('Day of the Dark Knight!',), ('Dawn of the Dead Man!',), ('The Eyes of Despero!',)",select ?t1_title where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#title ?t1_title . ?t1 dbo:cartoon\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones') .        },"('The Rise of the Blue Beetle!',), ('Day of the Dark Knight!',), ('Dawn of the Dead Man!',), ('The Eyes of Despero!',)",easy,True,1,
309,tvshow,How many cartoons were written by 'Joseph Kuhr'?,SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';,"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#written_by ?t1_written_by . FILTER(?t1_written_by = 'Joseph Kuhr') .        },"(2,)",easy,True,1,
310,tvshow,list all cartoon titles and their directors ordered by their air date,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","('Invasion of the Secret Santas!', 'Brandon Vietti'), ('Evil Under the Sea!', 'Michael Chang'), ('Return of the Fearsome Fangs!', 'Brandon Vietti'), ('Deep Cover for Batman!', 'Michael Chang'), ('The Eyes of Despero!', 'Ben Jones'), ('Dawn of the Dead Man!', 'Ben Jones'), ('Day of the Dark Knight!', 'Ben Jones'), ('Fall of the Blue Beetle!', 'Brandon Vietti'), ('Journey to the Center of the Bat!', 'Michael Chang'), ('Enter the Outsiders!', 'Michael Chang'), ('The Rise of the Blue Beetle!', 'Ben Jones'), ('Terror on Dinosaur Island!', 'Brandon Vietti')",select ?t1_title ?t1_directed_by where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#title ?t1_title . ?t1 dbo:cartoon\#directed_by ?t1_directed_by . ?t1 dbo:cartoon\#original_air_date ?t1_original_air_date .        }  order by asc (?t1_original_air_date),"('Invasion of the Secret Santas!', 'Brandon Vietti'), ('Evil Under the Sea!', 'Michael Chang'), ('Return of the Fearsome Fangs!', 'Brandon Vietti'), ('Deep Cover for Batman!', 'Michael Chang'), ('The Eyes of Despero!', 'Ben Jones'), ('Dawn of the Dead Man!', 'Ben Jones'), ('Day of the Dark Knight!', 'Ben Jones'), ('Fall of the Blue Beetle!', 'Brandon Vietti'), ('Journey to the Center of the Bat!', 'Michael Chang'), ('Enter the Outsiders!', 'Michael Chang'), ('The Rise of the Blue Beetle!', 'Ben Jones'), ('Terror on Dinosaur Island!', 'Brandon Vietti')",medium,True,1,
311,tvshow,List the title of all cartoon directed by 'Ben Jones' or 'Brandon Vietti'.,SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';,"('The Rise of the Blue Beetle!',), ('Terror on Dinosaur Island!',), ('Day of the Dark Knight!',), ('Invasion of the Secret Santas!',), ('Dawn of the Dead Man!',), ('Fall of the Blue Beetle!',), ('The Eyes of Despero!',), ('Return of the Fearsome Fangs!',)",select ?t1_title where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#title ?t1_title . ?t1 dbo:cartoon\#directed_by ?t1_directed_by . ?t1 dbo:cartoon\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones' || ?t1_directed_by = 'Brandon Vietti') .        },"('The Rise of the Blue Beetle!',), ('Day of the Dark Knight!',), ('Dawn of the Dead Man!',), ('The Eyes of Despero!',), ('Terror on Dinosaur Island!',), ('Invasion of the Secret Santas!',), ('Fall of the Blue Beetle!',), ('Return of the Fearsome Fangs!',)",medium,True,1,
312,tvshow,Which country has the most of TV Channels? List the country and number of TV Channels it has.,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","('Italy', 12)",select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#country ?t1_country .        } group by ?t1_country  order by desc (count(*)) limit 1,"('Italy', 12)",hard,True,1,
313,tvshow,List the number of different series names and contents in the TV Channel table.,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;","(15, 1)",select distinct (count(distinct ?t1_series_name) as ?aggregation_t1_series_name_22 ) (count(distinct ?t1_content) as ?aggregation_t1_content_266 ) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#series_name ?t1_series_name . ?t1 dbo:tv_channel\#content ?t1_content .        },"(15, 1)",medium,True,1,
314,tvshow,What is the content of TV Channel with serial name 'Sky Radio'?,SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';,"('music',)",select ?t1_content where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#content ?t1_content . ?t1 dbo:tv_channel\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        },"('music',)",easy,True,1,
315,tvshow,What is the Package Option of TV Channel with serial name 'Sky Radio'?,SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';,"('Sky Famiglia',)",select ?t1_package_option where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#package_option ?t1_package_option . ?t1 dbo:tv_channel\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        },"('Sky Famiglia',)",easy,True,1,
316,tvshow,How many TV Channel using language English?,SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English';,"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#language ?t1_language . FILTER(?t1_language = 'English') .        },"(3,)",easy,True,1,
317,tvshow,List the language used least number of TV Channel. List language and number of TV Channel.,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","('English', 3)",select ?t1_language (count( *) as ?aggregation_all) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#language ?t1_language .        } group by ?t1_language  order by asc (count(*)) limit 1,"('English', 3)",hard,True,1,
318,tvshow,What is the TV Channel that shows the cartoon 'The Rise of the Blue Beetle!'? List the TV Channel's series name.,SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!';,"('Sky Radio',)",select ?t1_series_name where { ?t1 a dbo:tv_channel . ?t2 a dbo:cartoon . ?t2 dbo:cartoon\#ref-channel ?t1 .  ?t1 dbo:tv_channel\#series_name ?t1_series_name . ?t2 dbo:cartoon\#title ?t2_title . FILTER(?t2_title = 'The Rise of the Blue Beetle!') .        },"('Sky Radio',)",medium,True,1,
319,tvshow,List the title of all  Cartoons showed on TV Channel with series name 'Sky Radio'.,SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';,"('The Rise of the Blue Beetle!',), ('Return of the Fearsome Fangs!',)",select ?t1_title where { ?t1 a dbo:cartoon . ?t2 a dbo:tv_channel . ?t1 dbo:cartoon\#ref-channel ?t2 .  ?t1 dbo:cartoon\#title ?t1_title . ?t2 dbo:tv_channel\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        },"('The Rise of the Blue Beetle!',), ('Return of the Fearsome Fangs!',)",medium,True,1,
320,tvshow,List the Episode of all TV series sorted by rating.,SELECT Episode FROM TV_series ORDER BY rating,"('The Hanged Man',), ('Double Down',), ('Home By Another Way',), ('Keepers',), ('Blowback',), ('Emily',), ('The Legend of Dylan McCleen',), ('Winterland',), ('The Year of the Rabbit',), ('Game Three',), ('Friendly Skies',), ('A Love of a Lifetime',)",select ?t1_episode where { ?t1 a dbo:tv_series . ?t1 dbo:tv_series\#episode ?t1_episode . ?t1 dbo:tv_series\#rating ?t1_rating .        }  order by asc (?t1_rating),"('The Hanged Man',), ('Double Down',), ('Home By Another Way',), ('Blowback',), ('Keepers',), ('Emily',), ('The Legend of Dylan McCleen',), ('Winterland',), ('The Year of the Rabbit',), ('Game Three',), ('Friendly Skies',), ('A Love of a Lifetime',)",easy,True,1,
321,tvshow,List top 3 highest Rating  TV series. List the TV series's Episode and Rating.,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","('A Love of a Lifetime', '5.8'), ('Friendly Skies', '5.3'), ('Game Three', '4.4')",select ?t1_episode ?t1_rating where { ?t1 a dbo:tv_series . ?t1 dbo:tv_series\#episode ?t1_episode . ?t1 dbo:tv_series\#rating ?t1_rating . ?t1 dbo:tv_series\#rating ?t1_rating .        }   order by desc (?t1_rating) limit 1,"('A Love of a Lifetime', '5.8')",medium,False,0,
322,tvshow,What is minimum and maximum share of TV series?,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","(9.0, 5.0)",select (max( ?t1_share) as ?aggregation_t1_share_96 ) (min( ?t1_share) as ?aggregation_t1_share_418 ) where { ?t1 a dbo:tv_series . ?t1 dbo:tv_series\#share ?t1_share . ?t1 dbo:tv_series\#share ?t1_share .        },"(9.0, 5.0)",medium,True,1,
323,tvshow,What is the air date of TV series with Episode 'A Love of a Lifetime'?,SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';,"('September 24, 2007',)",select ?t1_air_date where { ?t1 a dbo:tv_series . ?t1 dbo:tv_series\#air_date ?t1_air_date . ?t1 dbo:tv_series\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        },"('September 24, 2007',)",easy,True,1,
324,tvshow,What is Weekly Rank of TV series with Episode 'A Love of a Lifetime'?,SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';,"(43.0,)",select ?t1_weekly_rank where { ?t1 a dbo:tv_series . ?t1 dbo:tv_series\#weekly_rank ?t1_weekly_rank . ?t1 dbo:tv_series\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        },"(43.0,)",easy,True,1,
325,tvshow,What is the TV Channel of TV series with Episode 'A Love of a Lifetime'? List the TV Channel's series name.,SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime';,"('Sky Radio',)",select ?t1_series_name where { ?t1 a dbo:tv_channel . ?t2 a dbo:tv_series . ?t2 dbo:tv_series\#ref-channel ?t1 .  ?t1 dbo:tv_channel\#series_name ?t1_series_name . ?t2 dbo:tv_series\#episode ?t2_episode . FILTER(?t2_episode = 'A Love of a Lifetime') .        },"('Sky Radio',)",medium,True,1,
326,tvshow,List the Episode of all  TV series showed on TV Channel with series name 'Sky Radio'.,SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';,"('A Love of a Lifetime',), ('Keepers',)",select ?t1_episode where { ?t1 a dbo:tv_series . ?t2 a dbo:tv_channel . ?t1 dbo:tv_series\#ref-channel ?t2 .  ?t1 dbo:tv_series\#episode ?t1_episode . ?t2 dbo:tv_channel\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        },"('A Love of a Lifetime',), ('Keepers',)",medium,True,1,
327,tvshow,Find the number of cartoons directed by each of the listed directors.,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by","(4, 'Brandon Vietti'), (4, 'Michael Chang'), (4, 'Ben Jones')",select (count( *) as ?aggregation_all) ?t1_directed_by where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#directed_by ?t1_directed_by .        } group by ?t1_directed_by,"(4, 'Ben Jones'), (4, 'Brandon Vietti'), (4, 'Michael Chang')",medium,True,1,
328,tvshow,Find the production code and channel of the most recently aired cartoon.,"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","(105.0, 705.0)",select ?t1_production_code ?t1_channel where { ?t1 a dbo:cartoon . ?t1 dbo:cartoon\#production_code ?t1_production_code . ?t1 dbo:cartoon\#channel ?t1_channel . ?t1 dbo:cartoon\#original_air_date ?t1_original_air_date .        }   order by asc (?t1_original_air_date) limit 1,"(105.0, 705.0)",medium,True,1,
329,tvshow,Find the package choice and series name of the TV channel that has high definition TV.,"SELECT package_option ,  series_name FROM TV_Channel WHERE high_definition_TV  =  'yes'","('Sky Famiglia + Sky HD', 'MTV Live HD')",select ?t1_package_option ?t1_series_name where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#package_option ?t1_package_option . ?t1 dbo:tv_channel\#series_name ?t1_series_name . ?t1 dbo:tv_channel\#high_definition_tv ?t1_high_definition_tv . FILTER(?t1_high_definition_tv = 'yes') .        },"('Sky Famiglia + Sky HD', 'MTV Live HD')",medium,True,1,
330,tvshow,which countries' tv channels are playing some cartoon written by Todd Casey?,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',"('Italy',), ('United Kingdom',)",select ?t1_country where { ?t1 a dbo:tv_channel . ?t2 a dbo:cartoon . ?t2 dbo:cartoon\#ref-channel ?t1 .  ?t1 dbo:tv_channel\#country ?t1_country . ?t2 dbo:cartoon\#written_by ?t2_written_by . FILTER(?t2_written_by = 'Todd Casey') .        },"('United Kingdom',), ('Italy',)",medium,True,1,
331,tvshow,which countries' tv channels are not playing any cartoon written by Todd Casey?,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',"('Poland',)",SELECT distinct?col1 WHERE { { select (?t1_country as ?col1) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#country ?t1_country .   }}  MINUS {select (?t2_country as ?col1) where { ?t2 a dbo:tv_channel . ?t3 a dbo:cartoon . ?t3 dbo:cartoon\#ref-channel ?t2 .  ?t2 dbo:tv_channel\#country ?t2_country . ?t3 dbo:cartoon\#written_by ?t3_written_by . FILTER(?t3_written_by = 'Todd Casey') .        }     } },"('Poland',)",hard,True,1,
332,tvshow,Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","('MTV Dance', 'United Kingdom')",select distinct ?t1_series_name ?t1_country where { ?t1 a dbo:tv_channel . ?t2 a dbo:cartoon . ?t2 dbo:cartoon\#ref-channel ?t1 .  ?t1 dbo:tv_channel\#series_name ?t1_series_name . ?t1 dbo:tv_channel\#country ?t1_country . ?t2 dbo:cartoon\#directed_by ?t2_directed_by . FILTER(?t2_directed_by = 'Michael Chang') . FILTER (?t1_series_name in (?t3_series_name)) . FILTER (?t1_country in (?t3_country)) .  { ?t3 a dbo:tv_channel . ?t4 a dbo:cartoon . ?t4 dbo:cartoon\#ref-channel ?t3 .  ?t3 dbo:tv_channel\#series_name ?t3_series_name . ?t3 dbo:tv_channel\#country ?t3_country . ?t4 dbo:cartoon\#directed_by ?t4_directed_by .  FILTER(?t4_directed_by = 'Ben Jones') .     }      },"('MTV Dance', 'United Kingdom')",extra,True,1,
333,tvshow,find the pixel aspect ratio and nation of the tv channels that do not use English.,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","('4:3', 'Italy'), ('4:3', 'Italy'), ('4:3 / 16:9', 'Italy'), ('16:9', 'Italy'), ('4:3', 'Italy'), ('16:9', 'Italy'), ('4:3', 'Italy'), ('16:9', 'Italy'), ('4:3 / 16:9', 'Italy'), ('4:3 / 16:9', 'Italy'), ('4:3', 'Italy'), ('4:3', 'Italy')",select ?t1_pixel_aspect_ratio_par ?t1_country where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#pixel_aspect_ratio_par ?t1_pixel_aspect_ratio_par . ?t1 dbo:tv_channel\#country ?t1_country . ?t1 dbo:tv_channel\#language ?t1_language . FILTER(?t1_language != 'English') .        },"('4:3', 'Italy'), ('4:3', 'Italy'), ('4:3 / 16:9', 'Italy'), ('16:9', 'Italy'), ('4:3', 'Italy'), ('16:9', 'Italy'), ('4:3', 'Italy'), ('16:9', 'Italy'), ('4:3 / 16:9', 'Italy'), ('4:3 / 16:9', 'Italy'), ('4:3', 'Italy'), ('4:3', 'Italy')",medium,True,1,
334,tvshow,find id of the tv channels that from the countries where have more than two tv channels.,SELECT id FROM tv_channel GROUP BY id HAVING count(*)  >  2,,select ?t1_id where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#id ?t1_id .        } group by ?t1_id   having(count( *)  > 2),,easy,True,1,
335,tvshow,find the id of tv channels that do not play any cartoon directed by Ben Jones.,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',"(719.0,), (709.0,), (714.0,), (708.0,), (706.0,), (701.0,), (715.0,), (717.0,), (703.0,), (713.0,), (705.0,)",SELECT distinct?col1 WHERE { { select (?t1_id as ?col1) where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#id ?t1_id .   }}  MINUS {select (?t2_channel as ?col1) where { ?t2 a dbo:cartoon . ?t2 dbo:cartoon\#channel ?t2_channel . ?t2 dbo:cartoon\#directed_by ?t2_directed_by . FILTER(?t2_directed_by = 'Ben Jones') .        }     } },"(701.0,), (703.0,), (705.0,), (706.0,), (708.0,), (709.0,), (713.0,), (714.0,), (715.0,), (717.0,), (719.0,)",hard,True,1,false_negative
336,tvshow,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),"('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('no ( FTV )',), ('Sky Famiglia + Sky HD',), ('no ( FTV )',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',)",select ?t1_package_option where { ?t1 a dbo:tv_channel . ?t1 dbo:tv_channel\#package_option ?t1_package_option . ?t1 dbo:tv_channel\#id ?t1_id .     Filter not exists {{select ?t22_channel where { ?t22 a dbo:cartoon . ?t22 dbo:cartoon\#channel ?t22_channel . ?t22 dbo:cartoon\#directed_by ?t22_directed_by . FILTER(?t22_directed_by = 'Ben Jones') .        }    } FILTER (?t1_id in (?t22_channel))}  },"('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('no ( FTV )',), ('Sky Famiglia + Sky HD',), ('no ( FTV )',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',), ('Sky Famiglia',)",hard,True,1,
337,poker_player,How many poker players are there?,SELECT count(*) FROM poker_player,"(5,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:poker_player .        },"(5,)",easy,True,1,
338,poker_player,List the earnings of poker players in descending order.,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,"(596462.0,), (476090.0,), (189233.0,), (142800.0,), (104871.0,)",select ?t1_earnings where { ?t1 a dbo:poker_player . ?t1 dbo:poker_player\#earnings ?t1_earnings . ?t1 dbo:poker_player\#earnings ?t1_earnings .        }  order by desc (?t1_earnings),"(596462.0,), (476090.0,), (189233.0,), (142800.0,), (104871.0,)",easy,True,1,
339,poker_player,List the final tables made and the best finishes of poker players.,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","(42.0, 1.0), (10.0, 2.0), (21.0, 1.0), (19.0, 2.0), (26.0, 3.0)",select ?t1_final_table_made ?t1_best_finish where { ?t1 a dbo:poker_player . ?t1 dbo:poker_player\#final_table_made ?t1_final_table_made . ?t1 dbo:poker_player\#best_finish ?t1_best_finish .        },"(42.0, 1.0), (10.0, 2.0), (21.0, 1.0), (19.0, 2.0), (26.0, 3.0)",medium,True,1,
340,poker_player,What is the average earnings of poker players?,SELECT avg(Earnings) FROM poker_player,"(301891.2,)",select (avg( ?t1_earnings) as ?aggregation_t1_earnings_76 ) where { ?t1 a dbo:poker_player . ?t1 dbo:poker_player\#earnings ?t1_earnings .        },"(301891.2,)",easy,True,1,
341,poker_player,What is the money rank of the poker player with the highest earnings?,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,"(58.0,)",select ?t1_money_rank where { ?t1 a dbo:poker_player . ?t1 dbo:poker_player\#money_rank ?t1_money_rank . ?t1 dbo:poker_player\#earnings ?t1_earnings .        }   order by desc (?t1_earnings) limit 1,"(58.0,)",medium,True,1,
342,poker_player,What is the maximum number of final tables made among poker players with earnings less than 200000?,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,"(26.0,)",select (max( ?t1_final_table_made) as ?aggregation_t1_final_table_made_462 ) where { ?t1 a dbo:poker_player . ?t1 dbo:poker_player\#final_table_made ?t1_final_table_made . ?t1 dbo:poker_player\#earnings ?t1_earnings . FILTER(?t1_earnings < 200000) .        },"(26.0,)",easy,True,1,
343,poker_player,What are the names of poker players?,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,"('Aleksey Ostapenko',), ('Teodor Salparov',), ('Yevgeni Sivozhelez',), ('Maksim Botin',), ('Semen Poltavskiy',)",select ?t1_name where { ?t1 a dbo:people . ?t2 a dbo:poker_player . ?t2 dbo:poker_player\#ref-people_id ?t1 .  ?t1 dbo:people\#name ?t1_name . ?t1 dbo:people\#people_id ?t1_people_id .        },"('Aleksey Ostapenko',), ('Teodor Salparov',), ('Yevgeni Sivozhelez',), ('Maksim Botin',), ('Semen Poltavskiy',)",easy,True,1,
344,poker_player,What are the names of poker players whose earnings is higher than 300000?,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,"('Aleksey Ostapenko',), ('Maksim Botin',)",select ?t1_name where { ?t1 a dbo:people . ?t2 a dbo:poker_player . ?t2 dbo:poker_player\#ref-people_id ?t1 .  ?t1 dbo:people\#name ?t1_name . ?t2 dbo:poker_player\#earnings ?t2_earnings . FILTER(?t2_earnings > 300000) .        },"('Aleksey Ostapenko',), ('Maksim Botin',)",medium,True,1,
345,poker_player,List the names of poker players ordered by the final tables made in ascending order.,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,"('Teodor Salparov',), ('Maksim Botin',), ('Yevgeni Sivozhelez',), ('Semen Poltavskiy',), ('Aleksey Ostapenko',)",select ?t1_name where { ?t1 a dbo:people . ?t2 a dbo:poker_player . ?t2 dbo:poker_player\#ref-people_id ?t1 .  ?t1 dbo:people\#name ?t1_name . ?t2 dbo:poker_player\#final_table_made ?t2_final_table_made .        }  order by asc (?t2_final_table_made),"('Teodor Salparov',), ('Maksim Botin',), ('Yevgeni Sivozhelez',), ('Semen Poltavskiy',), ('Aleksey Ostapenko',)",medium,True,1,
346,poker_player,What is the birth date of the poker player with the lowest earnings?,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,"('August 8, 1986',)",select ?t1_birth_date where { ?t1 a dbo:people . ?t2 a dbo:poker_player . ?t2 dbo:poker_player\#ref-people_id ?t1 .  ?t1 dbo:people\#birth_date ?t1_birth_date . ?t2 dbo:poker_player\#earnings ?t2_earnings .        }   order by asc (?t2_earnings) limit 1,"('August 8, 1986',)",hard,True,1,
347,poker_player,What is the money rank of the tallest poker player?,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,"(68.0,)",select ?t1_money_rank where { ?t1 a dbo:poker_player . ?t2 a dbo:people . ?t1 dbo:poker_player\#ref-people_id ?t2 .  ?t1 dbo:poker_player\#money_rank ?t1_money_rank . ?t2 dbo:people\#height ?t2_height .        }   order by desc (?t2_height) limit 1,"(68.0,)",hard,True,1,
348,poker_player,What is the average earnings of poker players with height higher than 200?,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200,"(309445.0,)",select (avg( ?t1_earnings) as ?aggregation_t1_earnings_68 ) where { ?t1 a dbo:poker_player . ?t2 a dbo:people . ?t1 dbo:poker_player\#ref-people_id ?t2 .  ?t1 dbo:poker_player\#earnings ?t1_earnings . ?t2 dbo:people\#height ?t2_height . FILTER(?t2_height > 200) .        },"(309445.0,)",medium,True,1,
349,poker_player,What are the names of poker players in descending order of earnings?,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,"('Maksim Botin',), ('Aleksey Ostapenko',), ('Teodor Salparov',), ('Semen Poltavskiy',), ('Yevgeni Sivozhelez',)",select ?t1_name where { ?t1 a dbo:people . ?t2 a dbo:poker_player . ?t2 dbo:poker_player\#ref-people_id ?t1 .  ?t1 dbo:people\#name ?t1_name . ?t2 dbo:poker_player\#earnings ?t2_earnings .        }  order by desc (?t2_earnings),"('Maksim Botin',), ('Aleksey Ostapenko',), ('Teodor Salparov',), ('Semen Poltavskiy',), ('Yevgeni Sivozhelez',)",medium,True,1,
350,poker_player,What are different nationalities of people and the corresponding number of people from each nation?,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality","('Bulgaria', 1), ('Russia', 6)",select ?t1_nationality (count( *) as ?aggregation_all) where { ?t1 a dbo:people . ?t1 dbo:people\#nationality ?t1_nationality .        } group by ?t1_nationality,"('Russia', 6), ('Bulgaria', 1)",medium,True,1,
351,poker_player,What is the most common nationality of people?,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,"('Russia',)",select ?t1_nationality where { ?t1 a dbo:people . ?t1 dbo:people\#nationality ?t1_nationality .        } group by ?t1_nationality  order by desc (count(*)) limit 1,"('Russia',)",hard,True,1,false_negative
352,poker_player,What are the nationalities that are shared by at least two people?,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,"('Russia',)",select ?t1_nationality where { ?t1 a dbo:people . ?t1 dbo:people\#nationality ?t1_nationality .        } group by ?t1_nationality   having(count( *)  >= 2),"('Russia',)",easy,True,1,
353,poker_player,List the names and birth dates of people in ascending alphabetical order of name.,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC","('Aleksey Ostapenko', 'May 26, 1986'), ('Maksim Botin', 'July 14, 1983'), ('Roman Bragin', 'April 17, 1987'), ('Semen Poltavskiy', 'February 8, 1981'), ('Sergey Grankin', 'January 22, 1987'), ('Teodor Salparov', 'August 16, 1982'), ('Yevgeni Sivozhelez', 'August 8, 1986')",select ?t1_name ?t1_birth_date where { ?t1 a dbo:people . ?t1 dbo:people\#name ?t1_name . ?t1 dbo:people\#birth_date ?t1_birth_date . ?t1 dbo:people\#name ?t1_name .        }  order by asc (?t1_name),"('Aleksey Ostapenko', 'May 26, 1986'), ('Maksim Botin', 'July 14, 1983'), ('Roman Bragin', 'April 17, 1987'), ('Semen Poltavskiy', 'February 8, 1981'), ('Sergey Grankin', 'January 22, 1987'), ('Teodor Salparov', 'August 16, 1982'), ('Yevgeni Sivozhelez', 'August 8, 1986')",medium,True,1,
354,poker_player,Show names of people whose nationality is not 'Russia'.,SELECT Name FROM people WHERE Nationality != 'Russia',"('Teodor Salparov',)",select ?t1_name where { ?t1 a dbo:people . ?t1 dbo:people\#name ?t1_name . ?t1 dbo:people\#nationality ?t1_nationality . FILTER(?t1_nationality != 'Russia') .        },"('Teodor Salparov',)",easy,True,1,
355,poker_player,List the names of people that are not poker players.,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),"('Roman Bragin',), ('Sergey Grankin',)",select ?t1_name where { ?t1 a dbo:people . ?t1 dbo:people\#name ?t1_name . ?t1 dbo:people\#people_id ?t1_people_id .     Filter not exists {{select ?t22_people_id where { ?t22 a dbo:poker_player . ?t22 dbo:poker_player\#people_id ?t22_people_id .        }    } FILTER (?t1_people_id in (?t22_people_id))}  },"('Roman Bragin',), ('Sergey Grankin',)",hard,True,1,
356,poker_player,How many distinct nationalities are there?,SELECT count(DISTINCT Nationality) FROM people,"(2,)",select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_363 ) where { ?t1 a dbo:people . ?t1 dbo:people\#nationality ?t1_nationality .        },"(2,)",easy,True,1,
357,world_1,What are the names of all the countries that became independent after 1950?,SELECT Name FROM country WHERE IndepYear  >  1950,"('Bosnia and Herzegovina',), ('Belarus',), ('Belize',), ('Barbados',), ('Brunei',), ('Botswana',), ('Central African Republic',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Comoros',), ('Cape Verde',), ('Cyprus',), ('Czech Republic',), ('Germany',), ('Djibouti',), ('Dominica',), ('Algeria',), ('Eritrea',), ('Estonia',), ('Fiji Islands',), ('Micronesia, Federated States of',), ('Gabon',), ('Georgia',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Grenada',), ('Guyana',), ('Croatia',), ('Jamaica',), ('Kazakstan',), ('Kenya',), ('Kyrgyzstan',), ('Cambodia',), ('Kiribati',), ('Saint Kitts and Nevis',), ('Kuwait',), ('Laos',), ('Libyan Arab Jamahiriya',), ('Saint Lucia',), ('Lesotho',), ('Lithuania',), ('Latvia',), ('Morocco',), ('Moldova',), ('Madagascar',), ('Maldives',), ('Marshall Islands',), ('Macedonia',), ('Mali',), ('Malta',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Malaysia',), ('Namibia',), ('Niger',), ('Nigeria',), ('Nauru',), ('Oman',), ('Palau',), ('Papua New Guinea',), ('Qatar',), ('Russian Federation',), ('Rwanda',), ('Sudan',), ('Senegal',), ('Singapore',), ('Solomon Islands',), ('Sierra Leone',), ('Somalia',), ('Sao Tome and Principe',), ('Suriname',), ('Slovakia',), ('Slovenia',), ('Swaziland',), ('Seychelles',), ('Chad',), ('Togo',), ('Tajikistan',), ('Turkmenistan',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Tuvalu',), ('Tanzania',), ('Uganda',), ('Ukraine',), ('Uzbekistan',), ('Saint Vincent and the Grenadines',), ('Vanuatu',), ('Samoa',), ('Angola',), ('United Arab Emirates',), ('Armenia',), ('Antigua and Barbuda',), ('Azerbaijan',), ('Burundi',), ('Benin',), ('Burkina Faso',), ('Bangladesh',), ('Bahrain',), ('Bahamas',), ('Zambia',), ('Zimbabwe',), ('Bermuda',), ('Bouvet Island',), ('Cocos (Keeling) Islands',), ('Cook Islands',), ('Christmas Island',), ('Cayman Islands',), ('Western Sahara',), ('Falkland Islands',), ('Faroe Islands',), ('Gibraltar',), ('Guadeloupe',), ('Greenland',), ('French Guiana',), ('Guam',), ('Hong Kong',), ('Heard Island and McDonald Islands',), ('British Indian Ocean Territory',), ('Macao',), ('Northern Mariana Islands',), ('Montserrat',), ('Martinique',), ('Mayotte',), ('New Caledonia',), ('Norfolk Island',), ('Niue',), ('Pitcairn',), ('Puerto Rico',), ('Palestine',), ('French Polynesia',), ('Réunion',), ('South Georgia and the South Sandwich Islands',), ('Saint Helena',), ('Svalbard and Jan Mayen',), ('Saint Pierre and Miquelon',), ('Turks and Caicos Islands',), ('Tokelau',), ('East Timor',), ('United States Minor Outlying Islands',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Wallis and Futuna',), ('Aruba',), ('Anguilla',), ('Netherlands Antilles',), ('American Samoa',), ('Antarctica',), ('French Southern territories',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#indepyear ?t1_indepyear . FILTER(?t1_indepyear > 1950) .        },"('Angola',), ('United Arab Emirates',), ('Armenia',), ('Antigua and Barbuda',), ('Azerbaijan',), ('Burundi',), ('Benin',), ('Burkina Faso',), ('Bangladesh',), ('Bahrain',), ('Bahamas',), ('Bosnia and Herzegovina',), ('Belarus',), ('Belize',), ('Barbados',), ('Brunei',), ('Botswana',), ('Central African Republic',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Comoros',), ('Cape Verde',), ('Cyprus',), ('Czech Republic',), ('Germany',), ('Djibouti',), ('Dominica',), ('Algeria',), ('Eritrea',), ('Estonia',), ('Fiji Islands',), ('Micronesia, Federated States of',), ('Gabon',), ('Georgia',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Grenada',), ('Guyana',), ('Croatia',), ('Jamaica',), ('Kazakstan',), ('Kenya',), ('Kyrgyzstan',), ('Cambodia',), ('Kiribati',), ('Saint Kitts and Nevis',), ('Kuwait',), ('Laos',), ('Libyan Arab Jamahiriya',), ('Saint Lucia',), ('Lesotho',), ('Lithuania',), ('Latvia',), ('Morocco',), ('Moldova',), ('Madagascar',), ('Maldives',), ('Marshall Islands',), ('Macedonia',), ('Mali',), ('Malta',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Malaysia',), ('Namibia',), ('Niger',), ('Nigeria',), ('Nauru',), ('Oman',), ('Palau',), ('Papua New Guinea',), ('Qatar',), ('Russian Federation',), ('Rwanda',), ('Sudan',), ('Senegal',), ('Singapore',), ('Solomon Islands',), ('Sierra Leone',), ('Somalia',), ('Sao Tome and Principe',), ('Suriname',), ('Slovakia',), ('Slovenia',), ('Swaziland',), ('Seychelles',), ('Chad',), ('Togo',), ('Tajikistan',), ('Turkmenistan',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Tuvalu',), ('Tanzania',), ('Uganda',), ('Ukraine',), ('Uzbekistan',), ('Saint Vincent and the Grenadines',), ('Vanuatu',), ('Samoa',), ('Zambia',), ('Zimbabwe',)",easy,True,1,false_negative
358,world_1,How many countries have a republic as their form of government?,SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic',"(122,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:country . ?t1 dbo:country\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'Republic') .        },"(122,)",easy,True,1,
359,world_1,What is the total surface area of the countries in the Caribbean region?,SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean',"(234423.0,)",select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_225 ) where { ?t1 a dbo:country . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#region ?t1_region . FILTER(?t1_region = 'Caribbean') .        },"(234423.0,)",easy,True,1,
360,world_1,Which continent is Anguilla in?,SELECT Continent FROM country WHERE Name  =  'Anguilla',"('North America',)",select ?t1_continent where { ?t1 a dbo:country . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#name ?t1_name . FILTER(?t1_name = 'Anguilla') .        },"('North America',)",easy,True,1,
361,world_1,Which region is the city Kabul located in?,SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  'Kabul',"('Southern and Central Asia',)",select ?t1_region where { ?t1 a dbo:country . ?t2 a dbo:city . ?t2 dbo:city\#ref-countrycode ?t1 .  ?t1 dbo:country\#region ?t1_region . ?t2 dbo:city\#name ?t2_name . FILTER(?t2_name = 'Kabul') .        },"('Southern and Central Asia',)",medium,True,1,
362,world_1,Which language is the most popular in Aruba?,SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1,"('Papiamento',)",select ?t1_language where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t1 dbo:countrylanguage\#percentage ?t1_percentage . ?t2 dbo:country\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        }   order by desc (?t1_percentage) limit 1,"('Papiamento',)",extra,True,1,
363,world_1,What are the population and life expectancies in Brazil?,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil'","(170115000, 62.9)",select ?t1_population ?t1_lifeexpectancy where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#name ?t1_name . FILTER(?t1_name = 'Brazil') .        },"(170115000, 62.9)",medium,True,1,
364,world_1,What are the region and population of Angola?,"SELECT Population ,  Region FROM country WHERE Name  =  'Angola'","(12878000, 'Central Africa')",select ?t1_population ?t1_region where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#region ?t1_region . ?t1 dbo:country\#name ?t1_name . FILTER(?t1_name = 'Angola') .        },"(12878000, 'Central Africa')",medium,True,1,
365,world_1,What is the average expected life expectancy for countries in the region of Central Africa?,SELECT avg(LifeExpectancy) FROM country WHERE Region  =  'Central Africa',"(50.311111111111,)",select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_486 ) where { ?t1 a dbo:country . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#region ?t1_region . FILTER(?t1_region = 'Central Africa') .        },"(50.311111111111,)",easy,True,1,
366,world_1,What is the name of country that has the shortest life expectancy in Asia?,SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1,"('Afghanistan',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by asc (?t1_lifeexpectancy) limit 1,"('Afghanistan',)",hard,True,1,
367,world_1,What is the total population and maximum GNP in Asia?,"SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia'","(3705025700, 3787042.0)",select (sum( ?t1_population) as ?aggregation_t1_population_493 ) (max( ?t1_gnp) as ?aggregation_t1_gnp_39 ) where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#gnp ?t1_gnp . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        },"(3705025700, 3787042.0)",medium,True,1,
368,world_1,What is the average life expectancy in African countries that are republics?,SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic',"(50.84347826087,)",select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_377 ) where { ?t1 a dbo:country . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#governmentform ?t1_governmentform . FILTER(?t1_continent = 'Africa' && ?t1_governmentform = 'Republic') .        },"(50.84347826087,)",medium,True,1,
369,world_1,What is the total surface area of the continents Asia and Europe?,SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe',"(54930138.9,)",select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_265 ) where { ?t1 a dbo:country . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Asia' || ?t1_continent = 'Europe') .        },"(54930138.9,)",medium,True,1,
370,world_1,How many people live in Gelderland district?,SELECT sum(Population) FROM city WHERE District  =  'Gelderland',"(545548,)",select (sum( ?t1_population) as ?aggregation_t1_population_337 ) where { ?t1 a dbo:city . ?t1 dbo:city\#population ?t1_population . ?t1 dbo:city\#district ?t1_district . FILTER(?t1_district = 'Gelderland') .        },"(545548,)",easy,True,1,
371,world_1,What is the average GNP and total population in all nations whose government is US territory?,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  'US Territory'","(510.333333333333, 329000)",select (avg( ?t1_gnp) as ?aggregation_t1_gnp_25 ) (sum( ?t1_population) as ?aggregation_t1_population_260 ) where { ?t1 a dbo:country . ?t1 dbo:country\#gnp ?t1_gnp . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'US Territory') .        },"(510.333333333333, 329000)",medium,True,1,
372,world_1,How many unique languages are spoken in the world?,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,"(457,)",select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_297 ) where { ?t1 a dbo:countrylanguage . ?t1 dbo:countrylanguage\#language ?t1_language .        },"(457,)",easy,True,1,
373,world_1,How many type of governments are in Africa?,SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa',"(10,)",select distinct (count(distinct ?t1_governmentform) as ?aggregation_t1_governmentform_436 ) where { ?t1 a dbo:country . ?t1 dbo:country\#governmentform ?t1_governmentform . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Africa') .        },"(10,)",easy,True,1,
374,world_1,What is the total number of languages used in Aruba?,SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba',"(4,)",select (count( ?t1_language) as ?aggregation_t1_language_154 ) where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        },"(4,)",medium,True,1,
375,world_1,How many official languages does Afghanistan have?,SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Afghanistan' AND IsOfficial  =  'T',"(2,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#name ?t1_name . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . FILTER(?t1_name = 'Afghanistan' && ?t2_isofficial = 'T') .        },"(2,)",medium,True,1,
376,world_1,What is name of the country that speaks the largest number of languages?,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,"('China',)",select ?t1_name where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#code ?t1_code .        } group by ?t1_name  order by desc (count(*)) limit 1,"('Canada',)",extra,True,1,false_negative
377,world_1,Which continent has the most diverse languages?,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"('Africa',)",select ?t1_continent where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#code ?t1_code .        } group by ?t1_continent  order by desc (count(*)) limit 1,"('Africa',)",extra,True,1,
378,world_1,How many countries speak both English and Dutch?,SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch') as sub,"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:country .        },"(239,)",easy,False,0,
379,world_1,What are the names of nations speak both English and French?,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French',"('Seychelles',), ('Monaco',), ('Canada',), ('Virgin Islands, U.S.',), ('Vanuatu',), ('United States',)",select distinct ?t1_name where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#name ?t1_name . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'English') . FILTER (?t1_name in (?t3_name)) .  { ?t3 a dbo:country . ?t4 a dbo:countrylanguage . ?t4 dbo:countrylanguage\#ref-countrycode ?t3 .  ?t3 dbo:country\#name ?t3_name . ?t4 dbo:countrylanguage\#language ?t4_language .  FILTER(?t4_language = 'French') .     }      },"('Canada',), ('Monaco',), ('Seychelles',), ('United States',), ('Virgin Islands, U.S.',), ('Vanuatu',)",extra,True,1,
380,world_1,What are the names of nations where both English and French are official languages?,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French' AND T2.IsOfficial  =  'T',"('Seychelles',), ('Canada',), ('Vanuatu',)",select distinct ?t1_name where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#name ?t1_name . ?t2 dbo:countrylanguage\#language ?t2_language . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . FILTER(?t2_language = 'English' && ?t2_isofficial = 'T') . FILTER (?t1_name in (?t3_name)) .  { ?t3 a dbo:country . ?t4 a dbo:countrylanguage . ?t4 dbo:countrylanguage\#ref-countrycode ?t3 .  ?t3 dbo:country\#name ?t3_name . ?t4 dbo:countrylanguage\#language ?t4_language . ?t4 dbo:countrylanguage\#isofficial ?t4_isofficial .  FILTER(?t4_language = 'French' && ?t4_isofficial = 'T') .     }      },"('Canada',), ('Seychelles',), ('Vanuatu',)",extra,True,1,
381,world_1,What is the number of distinct continents where Chinese is spoken?,SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese',"(4,)",select distinct (count(distinct ?t1_continent) as ?aggregation_t1_continent_329 ) where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#continent ?t1_continent . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'Chinese') .        },"(4,)",medium,True,1,
382,world_1,What are the regions that use English or Dutch?,SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch',"('Southern Africa',), ('Caribbean',), ('Micronesia/Caribbean',), ('Eastern Africa',), ('Southern Europe',), ('Eastern Asia',), ('South America',), ('North America',), ('Australia and New Zealand',), ('Southern and Central Asia',), ('Southeast Asia',), ('Nordic Countries',), ('Middle East',), ('Western Africa',), ('British Islands',), ('Micronesia',), ('Melanesia',), ('Polynesia',), ('Central America',), ('Western Europe',)",select distinct ?t1_region where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t1 dbo:country\#region ?t1_region . ?t2 dbo:countrylanguage\#language ?t2_language . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'English' || ?t2_language = 'Dutch') .        },"('Caribbean',), ('Polynesia',), ('Australia and New Zealand',), ('Middle East',), ('Central America',), ('North America',), ('Southeast Asia',), ('Nordic Countries',), ('South America',), ('British Islands',), ('Southern Europe',), ('Micronesia',), ('Eastern Asia',), ('Southern Africa',), ('Western Europe',), ('Southern and Central Asia',), ('Western Africa',), ('Eastern Africa',), ('Micronesia/Caribbean',), ('Melanesia',)",hard,True,1,
383,world_1,What are the countries where either English or Dutch is the official language?,SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND IsOfficial  =  'T' UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch' AND IsOfficial  =  'T',"('MHL', 'Marshall Islands', 'Oceania', 'Micronesia', 181.0, 1990, 64000, 65.5, 97.0, None, 'Marshall Islands/Majol', 'Republic', 'Kessai Note', 2507, 'MH', 'MHL', 'English', 'T', 0.0), ('CYM', 'Cayman Islands', 'North America', 'Caribbean', 264.0, 9999, 38000, 78.9, 1263.0, 1186.0, 'Cayman Islands', 'Dependent Territory of the UK', 'Elisabeth II', 553, 'KY', 'CYM', 'English', 'T', 0.0), ('AUS', 'Australia', 'Oceania', 'Australia and New Zealand', 7741220.0, 1901, 18886000, 79.8, 351182.0, 392911.0, 'Australia', 'Constitutional Monarchy, Federation', 'Elisabeth II', 135, 'AU', 'AUS', 'English', 'T', 81.2), ('MNP', 'Northern Mariana Islands', 'Oceania', 'Micronesia', 464.0, 9999, 78000, 75.5, 0.0, None, 'Northern Mariana Islands', 'Commonwealth of the US', 'George W. Bush', 2913, 'MP', 'MNP', 'English', 'T', 4.8), ('UMI', 'United States Minor Outlying Islands', 'Oceania', 'Micronesia/Caribbean', 16.0, 9999, 0, None, 0.0, None, 'United States Minor Outlying Islands', 'Dependent Territory of the US', 'George W. Bush', None, 'UM', 'UMI', 'English', 'T', 0.0), ('USA', 'United States', 'North America', 'North America', 9363520.0, 1776, 278357000, 77.1, 8510700.0, 8110900.0, 'United States', 'Federal Republic', 'George W. Bush', 3813, 'US', 'USA', 'English', 'T', 86.2), ('VIR', 'Virgin Islands, U.S.', 'North America', 'Caribbean', 347.0, 9999, 93000, 78.1, 0.0, None, 'Virgin Islands of the United States', 'US Territory', 'George W. Bush', 4067, 'VI', 'VIR', 'English', 'T', 81.7), ('NIU', 'Niue', 'Oceania', 'Polynesia', 260.0, 9999, 2000, None, 0.0, None, 'Niue', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', 2805, 'NU', 'NIU', 'English', 'T', 0.0), ('LSO', 'Lesotho', 'Africa', 'Southern Africa', 30355.0, 1966, 2153000, 50.8, 1061.0, 1161.0, 'Lesotho', 'Constitutional Monarchy', 'Letsie III', 2437, 'LS', 'LSO', 'English', 'T', 0.0), ('TCA', 'Turks and Caicos Islands', 'North America', 'Caribbean', 430.0, 9999, 17000, 73.3, 96.0, None, 'The Turks and Caicos Islands', 'Dependent Territory of the UK', 'Elisabeth II', 3423, 'TC', 'TCA', 'English', 'T', 0.0), ('TON', 'Tonga', 'Oceania', 'Polynesia', 650.0, 1970, 99000, 67.9, 146.0, 170.0, 'Tonga', 'Monarchy', ""Taufa'ahau Tupou IV"", 3334, 'TO', 'TON', 'English', 'T', 0.0), ('IRL', 'Ireland', 'Europe', 'British Islands', 70273.0, 1921, 3775100, 76.8, 75921.0, 73132.0, 'Ireland/Éire', 'Republic', 'Mary McAleese', 1447, 'IE', 'IRL', 'English', 'T', 98.4), ('VUT', 'Vanuatu', 'Oceania', 'Melanesia', 12189.0, 1980, 190000, 60.6, 261.0, 246.0, 'Vanuatu', 'Republic', 'John Bani', 3537, 'VU', 'VUT', 'English', 'T', 28.3), ('VCT', 'Saint Vincent and the Grenadines', 'North America', 'Caribbean', 388.0, 1979, 114000, 72.3, 285.0, None, 'Saint Vincent and the Grenadines', 'Constitutional Monarchy', 'Elisabeth II', 3066, 'VC', 'VCT', 'English', 'T', 0.0), ('NFK', 'Norfolk Island', 'Oceania', 'Australia and New Zealand', 36.0, 9999, 2000, None, 0.0, None, 'Norfolk Island', 'Territory of Australia', 'Elisabeth II', 2806, 'NF', 'NFK', 'English', 'T', 0.0), ('CXR', 'Christmas Island', 'Oceania', 'Australia and New Zealand', 135.0, 9999, 2500, None, 0.0, None, 'Christmas Island', 'Territory of Australia', 'Elisabeth II', 1791, 'CX', 'CXR', 'English', 'T', 0.0), ('AIA', 'Anguilla', 'North America', 'Caribbean', 96.0, 9999, 8000, 76.1, 63.2, None, 'Anguilla', 'Dependent Territory of the UK', 'Elisabeth II', 62, 'AI', 'AIA', 'English', 'T', 0.0), ('MLT', 'Malta', 'Europe', 'Southern Europe', 316.0, 1964, 380200, 77.9, 3512.0, 3338.0, 'Malta', 'Republic', 'Guido de Marco', 2484, 'MT', 'MLT', 'English', 'T', 2.1), ('TUV', 'Tuvalu', 'Oceania', 'Polynesia', 26.0, 1978, 12000, 66.3, 6.0, None, 'Tuvalu', 'Constitutional Monarchy', 'Elisabeth II', 3424, 'TV', 'TUV', 'English', 'T', 0.0), ('BLZ', 'Belize', 'North America', 'Central America', 22696.0, 1981, 241000, 70.9, 630.0, 616.0, 'Belize', 'Constitutional Monarchy', 'Elisabeth II', 185, 'BZ', 'BLZ', 'English', 'T', 50.8), ('BMU', 'Bermuda', 'North America', 'North America', 53.0, 9999, 65000, 76.9, 2328.0, 2190.0, 'Bermuda', 'Dependent Territory of the UK', 'Elisabeth II', 191, 'BM', 'BMU', 'English', 'T', 100.0), ('VGB', 'Virgin Islands, British', 'North America', 'Caribbean', 151.0, 9999, 21000, 75.4, 612.0, 573.0, 'British Virgin Islands', 'Dependent Territory of the UK', 'Elisabeth II', 537, 'VG', 'VGB', 'English', 'T', 0.0), ('MSR', 'Montserrat', 'North America', 'Caribbean', 102.0, 9999, 11000, 78.0, 109.0, None, 'Montserrat', 'Dependent Territory of the UK', 'Elisabeth II', 2697, 'MS', 'MSR', 'English', 'T', 0.0), ('ANT', 'Netherlands Antilles', 'North America', 'Caribbean', 800.0, 9999, 217000, 74.7, 1941.0, None, 'Nederlandse Antillen', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', 33, 'AN', 'ANT', 'Dutch', 'T', 0.0), ('ATG', 'Antigua and Barbuda', 'North America', 'Caribbean', 442.0, 1981, 68000, 70.5, 612.0, 584.0, 'Antigua and Barbuda', 'Constitutional Monarchy', 'Elisabeth II', 63, 'AG', 'ATG', 'English', 'T', 0.0), ('LCA', 'Saint Lucia', 'North America', 'Caribbean', 622.0, 1979, 154000, 72.3, 571.0, None, 'Saint Lucia', 'Constitutional Monarchy', 'Elisabeth II', 3065, 'LC', 'LCA', 'English', 'T', 20.0), ('BRB', 'Barbados', 'North America', 'Caribbean', 430.0, 1966, 270000, 73.0, 2223.0, 2186.0, 'Barbados', 'Constitutional Monarchy', 'Elisabeth II', 174, 'BB', 'BRB', 'English', 'T', 0.0), ('PLW', 'Palau', 'Oceania', 'Micronesia', 459.0, 1994, 19000, 68.6, 105.0, None, 'Belau/Palau', 'Republic', 'Kuniwo Nakamura', 2881, 'PW', 'PLW', 'English', 'T', 3.2), ('ABW', 'Aruba', 'North America', 'Caribbean', 193.0, 9999, 103000, 78.4, 828.0, 793.0, 'Aruba', 'Nonmetropolitan Territory of The Netherlands', 'Beatrix', 129, 'AW', 'ABW', 'Dutch', 'T', 5.3), ('FLK', 'Falkland Islands', 'South America', 'South America', 12173.0, 9999, 2000, None, 0.0, None, 'Falkland Islands', 'Dependent Territory of the UK', 'Elisabeth II', 763, 'FK', 'FLK', 'English', 'T', 0.0), ('SYC', 'Seychelles', 'Africa', 'Eastern Africa', 455.0, 1976, 77000, 70.4, 536.0, 539.0, 'Sesel/Seychelles', 'Republic', 'France-Albert René', 3206, 'SC', 'SYC', 'English', 'T', 3.8), ('NRU', 'Nauru', 'Oceania', 'Micronesia', 21.0, 1968, 12000, 60.8, 197.0, None, 'Naoero/Nauru', 'Republic', 'Bernard Dowiyogo', 2728, 'NR', 'NRU', 'English', 'T', 7.5), ('ZWE', 'Zimbabwe', 'Africa', 'Eastern Africa', 390757.0, 1980, 11669000, 37.8, 5951.0, 8670.0, 'Zimbabwe', 'Republic', 'Robert G. Mugabe', 4068, 'ZW', 'ZWE', 'English', 'T', 2.2), ('NLD', 'Netherlands', 'Europe', 'Western Europe', 41526.0, 1581, 15864000, 78.3, 371362.0, 360478.0, 'Nederland', 'Constitutional Monarchy', 'Beatrix', 5, 'NL', 'NLD', 'Dutch', 'T', 95.6), ('ASM', 'American Samoa', 'Oceania', 'Polynesia', 199.0, 9999, 68000, 75.1, 334.0, None, 'Amerika Samoa', 'US Territory', 'George W. Bush', 54, 'AS', 'ASM', 'English', 'T', 3.1), ('WSM', 'Samoa', 'Oceania', 'Polynesia', 2831.0, 1962, 180000, 69.2, 141.0, 157.0, 'Samoa', 'Parlementary Monarchy', 'Malietoa Tanumafili II', 3169, 'WS', 'WSM', 'English', 'T', 0.6), ('CCK', 'Cocos (Keeling) Islands', 'Oceania', 'Australia and New Zealand', 14.0, 9999, 600, None, 0.0, None, 'Cocos (Keeling) Islands', 'Territory of Australia', 'Elisabeth II', 2317, 'CC', 'CCK', 'English', 'T', 0.0), ('TKL', 'Tokelau', 'Oceania', 'Polynesia', 12.0, 9999, 2000, None, 0.0, None, 'Tokelau', 'Nonmetropolitan Territory of New Zealand', 'Elisabeth II', 3333, 'TK', 'TKL', 'English', 'T', 0.0), ('HKG', 'Hong Kong', 'Asia', 'Eastern Asia', 1075.0, 9999, 6782000, 79.5, 166448.0, 173610.0, 'Xianggang/Hong Kong', 'Special Administrative Region of China', 'Jiang Zemin', 937, 'HK', 'HKG', 'English', 'T', 2.2), ('GIB', 'Gibraltar', 'Europe', 'Southern Europe', 6.0, 9999, 25000, 79.0, 258.0, None, 'Gibraltar', 'Dependent Territory of the UK', 'Elisabeth II', 915, 'GI', 'GIB', 'English', 'T', 88.9), ('KNA', 'Saint Kitts and Nevis', 'North America', 'Caribbean', 261.0, 1983, 38000, 70.7, 299.0, None, 'Saint Kitts and Nevis', 'Constitutional Monarchy', 'Elisabeth II', 3064, 'KN', 'KNA', 'English', 'T', 0.0), ('GBR', 'United Kingdom', 'Europe', 'British Islands', 242900.0, 1066, 59623400, 77.7, 1378330.0, 1296830.0, 'United Kingdom', 'Constitutional Monarchy', 'Elisabeth II', 456, 'GB', 'GBR', 'English', 'T', 97.3), ('SHN', 'Saint Helena', 'Africa', 'Western Africa', 314.0, 9999, 6000, 76.8, 0.0, None, 'Saint Helena', 'Dependent Territory of the UK', 'Elisabeth II', 3063, 'SH', 'SHN', 'English', 'T', 0.0), ('CAN', 'Canada', 'North America', 'North America', 9970610.0, 1867, 31147000, 79.4, 598862.0, 625626.0, 'Canada', 'Constitutional Monarchy, Federation', 'Elisabeth II', 1822, 'CA', 'CAN', 'English', 'T', 60.4), ('BEL', 'Belgium', 'Europe', 'Western Europe', 30518.0, 1830, 10239000, 77.8, 249704.0, 243948.0, 'België/Belgique', 'Constitutional Monarchy, Federation', 'Albert II', 179, 'BE', 'BEL', 'Dutch', 'T', 59.2), ('ZAF', 'South Africa', 'Africa', 'Southern Africa', 1221037.0, 1910, 40377000, 51.1, 116729.0, 129092.0, 'South Africa', 'Republic', 'Thabo Mbeki', 716, 'ZA', 'ZAF', 'English', 'T', 8.5), ('GUM', 'Guam', 'Oceania', 'Micronesia', 549.0, 9999, 168000, 77.8, 1197.0, 1136.0, 'Guam', 'US Territory', 'George W. Bush', 921, 'GU', 'GUM', 'English', 'T', 37.5), ('NZL', 'New Zealand', 'Oceania', 'Australia and New Zealand', 270534.0, 1907, 3862000, 77.8, 54669.0, 64960.0, 'New Zealand/Aotearoa', 'Constitutional Monarchy', 'Elisabeth II', 3499, 'NZ', 'NZL', 'English', 'T', 87.0)",SELECT distinct* WHERE { { select * where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t2 dbo:countrylanguage\#language ?t2_language . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . FILTER(?t2_language = 'English' && ?t2_isofficial = 'T') .   }} UNION {select * where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t2 dbo:countrylanguage\#language ?t2_language . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . FILTER(?t2_language = 'Dutch' && ?t2_isofficial = 'T') .        }      } },"('http://valuenet/ontop/country/code=AIA', 'http://valuenet/ontop/countrylanguage/countrycode=AIA;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=ASM', 'http://valuenet/ontop/countrylanguage/countrycode=ASM;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=ATG', 'http://valuenet/ontop/countrylanguage/countrycode=ATG;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=AUS', 'http://valuenet/ontop/countrylanguage/countrycode=AUS;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=BLZ', 'http://valuenet/ontop/countrylanguage/countrycode=BLZ;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=BMU', 'http://valuenet/ontop/countrylanguage/countrycode=BMU;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=BRB', 'http://valuenet/ontop/countrylanguage/countrycode=BRB;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=CAN', 'http://valuenet/ontop/countrylanguage/countrycode=CAN;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=CCK', 'http://valuenet/ontop/countrylanguage/countrycode=CCK;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=CXR', 'http://valuenet/ontop/countrylanguage/countrycode=CXR;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=CYM', 'http://valuenet/ontop/countrylanguage/countrycode=CYM;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=FLK', 'http://valuenet/ontop/countrylanguage/countrycode=FLK;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=GBR', 'http://valuenet/ontop/countrylanguage/countrycode=GBR;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=GIB', 'http://valuenet/ontop/countrylanguage/countrycode=GIB;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=GUM', 'http://valuenet/ontop/countrylanguage/countrycode=GUM;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=HKG', 'http://valuenet/ontop/countrylanguage/countrycode=HKG;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=IRL', 'http://valuenet/ontop/countrylanguage/countrycode=IRL;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=KNA', 'http://valuenet/ontop/countrylanguage/countrycode=KNA;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=LCA', 'http://valuenet/ontop/countrylanguage/countrycode=LCA;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=LSO', 'http://valuenet/ontop/countrylanguage/countrycode=LSO;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=MHL', 'http://valuenet/ontop/countrylanguage/countrycode=MHL;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=MLT', 'http://valuenet/ontop/countrylanguage/countrycode=MLT;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=MNP', 'http://valuenet/ontop/countrylanguage/countrycode=MNP;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=MSR', 'http://valuenet/ontop/countrylanguage/countrycode=MSR;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=NFK', 'http://valuenet/ontop/countrylanguage/countrycode=NFK;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=NIU', 'http://valuenet/ontop/countrylanguage/countrycode=NIU;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=NRU', 'http://valuenet/ontop/countrylanguage/countrycode=NRU;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=NZL', 'http://valuenet/ontop/countrylanguage/countrycode=NZL;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=PLW', 'http://valuenet/ontop/countrylanguage/countrycode=PLW;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=SHN', 'http://valuenet/ontop/countrylanguage/countrycode=SHN;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=SYC', 'http://valuenet/ontop/countrylanguage/countrycode=SYC;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=TCA', 'http://valuenet/ontop/countrylanguage/countrycode=TCA;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=TKL', 'http://valuenet/ontop/countrylanguage/countrycode=TKL;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=TON', 'http://valuenet/ontop/countrylanguage/countrycode=TON;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=TUV', 'http://valuenet/ontop/countrylanguage/countrycode=TUV;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=UMI', 'http://valuenet/ontop/countrylanguage/countrycode=UMI;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=USA', 'http://valuenet/ontop/countrylanguage/countrycode=USA;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=VCT', 'http://valuenet/ontop/countrylanguage/countrycode=VCT;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=VGB', 'http://valuenet/ontop/countrylanguage/countrycode=VGB;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=VIR', 'http://valuenet/ontop/countrylanguage/countrycode=VIR;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=VUT', 'http://valuenet/ontop/countrylanguage/countrycode=VUT;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=WSM', 'http://valuenet/ontop/countrylanguage/countrycode=WSM;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=ZAF', 'http://valuenet/ontop/countrylanguage/countrycode=ZAF;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=ZWE', 'http://valuenet/ontop/countrylanguage/countrycode=ZWE;language=English', 'English', 'T'), ('http://valuenet/ontop/country/code=ABW', 'http://valuenet/ontop/countrylanguage/countrycode=ABW;language=Dutch', 'Dutch', 'T'), ('http://valuenet/ontop/country/code=ANT', 'http://valuenet/ontop/countrylanguage/countrycode=ANT;language=Dutch', 'Dutch', 'T'), ('http://valuenet/ontop/country/code=BEL', 'http://valuenet/ontop/countrylanguage/countrycode=BEL;language=Dutch', 'Dutch', 'T'), ('http://valuenet/ontop/country/code=NLD', 'http://valuenet/ontop/countrylanguage/countrycode=NLD;language=Dutch', 'Dutch', 'T')",extra,False,0,
384,world_1,Which language is the most popular on the Asian continent?,SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1,"('Arabic',)",select ?t1_language where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#continent ?t2_continent . FILTER(?t2_continent = 'Asia') .        } group by ?t1_language  order by desc (count(*)) limit 1,"('Arabic',)",extra,True,1,
385,world_1,Which languages are spoken by only one country in republic governments?,SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(*)  =  1,"('Bullom-sherbro',), ('Arabic-French-English',), ('Kikuyu',), ('Sardinian',), ('Bengali',), ('Bali',), ('Banda',), ('Shan',), ('Turkmenian',), ('Kono-vai',), ('Irish',), ('Berberi',), ('Luba',), ('Saho',), ('Gagauzi',), ('Comorian-French',), ('Kekchí',), ('Czech',), ('Karakalpak',), ('Haiti Creole',), ('Kissi',), ('Persian',), ('Kavango',), ('Kiga',), ('Pilipino',), ('Ngbaka',), ('Hakka',), ('Soga',), ('Luimbe-nganguela',), ('Ukrainian and Russian',), ('Buryat',), ('Nyaneka-nkhumbi',), ('Tongan',), ('Mbundu',), ('Seselwa',), ('Urdu',), ('Hehet',), ('Bugi',), ('Rapa nui',), ('Kachin',), ('Moba',), ('Songhai',), ('Maltese',), ('Garo',), ('Moravian',), ('Saame',), ('Gusii',), ('Kirundi',), ('Mboshi',), ('Nyakusa',), ('Guaymí',), ('Nyika',), ('Ovambo',), ('Luguru',), ('Hiligaynon',), ('Balante',), ('Oromo',), ('Ngoni',), ('Saraiki',), ('Rundi',), ('Sinaberberi',), ('Mandjia',), ('Bicol',), ('Kalenjin',), ('Walaita',), ('Khoekhoe',), ('Soqutri',), ('Tswa',), ('Kayah',), ('Silesiana',), ('Pampango',), ('Balochi',), ('Maka',), ('Nyamwesi',), ('Mon-khmer',), ('Quiché',), ('Teso',), ('Shambala',), ('Tikar',), ('Comorian-Swahili',), ('Thai',), ('Min',), ('Luchazi',), ('Ami',), ('Lao-Soung',), ('Karen',), ('Mandara',), ('Araucan',), ('Khasi',), ('Northsotho',), ('Herero',), ('Tripuri',), ('Lugbara',), ('Lango',), ('Pangasinan',), ('[South]Mande',), ('Gisu',), ('Kanuri',), ('Dyula',), ('Makua',), ('Susu',), ('Banja',), ('Fon',), ('Adja',), ('Chakma',), ('Haya',), ('Atayal',), ('Busansi',), ('Nahua',), ('Arabic-French',), ('Songhai-zerma',), ('Assyrian',), ('Venda',), ('Hebrew',), ('Kabyé',), ('Chuabo',), ('Comorian-Arabic',), ('Grebo',), ('Batakki',), ('Waray-waray',), ('Senufo and Minianka',), ('Bhojpuri',), ('Hadareb',), ('Swedish',), ('Somba',), ('Yao',), ('Zande',), ('Madura',), ('Temne',), ('Zulu',), ('Caprivi',), ('Turkana',), ('Limba',), ('Marendje',), ('Mixed Languages',), ('Dagara',), ('Makonde',), ('Javanese',), ('Xhosa',), ('Boa',), ('Gio',), ('Pashto',), ('Mam',), ('Bariba',), ('Kamba',), ('Bilin',), ('Ane',), ('Osseetti',), ('Bambara',), ('Ovimbundu',), ('Punjabi',), ('Korean',), ('Masana',), ('Amhara',), ('Latvian',), ('Tigre',), ('Nkole',), ('Maguindanao',), ('Hindko',), ('Ngala and Bangi',), ('Czech and Moravian',), ('Dariganga',), ('Ilocano',), ('Mbum',), ('Ambo',), ('Comorian-madagassi',), ('Luhya',), ('Philippene Languages',), ('Kanem-bornu',), ('Nauru',), ('Cakchiquel',), ('Bamileke-bamum',), ('Nama',), ('Mende',), ('Bajad',), ('Singali',), ('Duala',), ('Chin',), ('Marma',), ('Comorian',), ('Nsenga',), ('Acholi',), ('Mandarin Chinese',), ('Tukulor',), ('Abhyasi',), ('Watyi',), ('Dorbet',), ('Santhali',), ('Hassaniya',), ('Marathi',), ('Sena',), ('Marshallese',), ('Brahui',), ('Serer',), ('Kotokoli',), ('Ronga',), ('Ha',), ('Sumo',), ('Zenaga',), ('Bassa',), ('Garifuna',), ('Lao',), ('Ganda',), ('Luo',), ('Meru',), ('Gbaya',), ('Dhivehi',), ('Swazi',), ('Sindhi',), ('Sranantonga',), ('Kirgiz',), ('Palau',), ('Naudemba',), ('Sunda',), ('Punu',), ('Burmese',), ('Fijian',), ('Gorane',), ('Mongolian',), ('Chaga and Pare',), ('Chewa',), ('Maranao',), ('Embera',), ('Kuranko',), ('Masai',), ('Bemba',), ('Southsotho',), ('Aizo',), ('Rakhine',), ('Mongo',), ('Tandjile',), ('Chichewa',), ('Bubi',), ('Bislama',), ('Paiwan',), ('Sidamo',), ('Sango',), ('Lozi',), ('Friuli',), ('Georgiana',), ('Cuna',), ('Mandyako',), ('Mon',), ('Icelandic',), ('Gurage',), ('Punu-sira-nzebi',), ('Minangkabau',), ('Hausa',), ('Mpongwe',), ('Cebuano',), ('Mano',), ('Hadjarai',), ('Gogo',), ('Mayo-kebbi',), ('Ga-adangme',), ('Ouaddai',), ('Luvale',), ('Gur',)",select ?t1_language where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#governmentform ?t2_governmentform . FILTER(?t2_governmentform = 'Republic') .        } group by ?t1_language   having(count( *)  = 1),"('Ambo',), ('Luchazi',), ('Luimbe-nganguela',), ('Luvale',), ('Mbundu',), ('Nyaneka-nkhumbi',), ('Ovimbundu',), ('Kirundi',), ('Adja',), ('Aizo',), ('Bariba',), ('Fon',), ('Somba',), ('Busansi',), ('Dagara',), ('Dyula',), ('Bengali',), ('Chakma',), ('Garo',), ('Khasi',), ('Marma',), ('Santhali',), ('Tripuri',), ('Khoekhoe',), ('Banda',), ('Gbaya',), ('Mandjia',), ('Mbum',), ('Ngbaka',), ('Araucan',), ('Rapa nui',), ('Gur',), ('[South]Mande',), ('Bamileke-bamum',), ('Duala',), ('Maka',), ('Mandara',), ('Masana',), ('Tikar',), ('Boa',), ('Luba',), ('Mongo',), ('Ngala and Bangi',), ('Rundi',), ('Zande',), ('Mboshi',), ('Punu',), ('Sango',), ('Comorian',), ('Comorian-Arabic',), ('Comorian-French',), ('Comorian-madagassi',), ('Comorian-Swahili',), ('Czech',), ('Moravian',), ('Silesiana',), ('Berberi',), ('Sinaberberi',), ('Bilin',), ('Hadareb',), ('Saho',), ('Tigre',), ('Amhara',), ('Gurage',), ('Oromo',), ('Sidamo',), ('Walaita',), ('Saame',), ('Swedish',), ('Fijian',), ('Mpongwe',), ('Punu-sira-nzebi',), ('Abhyasi',), ('Georgiana',), ('Osseetti',), ('Ga-adangme',), ('Kissi',), ('Susu',), ('Balante',), ('Mandyako',), ('Bubi',), ('Cakchiquel',), ('Kekchí',), ('Mam',), ('Quiché',), ('Garifuna',), ('Haiti Creole',), ('Bali',), ('Banja',), ('Batakki',), ('Bugi',), ('Javanese',), ('Madura',), ('Minangkabau',), ('Sunda',), ('Irish',), ('Assyrian',), ('Persian',), ('Icelandic',), ('Hebrew',), ('Friuli',), ('Sardinian',), ('Gusii',), ('Kalenjin',), ('Kamba',), ('Kikuyu',), ('Luhya',), ('Luo',), ('Masai',), ('Meru',), ('Nyika',), ('Turkana',), ('Kirgiz',), ('Korean',), ('Lao',), ('Lao-Soung',), ('Mon-khmer',), ('Thai',), ('Bassa',), ('Gio',), ('Grebo',), ('Mano',), ('Mixed Languages',), ('Singali',), ('Latvian',), ('Gagauzi',), ('Dhivehi',), ('Marshallese',), ('Bambara',), ('Senufo and Minianka',), ('Songhai',), ('Maltese',), ('Burmese',), ('Chin',), ('Kachin',), ('Karen',), ('Kayah',), ('Mon',), ('Rakhine',), ('Shan',), ('Bajad',), ('Buryat',), ('Dariganga',), ('Dorbet',), ('Mongolian',), ('Chuabo',), ('Makua',), ('Marendje',), ('Ronga',), ('Sena',), ('Tswa',), ('Hassaniya',), ('Tukulor',), ('Zenaga',), ('Bhojpuri',), ('Marathi',), ('Chichewa',), ('Ngoni',), ('Yao',), ('Caprivi',), ('Herero',), ('Kavango',), ('Nama',), ('Ovambo',), ('Hausa',), ('Kanuri',), ('Songhai-zerma',), ('Sumo',), ('Nauru',), ('Balochi',), ('Brahui',), ('Hindko',), ('Pashto',), ('Punjabi',), ('Saraiki',), ('Sindhi',), ('Urdu',), ('Cuna',), ('Embera',), ('Guaymí',), ('Bicol',), ('Cebuano',), ('Hiligaynon',), ('Ilocano',), ('Maguindanao',), ('Maranao',), ('Pampango',), ('Pangasinan',), ('Pilipino',), ('Waray-waray',), ('Palau',), ('Philippene Languages',), ('Serer',), ('Bullom-sherbro',), ('Kono-vai',), ('Kuranko',), ('Limba',), ('Mende',), ('Temne',), ('Nahua',), ('Sranantonga',), ('Czech and Moravian',), ('Ukrainian and Russian',), ('Seselwa',), ('Gorane',), ('Hadjarai',), ('Kanem-bornu',), ('Mayo-kebbi',), ('Ouaddai',), ('Tandjile',), ('Ane',), ('Kabyé',), ('Kotokoli',), ('Moba',), ('Naudemba',), ('Watyi',), ('Turkmenian',), ('Arabic-French',), ('Arabic-French-English',), ('Ami',), ('Atayal',), ('Hakka',), ('Mandarin Chinese',), ('Min',), ('Paiwan',), ('Chaga and Pare',), ('Gogo',), ('Ha',), ('Haya',), ('Hehet',), ('Luguru',), ('Makonde',), ('Nyakusa',), ('Nyamwesi',), ('Shambala',), ('Acholi',), ('Ganda',), ('Gisu',), ('Kiga',), ('Lango',), ('Lugbara',), ('Nkole',), ('Soga',), ('Teso',), ('Karakalpak',), ('Bislama',), ('Soqutri',), ('Northsotho',), ('Southsotho',), ('Swazi',), ('Venda',), ('Xhosa',), ('Zulu',), ('Bemba',), ('Chewa',), ('Lozi',), ('Nsenga',), ('Tongan',)",hard,True,1,
386,world_1,Find the city with the largest population that uses English.,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1","('New York', 8008278)",select ?t1_name ?t1_population where { ?t1 a dbo:city . ?t13 a dbo:country . ?t1 dbo:city\#ref-countrycode ?t13 .  ?t1 dbo:city\#name ?t1_name . ?t1 dbo:city\#population ?t1_population . ?t1 dbo:city\#population ?t1_population . ?t2 dbo:countrylanguage\#language ?t2_language . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t13 .  ?t1 dbo:city\#name ?t1_name . ?t1 dbo:city\#population ?t1_population . ?t1 dbo:city\#population ?t1_population . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'English') .        }   order by desc (?t1_population) limit 1,"('New York', 8008278)",extra,True,1,
387,world_1,"Find the name, population and expected life length of asian country with the largest area?","SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1","('China', 1277558000, 71.4)",select ?t1_name ?t1_population ?t1_lifeexpectancy where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by desc (?t1_surfacearea) limit 1,"('China', 1277558000, 71.4)",hard,True,1,
388,world_1,What is average life expectancy in the countries where English is not the official language?,SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T'),"(65.482702702703,)",select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_412 ) where { ?t1 a dbo:country . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a dbo:country . ?t23 a dbo:countrylanguage . ?t23 dbo:countrylanguage\#ref-countrycode ?t22 .  ?t22 dbo:country\#name ?t22_name . ?t23 dbo:countrylanguage\#language ?t23_language . ?t23 dbo:countrylanguage\#isofficial ?t23_isofficial . FILTER(?t23_language = 'English' && ?t23_isofficial = 'T') .        }    } FILTER (?t1_name in (?t22_name))}  },"(65.482702702703,)",extra,True,1,
389,world_1,What is the total number of people living in the nations that do not use English?,SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English'),"(5451331150,)",select (sum( ?t1_population) as ?aggregation_t1_population_405 ) where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a dbo:country . ?t23 a dbo:countrylanguage . ?t23 dbo:countrylanguage\#ref-countrycode ?t22 .  ?t22 dbo:country\#name ?t22_name . ?t23 dbo:countrylanguage\#language ?t23_language . FILTER(?t23_language = 'English') .        }    } FILTER (?t1_name in (?t22_name))}  },"(5451331150,)",extra,True,1,
390,world_1,What is the official language spoken in the country whose head of state is Beatrix?,SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  'Beatrix' AND T2.IsOfficial  =  'T',"('Dutch',), ('Dutch',), ('Papiamento',), ('Dutch',)",select ?t1_language where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#headofstate ?t2_headofstate . ?t1 dbo:countrylanguage\#isofficial ?t1_isofficial . FILTER(?t2_headofstate = 'Beatrix' && ?t1_isofficial = 'T') .        },"('Dutch',), ('Dutch',), ('Papiamento',), ('Dutch',)",medium,True,1,
391,world_1,What is the total number of unique official languages spoken in the countries that are founded before 1930?,SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  'T',"(40,)",select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_316 ) where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#indepyear ?t2_indepyear . ?t1 dbo:countrylanguage\#isofficial ?t1_isofficial . FILTER(?t2_indepyear < 1930 && ?t1_isofficial = 'T') .        },"(40,)",medium,True,1,
392,world_1,What are the countries that have greater surface area than any country in Europe?,SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  'Europe'),"('San Marino',), ('Bosnia and Herzegovina',), ('Belarus',), ('Belize',), ('Bolivia',), ('Brazil',), ('Barbados',), ('Brunei',), ('Bhutan',), ('Botswana',), ('Central African Republic',), ('Canada',), ('Switzerland',), ('Chile',), ('China',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Colombia',), ('Comoros',), ('Cape Verde',), ('Costa Rica',), ('Cuba',), ('Cyprus',), ('Czech Republic',), ('Germany',), ('Djibouti',), ('Dominica',), ('Denmark',), ('Dominican Republic',), ('Algeria',), ('Ecuador',), ('Egypt',), ('Eritrea',), ('Spain',), ('Estonia',), ('Ethiopia',), ('Finland',), ('Fiji Islands',), ('France',), ('Micronesia, Federated States of',), ('Gabon',), ('United Kingdom',), ('Georgia',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Greece',), ('Grenada',), ('Guatemala',), ('Guyana',), ('Honduras',), ('Croatia',), ('Haiti',), ('Hungary',), ('Indonesia',), ('India',), ('Ireland',), ('Iran',), ('Iraq',), ('Iceland',), ('Israel',), ('Italy',), ('Jamaica',), ('Jordan',), ('Japan',), ('Kazakstan',), ('Kenya',), ('Kyrgyzstan',), ('Cambodia',), ('Kiribati',), ('Saint Kitts and Nevis',), ('South Korea',), ('Kuwait',), ('Laos',), ('Lebanon',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Saint Lucia',), ('Liechtenstein',), ('Sri Lanka',), ('Lesotho',), ('Lithuania',), ('Luxembourg',), ('Latvia',), ('Morocco',), ('Monaco',), ('Moldova',), ('Madagascar',), ('Maldives',), ('Mexico',), ('Marshall Islands',), ('Macedonia',), ('Mali',), ('Malta',), ('Myanmar',), ('Mongolia',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Malaysia',), ('Namibia',), ('Niger',), ('Nigeria',), ('Nicaragua',), ('Netherlands',), ('Norway',), ('Nepal',), ('Nauru',), ('New Zealand',), ('Oman',), ('Pakistan',), ('Panama',), ('Peru',), ('Philippines',), ('Palau',), ('Papua New Guinea',), ('Poland',), ('North Korea',), ('Portugal',), ('Paraguay',), ('Qatar',), ('Romania',), ('Russian Federation',), ('Rwanda',), ('Saudi Arabia',), ('Sudan',), ('Senegal',), ('Singapore',), ('Solomon Islands',), ('Sierra Leone',), ('El Salvador',), ('Somalia',), ('Sao Tome and Principe',), ('Suriname',), ('Slovakia',), ('Slovenia',), ('Sweden',), ('Swaziland',), ('Seychelles',), ('Syria',), ('Chad',), ('Togo',), ('Thailand',), ('Tajikistan',), ('Turkmenistan',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Turkey',), ('Tuvalu',), ('Taiwan',), ('Tanzania',), ('Uganda',), ('Ukraine',), ('Uruguay',), ('United States',), ('Uzbekistan',), ('Saint Vincent and the Grenadines',), ('Venezuela',), ('Vietnam',), ('Vanuatu',), ('Samoa',), ('Yemen',), ('Yugoslavia',), ('Afghanistan',), ('Angola',), ('Albania',), ('Andorra',), ('United Arab Emirates',), ('Argentina',), ('Armenia',), ('South Africa',), ('Antigua and Barbuda',), ('Australia',), ('Austria',), ('Azerbaijan',), ('Burundi',), ('Belgium',), ('Benin',), ('Burkina Faso',), ('Bangladesh',), ('Bulgaria',), ('Bahrain',), ('Bahamas',), ('Zambia',), ('Zimbabwe',), ('Bermuda',), ('Bouvet Island',), ('Cocos (Keeling) Islands',), ('Cook Islands',), ('Christmas Island',), ('Cayman Islands',), ('Western Sahara',), ('Falkland Islands',), ('Faroe Islands',), ('Gibraltar',), ('Guadeloupe',), ('Greenland',), ('French Guiana',), ('Guam',), ('Hong Kong',), ('Heard Island and McDonald Islands',), ('British Indian Ocean Territory',), ('Macao',), ('Northern Mariana Islands',), ('Montserrat',), ('Martinique',), ('Mayotte',), ('New Caledonia',), ('Norfolk Island',), ('Niue',), ('Pitcairn',), ('Puerto Rico',), ('Palestine',), ('French Polynesia',), ('Réunion',), ('South Georgia and the South Sandwich Islands',), ('Saint Helena',), ('Svalbard and Jan Mayen',), ('Saint Pierre and Miquelon',), ('Turks and Caicos Islands',), ('Tokelau',), ('East Timor',), ('United States Minor Outlying Islands',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Wallis and Futuna',), ('Aruba',), ('Anguilla',), ('Netherlands Antilles',), ('American Samoa',), ('Antarctica',), ('French Southern territories',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#surfacearea ?t1_surfacearea . FILTER(?t1_surfacearea > ?aggregation_t22_surfacearea_163) .       {select (min( ?t22_surfacearea) as ?aggregation_t22_surfacearea_163 ) where { ?t22 a dbo:country . ?t22 dbo:country\#surfacearea ?t22_surfacearea . ?t22 dbo:country\#continent ?t22_continent . FILTER(?t22_continent = 'Europe') .        }    } },"('Aruba',), ('Afghanistan',), ('Angola',), ('Anguilla',), ('Albania',), ('Andorra',), ('Netherlands Antilles',), ('United Arab Emirates',), ('Argentina',), ('Armenia',), ('American Samoa',), ('Antarctica',), ('French Southern territories',), ('Antigua and Barbuda',), ('Australia',), ('Austria',), ('Azerbaijan',), ('Burundi',), ('Belgium',), ('Benin',), ('Burkina Faso',), ('Bangladesh',), ('Bulgaria',), ('Bahrain',), ('Bahamas',), ('Bosnia and Herzegovina',), ('Belarus',), ('Belize',), ('Bermuda',), ('Bolivia',), ('Brazil',), ('Barbados',), ('Brunei',), ('Bhutan',), ('Bouvet Island',), ('Botswana',), ('Central African Republic',), ('Canada',), ('Cocos (Keeling) Islands',), ('Switzerland',), ('Chile',), ('China',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Cook Islands',), ('Colombia',), ('Comoros',), ('Cape Verde',), ('Costa Rica',), ('Cuba',), ('Christmas Island',), ('Cayman Islands',), ('Cyprus',), ('Czech Republic',), ('Germany',), ('Djibouti',), ('Dominica',), ('Denmark',), ('Dominican Republic',), ('Algeria',), ('Ecuador',), ('Egypt',), ('Eritrea',), ('Western Sahara',), ('Spain',), ('Estonia',), ('Ethiopia',), ('Finland',), ('Fiji Islands',), ('Falkland Islands',), ('France',), ('Faroe Islands',), ('Micronesia, Federated States of',), ('Gabon',), ('United Kingdom',), ('Georgia',), ('Ghana',), ('Gibraltar',), ('Guinea',), ('Guadeloupe',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Greece',), ('Grenada',), ('Greenland',), ('Guatemala',), ('French Guiana',), ('Guam',), ('Guyana',), ('Hong Kong',), ('Heard Island and McDonald Islands',), ('Honduras',), ('Croatia',), ('Haiti',), ('Hungary',), ('Indonesia',), ('India',), ('British Indian Ocean Territory',), ('Ireland',), ('Iran',), ('Iraq',), ('Iceland',), ('Israel',), ('Italy',), ('Jamaica',), ('Jordan',), ('Japan',), ('Kazakstan',), ('Kenya',), ('Kyrgyzstan',), ('Cambodia',), ('Kiribati',), ('Saint Kitts and Nevis',), ('South Korea',), ('Kuwait',), ('Laos',), ('Lebanon',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Saint Lucia',), ('Liechtenstein',), ('Sri Lanka',), ('Lesotho',), ('Lithuania',), ('Luxembourg',), ('Latvia',), ('Macao',), ('Morocco',), ('Monaco',), ('Moldova',), ('Madagascar',), ('Maldives',), ('Mexico',), ('Marshall Islands',), ('Macedonia',), ('Mali',), ('Malta',), ('Myanmar',), ('Mongolia',), ('Northern Mariana Islands',), ('Mozambique',), ('Mauritania',), ('Montserrat',), ('Martinique',), ('Mauritius',), ('Malawi',), ('Malaysia',), ('Mayotte',), ('Namibia',), ('New Caledonia',), ('Niger',), ('Norfolk Island',), ('Nigeria',), ('Nicaragua',), ('Niue',), ('Netherlands',), ('Norway',), ('Nepal',), ('Nauru',), ('New Zealand',), ('Oman',), ('Pakistan',), ('Panama',), ('Pitcairn',), ('Peru',), ('Philippines',), ('Palau',), ('Papua New Guinea',), ('Poland',), ('Puerto Rico',), ('North Korea',), ('Portugal',), ('Paraguay',), ('Palestine',), ('French Polynesia',), ('Qatar',), ('Réunion',), ('Romania',), ('Russian Federation',), ('Rwanda',), ('Saudi Arabia',), ('Sudan',), ('Senegal',), ('Singapore',), ('South Georgia and the South Sandwich Islands',), ('Saint Helena',), ('Svalbard and Jan Mayen',), ('Solomon Islands',), ('Sierra Leone',), ('El Salvador',), ('San Marino',), ('Somalia',), ('Saint Pierre and Miquelon',), ('Sao Tome and Principe',), ('Suriname',), ('Slovakia',), ('Slovenia',), ('Sweden',), ('Swaziland',), ('Seychelles',), ('Syria',), ('Turks and Caicos Islands',), ('Chad',), ('Togo',), ('Thailand',), ('Tajikistan',), ('Tokelau',), ('Turkmenistan',), ('East Timor',), ('Tonga',), ('Trinidad and Tobago',), ('Tunisia',), ('Turkey',), ('Tuvalu',), ('Taiwan',), ('Tanzania',), ('Uganda',), ('Ukraine',), ('United States Minor Outlying Islands',), ('Uruguay',), ('United States',), ('Uzbekistan',), ('Saint Vincent and the Grenadines',), ('Venezuela',), ('Virgin Islands, British',), ('Virgin Islands, U.S.',), ('Vietnam',), ('Vanuatu',), ('Wallis and Futuna',), ('Samoa',), ('Yemen',), ('Yugoslavia',), ('South Africa',), ('Zambia',), ('Zimbabwe',)",hard,True,1,
393,world_1,What are the African countries that have a  population less than any country in Asia?,SELECT Name FROM country WHERE Continent  =  'Africa'  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  'Asia'),"('Botswana',), ('Central African Republic',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Comoros',), ('Cape Verde',), ('Djibouti',), ('Algeria',), ('Egypt',), ('Eritrea',), ('Ethiopia',), ('Gabon',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('Kenya',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Lesotho',), ('Morocco',), ('Madagascar',), ('Mali',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Namibia',), ('Niger',), ('Nigeria',), ('Rwanda',), ('Sudan',), ('Senegal',), ('Sierra Leone',), ('Somalia',), ('Sao Tome and Principe',), ('Swaziland',), ('Seychelles',), ('Chad',), ('Togo',), ('Tunisia',), ('Tanzania',), ('Uganda',), ('Angola',), ('South Africa',), ('Burundi',), ('Benin',), ('Burkina Faso',), ('Zambia',), ('Zimbabwe',), ('Western Sahara',), ('British Indian Ocean Territory',), ('Mayotte',), ('Réunion',), ('Saint Helena',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#population ?t1_population . FILTER(?t1_continent = 'Africa' && ?t1_population < ?aggregation_t22_population_87) .       {select (max( ?t22_population) as ?aggregation_t22_population_87 ) where { ?t22 a dbo:country . ?t22 dbo:country\#population ?t22_population . ?t22 dbo:country\#continent ?t22_continent . FILTER(?t22_continent = 'Asia') .        }    } },"('Angola',), ('Burundi',), ('Benin',), ('Burkina Faso',), ('Botswana',), ('Central African Republic',), ('Côte d’Ivoire',), ('Cameroon',), ('Congo, The Democratic Republic of the',), ('Congo',), ('Comoros',), ('Cape Verde',), ('Djibouti',), ('Algeria',), ('Egypt',), ('Eritrea',), ('Western Sahara',), ('Ethiopia',), ('Gabon',), ('Ghana',), ('Guinea',), ('Gambia',), ('Guinea-Bissau',), ('Equatorial Guinea',), ('British Indian Ocean Territory',), ('Kenya',), ('Liberia',), ('Libyan Arab Jamahiriya',), ('Lesotho',), ('Morocco',), ('Madagascar',), ('Mali',), ('Mozambique',), ('Mauritania',), ('Mauritius',), ('Malawi',), ('Mayotte',), ('Namibia',), ('Niger',), ('Nigeria',), ('Réunion',), ('Rwanda',), ('Sudan',), ('Senegal',), ('Saint Helena',), ('Sierra Leone',), ('Somalia',), ('Sao Tome and Principe',), ('Swaziland',), ('Seychelles',), ('Chad',), ('Togo',), ('Tunisia',), ('Tanzania',), ('Uganda',), ('South Africa',), ('Zambia',), ('Zimbabwe',)",extra,True,1,
394,world_1,Which African countries have a smaller population than that of any country in Asia?,SELECT Name FROM country WHERE Continent  =  'Africa'  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  'Asia'),"('Sao Tome and Principe',), ('Seychelles',), ('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#population ?t1_population . FILTER(?t1_continent = 'Africa' && ?t1_population < ?aggregation_t22_population_18) .       {select (min( ?t22_population) as ?aggregation_t22_population_18 ) where { ?t22 a dbo:country . ?t22 dbo:country\#population ?t22_population . ?t22 dbo:country\#continent ?t22_continent . FILTER(?t22_continent = 'Asia') .        }    } },"('British Indian Ocean Territory',), ('Mayotte',), ('Saint Helena',), ('Sao Tome and Principe',), ('Seychelles',)",extra,True,1,
395,world_1,Which Asian countries have a population that is larger than any country in Africa?,SELECT Name FROM country WHERE Continent  =  'Asia'  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  'Africa'),"('China',), ('Indonesia',), ('India',), ('Japan',), ('Pakistan',), ('Bangladesh',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#population ?t1_population . FILTER(?t1_continent = 'Asia' && ?t1_population > ?aggregation_t22_population_137) .       {select (max( ?t22_population) as ?aggregation_t22_population_137 ) where { ?t22 a dbo:country . ?t22 dbo:country\#population ?t22_population . ?t22 dbo:country\#continent ?t22_continent . FILTER(?t22_continent = 'Africa') .        }    } },"('Bangladesh',), ('China',), ('Indonesia',), ('India',), ('Japan',), ('Pakistan',)",extra,True,1,
396,world_1,What are the Asian countries which have a population larger than that of any country in Africa?,SELECT Name FROM country WHERE Continent  =  'Asia'  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  'Africa'),"('Brunei',), ('Bhutan',), ('China',), ('Cyprus',), ('Georgia',), ('Indonesia',), ('India',), ('Iran',), ('Iraq',), ('Israel',), ('Jordan',), ('Japan',), ('Kazakstan',), ('Kyrgyzstan',), ('Cambodia',), ('South Korea',), ('Kuwait',), ('Laos',), ('Lebanon',), ('Sri Lanka',), ('Maldives',), ('Myanmar',), ('Mongolia',), ('Malaysia',), ('Nepal',), ('Oman',), ('Pakistan',), ('Philippines',), ('North Korea',), ('Qatar',), ('Saudi Arabia',), ('Singapore',), ('Syria',), ('Thailand',), ('Tajikistan',), ('Turkmenistan',), ('Turkey',), ('Taiwan',), ('Uzbekistan',), ('Vietnam',), ('Yemen',), ('Afghanistan',), ('United Arab Emirates',), ('Armenia',), ('Azerbaijan',), ('Bangladesh',), ('Bahrain',), ('Hong Kong',), ('Macao',), ('Palestine',), ('East Timor',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#population ?t1_population . FILTER(?t1_continent = 'Asia' && ?t1_population > ?aggregation_t22_population_57) .       {select (min( ?t22_population) as ?aggregation_t22_population_57 ) where { ?t22 a dbo:country . ?t22 dbo:country\#population ?t22_population . ?t22 dbo:country\#continent ?t22_continent . FILTER(?t22_continent = 'Africa') .        }    } },"('Afghanistan',), ('United Arab Emirates',), ('Armenia',), ('Azerbaijan',), ('Bangladesh',), ('Bahrain',), ('Brunei',), ('Bhutan',), ('China',), ('Cyprus',), ('Georgia',), ('Hong Kong',), ('Indonesia',), ('India',), ('Iran',), ('Iraq',), ('Israel',), ('Jordan',), ('Japan',), ('Kazakstan',), ('Kyrgyzstan',), ('Cambodia',), ('South Korea',), ('Kuwait',), ('Laos',), ('Lebanon',), ('Sri Lanka',), ('Macao',), ('Maldives',), ('Myanmar',), ('Mongolia',), ('Malaysia',), ('Nepal',), ('Oman',), ('Pakistan',), ('Philippines',), ('North Korea',), ('Palestine',), ('Qatar',), ('Saudi Arabia',), ('Singapore',), ('Syria',), ('Thailand',), ('Tajikistan',), ('Turkmenistan',), ('East Timor',), ('Turkey',), ('Taiwan',), ('Uzbekistan',), ('Vietnam',), ('Yemen',)",extra,True,1,
397,world_1,What are the country codes for countries that do not speak English?,SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English',"('MDG',), ('PSE',), ('COG',), ('CAF',), ('GMB',), ('SOM',), ('URY',), ('BEL',), ('MRT',), ('BTN',), ('CZE',), ('ERI',), ('SVN',), ('LTU',), ('CIV',), ('PHL',), ('ESP',), ('TUN',), ('GHA',), ('SGP',), ('JAM',), ('BLR',), ('GUF',), ('TJK',), ('NGA',), ('MUS',), ('LBY',), ('CRI',), ('TKM',), ('ROM',), ('AGO',), ('DMA',), ('BOL',), ('GLP',), ('MWI',), ('IRQ',), ('KHM',), ('IND',), ('EGY',), ('CMR',), ('CHL',), ('GTM',), ('GEO',), ('ARM',), ('RUS',), ('NAM',), ('LVA',), ('BGD',), ('COD',), ('KAZ',), ('FIN',), ('IRN',), ('GRD',), ('PAK',), ('ALB',), ('PAN',), ('DZA',), ('BDI',), ('COL',), ('PRK',), ('ARE',), ('PYF',), ('FRA',), ('CHN',), ('LKA',), ('BWA',), ('MKD',), ('WLF',), ('PCN',), ('GNQ',), ('CHE',), ('KOR',), ('PER',), ('NCL',), ('KIR',), ('TGO',), ('REU',), ('YEM',), ('HND',), ('SAU',), ('NER',), ('KEN',), ('SPM',), ('COM',), ('UZB',), ('TCD',), ('PRY',), ('VAT',), ('TZA',), ('NLD',), ('VEN',), ('CUB',), ('HUN',), ('AUT',), ('ISR',), ('MMR',), ('EST',), ('CPV',), ('FSM',), ('VNM',), ('FJI',), ('LBN',), ('DJI',), ('SEN',), ('SUR',), ('OMN',), ('TWN',), ('HRV',), ('GRC',), ('LBR',), ('GNB',), ('MYT',), ('HTI',), ('NIC',), ('LAO',), ('YUG',), ('TMP',), ('DOM',), ('LIE',), ('PRT',), ('MTQ',), ('SLB',), ('AZE',), ('FRO',), ('ZMB',), ('MDA',), ('AND',), ('NPL',), ('SWZ',), ('GUY',), ('GRL',), ('BGR',), ('ARG',), ('LUX',), ('BIH',), ('BHS',), ('PNG',), ('BFA',), ('KGZ',), ('STP',), ('UKR',), ('THA',), ('JOR',), ('GIN',), ('MLI',), ('POL',), ('TUR',), ('SWE',), ('SVK',), ('DEU',), ('MOZ',), ('IDN',), ('CYP',), ('SJM',), ('SLV',), ('SLE',), ('GAB',), ('UGA',), ('MAR',), ('SYR',), ('ESH',), ('BRA',), ('AFG',), ('SDN',), ('RWA',), ('ECU',), ('ITA',), ('BEN',), ('MNG',), ('SMR',), ('MEX',), ('QAT',), ('ETH',)",SELECT distinct?col1 WHERE { { select (?t1_countrycode as ?col1) where { ?t1 a dbo:countrylanguage . ?t1 dbo:countrylanguage\#countrycode ?t1_countrycode .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#countrycode ?t2_countrycode . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } },"('AFG',), ('AGO',), ('ALB',), ('AND',), ('ARE',), ('ARG',), ('ARM',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHS',), ('BIH',), ('BLR',), ('BOL',), ('BRA',), ('BTN',), ('BWA',), ('CAF',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GEO',), ('GHA',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUY',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRN',), ('IRQ',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KOR',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LIE',), ('LKA',), ('LTU',), ('LUX',), ('LVA',), ('MAR',), ('MDA',), ('MDG',), ('MEX',), ('MKD',), ('MLI',), ('MMR',), ('MNG',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NLD',), ('NPL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PNG',), ('POL',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKM',), ('TMP',), ('TUN',), ('TUR',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('UZB',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YEM',), ('YUG',), ('ZMB',)",hard,True,1,
398,world_1,What are the country codes of countries where people use languages other than English?,SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English',"('MDG',), ('PLW',), ('PSE',), ('COG',), ('CAF',), ('GMB',), ('SOM',), ('HKG',), ('URY',), ('BEL',), ('MRT',), ('BTN',), ('CZE',), ('ERI',), ('SVN',), ('LTU',), ('CIV',), ('PHL',), ('MLT',), ('GUM',), ('ESP',), ('TUN',), ('GHA',), ('SGP',), ('JAM',), ('BLR',), ('BRB',), ('GUF',), ('MYS',), ('TJK',), ('VIR',), ('NGA',), ('MUS',), ('LBY',), ('ATG',), ('TON',), ('CRI',), ('ZWE',), ('TKM',), ('MDV',), ('NOR',), ('ROM',), ('DNK',), ('BLZ',), ('AGO',), ('DMA',), ('BOL',), ('GLP',), ('MWI',), ('IRQ',), ('WSM',), ('KHM',), ('IND',), ('EGY',), ('CMR',), ('CHL',), ('GTM',), ('GEO',), ('ARM',), ('RUS',), ('NAM',), ('MAC',), ('LVA',), ('BGD',), ('COD',), ('KAZ',), ('FIN',), ('IRN',), ('SYC',), ('GRD',), ('PAK',), ('ALB',), ('PAN',), ('BRN',), ('NIU',), ('DZA',), ('BDI',), ('COL',), ('PRK',), ('ARE',), ('AUS',), ('PYF',), ('FRA',), ('CHN',), ('ZAF',), ('TTO',), ('LKA',), ('BWA',), ('MKD',), ('WLF',), ('PCN',), ('GNQ',), ('CHE',), ('KOR',), ('PER',), ('NCL',), ('MCO',), ('KIR',), ('TGO',), ('REU',), ('YEM',), ('HND',), ('SAU',), ('NER',), ('KEN',), ('JPN',), ('SPM',), ('COM',), ('UZB',), ('TCD',), ('PRY',), ('NRU',), ('ASM',), ('VAT',), ('TZA',), ('NLD',), ('VEN',), ('CUB',), ('HUN',), ('AUT',), ('IRL',), ('GIB',), ('ISR',), ('GBR',), ('MMR',), ('EST',), ('KNA',), ('CPV',), ('FSM',), ('VNM',), ('FJI',), ('MHL',), ('LBN',), ('CCK',), ('VUT',), ('DJI',), ('SEN',), ('CXR',), ('SUR',), ('OMN',), ('TWN',), ('HRV',), ('GRC',), ('LBR',), ('GNB',), ('MYT',), ('HTI',), ('NIC',), ('LAO',), ('YUG',), ('BHR',), ('TMP',), ('DOM',), ('LIE',), ('ABW',), ('PRT',), ('MTQ',), ('SLB',), ('AZE',), ('FRO',), ('ZMB',), ('MDA',), ('AND',), ('LSO',), ('NPL',), ('SWZ',), ('GUY',), ('GRL',), ('BGR',), ('ARG',), ('USA',), ('LUX',), ('VCT',), ('BIH',), ('TUV',), ('BHS',), ('PNG',), ('BFA',), ('KGZ',), ('COK',), ('STP',), ('NZL',), ('UKR',), ('THA',), ('JOR',), ('KWT',), ('GIN',), ('MLI',), ('POL',), ('TUR',), ('SWE',), ('SVK',), ('DEU',), ('MOZ',), ('IDN',), ('CYP',), ('ANT',), ('SJM',), ('SLV',), ('SLE',), ('GAB',), ('UGA',), ('MAR',), ('SYR',), ('ESH',), ('CAN',), ('TKL',), ('BRA',), ('AFG',), ('SDN',), ('RWA',), ('ISL',), ('ECU',), ('PRI',), ('MNP',), ('ITA',), ('BEN',), ('LCA',), ('MNG',), ('SMR',), ('MEX',), ('QAT',), ('ETH',)",select distinct ?t1_countrycode where { ?t1 a dbo:countrylanguage . ?t1 dbo:countrylanguage\#countrycode ?t1_countrycode . ?t1 dbo:countrylanguage\#language ?t1_language . FILTER(?t1_language != 'English') .        },"('ABW',), ('AFG',), ('AGO',), ('ALB',), ('AND',), ('ANT',), ('ARE',), ('ARG',), ('ARM',), ('ASM',), ('ATG',), ('AUS',), ('AUT',), ('AZE',), ('BDI',), ('BEL',), ('BEN',), ('BFA',), ('BGD',), ('BGR',), ('BHR',), ('BHS',), ('BIH',), ('BLR',), ('BLZ',), ('BOL',), ('BRA',), ('BRB',), ('BRN',), ('BTN',), ('BWA',), ('CAF',), ('CAN',), ('CCK',), ('CHE',), ('CHL',), ('CHN',), ('CIV',), ('CMR',), ('COD',), ('COG',), ('COK',), ('COL',), ('COM',), ('CPV',), ('CRI',), ('CUB',), ('CXR',), ('CYP',), ('CZE',), ('DEU',), ('DJI',), ('DMA',), ('DNK',), ('DOM',), ('DZA',), ('ECU',), ('EGY',), ('ERI',), ('ESH',), ('ESP',), ('EST',), ('ETH',), ('FIN',), ('FJI',), ('FRA',), ('FRO',), ('FSM',), ('GAB',), ('GBR',), ('GEO',), ('GHA',), ('GIB',), ('GIN',), ('GLP',), ('GMB',), ('GNB',), ('GNQ',), ('GRC',), ('GRD',), ('GRL',), ('GTM',), ('GUF',), ('GUM',), ('GUY',), ('HKG',), ('HND',), ('HRV',), ('HTI',), ('HUN',), ('IDN',), ('IND',), ('IRL',), ('IRN',), ('IRQ',), ('ISL',), ('ISR',), ('ITA',), ('JAM',), ('JOR',), ('JPN',), ('KAZ',), ('KEN',), ('KGZ',), ('KHM',), ('KIR',), ('KNA',), ('KOR',), ('KWT',), ('LAO',), ('LBN',), ('LBR',), ('LBY',), ('LCA',), ('LIE',), ('LKA',), ('LSO',), ('LTU',), ('LUX',), ('LVA',), ('MAC',), ('MAR',), ('MCO',), ('MDA',), ('MDG',), ('MDV',), ('MEX',), ('MHL',), ('MKD',), ('MLI',), ('MLT',), ('MMR',), ('MNG',), ('MNP',), ('MOZ',), ('MRT',), ('MTQ',), ('MUS',), ('MWI',), ('MYS',), ('MYT',), ('NAM',), ('NCL',), ('NER',), ('NGA',), ('NIC',), ('NIU',), ('NLD',), ('NOR',), ('NPL',), ('NRU',), ('NZL',), ('OMN',), ('PAK',), ('PAN',), ('PCN',), ('PER',), ('PHL',), ('PLW',), ('PNG',), ('POL',), ('PRI',), ('PRK',), ('PRT',), ('PRY',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('ROM',), ('RUS',), ('RWA',), ('SAU',), ('SDN',), ('SEN',), ('SGP',), ('SJM',), ('SLB',), ('SLE',), ('SLV',), ('SMR',), ('SOM',), ('SPM',), ('STP',), ('SUR',), ('SVK',), ('SVN',), ('SWE',), ('SWZ',), ('SYC',), ('SYR',), ('TCD',), ('TGO',), ('THA',), ('TJK',), ('TKL',), ('TKM',), ('TMP',), ('TON',), ('TTO',), ('TUN',), ('TUR',), ('TUV',), ('TWN',), ('TZA',), ('UGA',), ('UKR',), ('URY',), ('USA',), ('UZB',), ('VAT',), ('VCT',), ('VEN',), ('VIR',), ('VNM',), ('VUT',), ('WLF',), ('WSM',), ('YEM',), ('YUG',), ('ZAF',), ('ZMB',), ('ZWE',)",easy,True,1,
399,world_1,What are the codes of the countries that do not speak English and whose government forms are not Republic?,SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English',"('MDG',), ('VAT',), ('NLD',), ('VEN',), ('PSE',), ('CUB',), ('AUT',), ('IOT',), ('BEL',), ('BTN',), ('FSM',), ('VNM',), ('ESP',), ('JAM',), ('OMN',), ('HMD',), ('SGS',), ('ATF',), ('GUF',), ('MYT',), ('YUG',), ('TMP',), ('NGA',), ('LIE',), ('LBY',), ('MTQ',), ('SLB',), ('AZE',), ('FRO',), ('BVT',), ('AND',), ('GLP',), ('ATA',), ('KHM',), ('NPL',), ('IND',), ('SWZ',), ('GRL',), ('ARG',), ('LUX',), ('RUS',), ('BIH',), ('BHS',), ('IRN',), ('PNG',), ('GRD',), ('THA',), ('JOR',), ('SWE',), ('PRK',), ('DEU',), ('SJM',), ('ARE',), ('PYF',), ('CHN',), ('MAR',), ('ESH',), ('BRA',), ('WLF',), ('PCN',), ('AFG',), ('SDN',), ('CHE',), ('NCL',), ('REU',), ('SAU',), ('SPM',), ('MEX',), ('QAT',)",SELECT distinct?col1 WHERE { { select (?t1_code as ?col1) where { ?t1 a dbo:country . ?t1 dbo:country\#code ?t1_code . ?t1 dbo:country\#governmentform ?t1_governmentform . FILTER(?t1_governmentform != 'Republic') .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#countrycode ?t2_countrycode . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } },"('AFG',), ('AND',), ('ARE',), ('ARG',), ('ATA',), ('ATF',), ('AUT',), ('AZE',), ('BEL',), ('BHS',), ('BIH',), ('BRA',), ('BTN',), ('BVT',), ('CHE',), ('CHN',), ('CUB',), ('DEU',), ('ESH',), ('ESP',), ('FRO',), ('FSM',), ('GLP',), ('GRD',), ('GRL',), ('GUF',), ('HMD',), ('IND',), ('IOT',), ('IRN',), ('JAM',), ('JOR',), ('KHM',), ('LBY',), ('LIE',), ('LUX',), ('MAR',), ('MDG',), ('MEX',), ('MTQ',), ('MYT',), ('NCL',), ('NGA',), ('NLD',), ('NPL',), ('OMN',), ('PCN',), ('PNG',), ('PRK',), ('PSE',), ('PYF',), ('QAT',), ('REU',), ('RUS',), ('SAU',), ('SDN',), ('SGS',), ('SJM',), ('SLB',), ('SPM',), ('SWE',), ('SWZ',), ('THA',), ('TMP',), ('VAT',), ('VEN',), ('VNM',), ('WLF',), ('YUG',)",hard,True,1,
400,world_1,Which cities are in European countries where English is not the official language?,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"('Würzburg',), ('Nantes',), ('Novouralsk',), ('Tarragona',), ('Alkmaar',), ('Jessentuki',), ('Tambov',), ('Mahatškala',), ('Rennes',), ('Zenica',), ('Trondheim',), ('Bialystok',), ('Nancy',), ('Gomel',), ('Lyon',), ('Vicenza',), ('Molodetšno',), ('Kostjantynivka',), ('Apeldoorn',), ('Sotši',), ('Aalborg',), ('Kansk',), ('Himki',), ('San Marino',), ('Ancona',), ('Vladikavkaz',), ('Berdjansk',), ('Noginsk',), ('Craiova',), ('Dordrecht',), ('Vladivostok',), ('Galati',), ('Andorra la Vella',), ('Syrakusa',), ('Salavat',), ('Pultava [Poltava]',), ('Toulouse',), ('Baia Mare',), ('Jenakijeve',), ('Tulcea',), ('Köln',), ('Szeged',), ('Perugia',), ('Saransk',), ('Neftekamsk',), ('Reutlingen',), ('Donostia-San Sebastián',), ('Lida',), ('Moscow',), ('Lünen',), ('Zwolle',), ('Düren',), ('Smolensk',), ('Cluj-Napoca',), ('Nice',), ('Dos Hermanas',), ('Lugansk',), ('Prešov',), ('Orehovo-Zujevo',), ('Schwerin',), ('Ludwigshafen am Rhein',), ('Jerez de la Frontera',), ('Kraków',), ('Târgoviste',), ('Buzau',), ('Chisinau',), ('Voronez',), ('Lahti',), ('Tilburg',), ('Mukatševe',), ('Oberhausen',), ('Oslo',), ('Wien',), ('Antwerpen',), ('Bari',), ('Haarlemmermeer',), ('Tychy',), ('Petroskoi',), ('Santa Cruz de Tenerife',), ('Habarovsk',), ('Juzno-Sahalinsk',), ('Alcalá de Henares',), ('Serpuhov',), ('Bern',), ('Brjansk',), ('Prizren',), ('Novorossijsk',), ('Salamanca',), ('Piacenza',), ('Nîmes',), ('St-Étienne',), ('Lublin',), ('Arzamas',), ('Lille',), ('Sergijev Posad',), ('Klagenfurt',), ('Santander',), ('Salzburg',), ('Serravalle',), ('Delft',), ('Huelva',), ('Kostroma',), ('Tarnów',), ('Norrköping',), ('Olsztyn',), ('Volgograd',), ('Padova',), ('Oulu',), ('Oktjabrski',), ('Sjeverodonetsk',), ('Peristerion',), ('Kiseljovsk',), ('Székesfehérvár',), ('Kecskemét',), ('Bacau',), ('Catanzaro',), ('Novotroitsk',), ('Derbent',), ('Tours',), ('Burgos',), ('Perm',), ('Lecce',), ('Bielefeld',), ('Santa Coloma de Gramenet',), ('Bender (Tîghina)',), ('Ploiesti',), ('Surgut',), ('Pisa',), ('Brescia',), ('Ceské Budejovice',), ('Usolje-Sibirskoje',), ('Gera',), ('Bucuresti',), ('Besançon',), ('Pamplona [Iruña]',), ('Chemnitz',), ('Suceava',), ('Trieste',), ('Penza',), ('Gelsenkirchen',), ('Brovary',), ('Chorzów',), ('Modena',), ('Novopolotsk',), ('Tšeljabinsk',), ('Coímbra',), ('Panevezys',), ('Murom',), ('Grenoble',), ('Ede',), ('Uman',), ('Athenai',), ('Iasi',), ('Maikop',), ('Wiesbaden',), ('Lysytšansk',), ('Kemerovo',), ('Oldenburg',), ('Astrahan',), ('Tobolsk',), ('Jakutsk',), ('Šahty',), ('Grozny',), ('Puškin',), ('Vigo',), ('Verona',), ('Latina',), ('Iserlohn',), ('Palermo',), ('Zaragoza',), ('Dijon',), ('Ourense (Orense)',), ('Zürich',), ('Glazov',), ('Firenze',), ('Ljubertsy',), ('Bydgoszcz',), ('Kislovodsk',), ('Turku [Åbo]',), ('Dnipropetrovsk',), ('Gdansk',), ('Rybinsk',), ('Orsk',), ('Taganrog',), ('Kaluga',), ('Balakovo',), ('Focsani',), ('Amiens',), ('Monza',), ('Bijsk',), ('Stahanov',), ('Reims',), ('Atšinsk',), ('Kamensk-Uralski',), ('Prato',), ('Gütersloh',), ('Alicante [Alacant]',), ('Ivano-Frankivsk',), ('Bruxelles [Brussel]',), ('Tourcoing',), ('Heerlen',), ('Breda',), ('Tšerkessk',), ('Mariupol',), ('Klin',), ('Andria',), ('Groningen',), ('Stavanger',), ('Varna',), ('Barletta',), ('Granada',), ('Forlì',), ('Salerno',), ('Neftejugansk',), ('Rjazan',), ('Marbella',), ('Magnitogorsk',), ('Gävle',), ('Gent',), ('Belgorod',), ('Genova',), ('Jaén',), ('Braunschweig',), ('Vorkuta',), ('Leganés',), ('Valladolid',), ('Arad',), ('Nürnberg',), ('Torino',), ('Rouen',), ('Bataisk',), ('Angers',), ('Paderborn',), ('Freiburg im Breisgau',), ('Erfurt',), ('Monte-Carlo',), ('Hildesheim',), ('Málaga',), ('Bugulma',), ('Staryi Oskol',), ('Borås',), ('Toljatti',), ('Bonn',), ('Rimini',), ('Eindhoven',), ('Szczecin',), ('Altševsk',), ('Ruda Slaska',), ('Izevsk',), ('Plzen',), ('Bratislava',), ('Liège',), ('Timisoara',), ('Toulon',), ('Città del Vaticano',), ('Tjumen',), ('Torun',), ('Utrecht',), ('Odense',), ('Perpignan',), ('Elblag',), ('Banja Luka',), ('Fuenlabrada',), ('Naltšik',), ('Jevpatorija',), ('Donetsk',), ('Örebro',), ('Jena',), ('Halle/Saale',), ('Plovdiv',), ('Clermont-Ferrand',), ('Bolzano',), ('Nizni Novgorod',), ('Dresden',), ('Tallinn',), ('Subotica',), ('Priština',), ('Zaanstad',), ('Ust-Ilimsk',), ('Offenbach am Main',), ('Zukovski',), ('Ivanovo',), ('Blagoveštšensk',), ('Kirov',), ('Arezzo',), ('Vitoria-Gasteiz',), ('Tartu',), ('Ulan-Ude',), ('Gorzów Wielkopolski',), ('Osijek',), ('Udine',), ('Innsbruck',), ('Mogiljov',), ('Koblenz',), ('Almere',), ('Petropavlovsk-Kamtšatski',), ('Frederiksberg',), ('Serov',), ('Korolev',), ('Berdytšiv',), ('Pervouralsk',), ('Uljanovsk',), ('Limoges',), ('Schaerbeek',), ('Kryvyi Rig',), ('Uppsala',), ('Tomsk',), ('Linköping',), ('Soligorsk',), ('Dobric',), ('Tšernivtsi',), ('København',), ('Braila',), ('Katowice',), ('Giugliano in Campania',), ('Heidelberg',), ('Hamburg',), ('Ústí nad Labem',), ('Gliwice',), ('Villeurbanne',), ('Joškar-Ola',), ('Gothenburg [Göteborg]',), ('Brugge',), ('Sundsvall',), ('Sterlitamak',), ('Mataró',), ('Baranovitši',), ('Novokuibyševsk',), ('Parma',), ('Herson',), ('Sassari',), ('Vladimir',), ('Pinsk',), ('Remscheid',), ('Madrid',), ('Kirovograd',), ('Czestochowa',), ('Wolfsburg',), ('Osnabrück',), ('Cagliari',), ('Cádiz',), ('Zelenodolsk',), ('Zoetermeer',), ('Bordeaux',), ('Syzran',), ('Debrecen',), ('Velbert',), ('Dniprodzerzynsk',), ('St Petersburg',), ('Daugavpils',), ('Jastrzebie-Zdrój',), ('Balašov',), ('Tšaikovski',), ('Rostov-na-Donu',), ('Rzeszów',), ('Sabadell',), ('Drobeta-Turnu Severin',), ('Algeciras',), ('Haag',), ('Zeleznogorsk',), ('Nizni Tagil',), ('Braga',), ('Vaduz',), ('Murcia',), ('Taranto',), ('Terrassa',), ('Sliven',), ('Marl',), ('Essen',), ('Solikamsk',), ('Plock',), ('Kaunas',), ('Melitopol',), ('Tšita',), ('Miskolc',), ('Zabrze',), ('Stuttgart',), ('Konotop',), ('Schaan',), ('Siegen',), ('Hagen',), ('Alessandria',), ('Barakaldo',), ('A Coruña (La Coruña)',), ('Kassel',), ('Leipzig',), ('Mytištši',), ('Wroclaw',), ('Györ',), ('Kragujevac',), ('Dimitrovgrad',), ('Grodno',), ('Uhta',), ('Orša',), ('Roma',), ('Boulogne-Billancourt',), ('Sevilla',), ('Kamyšin',), ('Walbrzych',), ('Votkinsk',), ('Balašiha',), ('Krasnyi Lutš',), ('Novi Sad',), ('Volgodonsk',), ('Šostka',), ('Izmajil',), ('Košice',), ('Rijeka',), ('Munich [München]',), ('Pescara',), ('Trier',), ('Tula',), ('Kamjanets-Podilskyi',), ('Pesaro',), ('Charleroi',), ('Budapest',), ('Zagreb',), ('Elektrostal',), ('Radom',), ('Stara Zagora',), ('Niznevartovsk',), ('Grudziadz',), ('Kyzyl',), ('Pjatigorsk',), ('Ulm',), ('Stockholm',), ('Tver',), ('Karlsruhe',), ('Krasnogorsk',), ('Riga',), ('Le Havre',), ('Leiden',), ('Berezniki',), ('Jelets',), ('Olomouc',), ('Jekaterinburg',), ('Novotšeboksarsk',), ('Pforzheim',), ('Angarsk',), ('Neuss',), ('Palma de Mallorca',), ('Zielona Góra',), ('Trento',), ('Beograd',), ('Göttingen',), ('Mitšurinsk',), ('Vinnytsja',), ('Murmansk',), ('Tórshavn',), ('Vitebsk',), ('Arkangeli',), ('Kazan',), ('Ferrara',), ('Prokopjevsk',), ('Salzgitter',), ('Novomoskovsk',), ('Botosani',), ('Geneve',), ('Odintsovo',), ('Amersfoort',), ('Ljubljana',), ('Berlin',), ('Reggio di Calabria',), ('Kurgan',), ('Witten',), ('Livorno',), ('Kursk',), ('Râmnicu Vâlcea',), ('Odesa',), ('Samara',), ('Umeå',), ('Bottrop',), ('Terni',), ('Namur',), ('Nojabrsk',), ('Simferopol',), ('Mainz',), ('Kuznetsk',), ('Aix-en-Provence',), ('Dabrowa Górnicza',), ('´s-Hertogenbosch',), ('Arnhem',), ('[San Cristóbal de] la Laguna',), ('Patras',), ('Regensburg',), ('Klaipeda',), ('Barcelona',), ('Nevinnomyssk',), ('Bremen',), ('Pardubice',), ('Resita',), ('Bergen',), ('Krementšuk',), ('Cartagena',), ('Tšeboksary',), ('Kirovo-Tšepetsk',), ('Harkova [Harkiv]',), ('Magadan',), ('Oleksandrija',), ('Lübeck',), ('Šiauliai',), ('Engels',), ('Nabereznyje Tšelny',), ('Albacete',), ('Minsk',), ('Bærum',), ('Catania',), ('Santiago de Compostela',), ('L´Hospitalet de Llobregat',), ('Kyiv',), ('Niš',), ('Magdeburg',), ('Reykjavík',), ('Obninsk',), ('Gijón',), ('Barnaul',), ('Novosibirsk',), ('Novara',), ('Omsk',), ('Nikopol',), ('Rotterdam',), ('Krasnojarsk',), ('Tiraspol',), ('Torrejón de Ardoz',), ('Kramatorsk',), ('Ussurijsk',), ('Lutsk',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Longyearbyen',), ('Sumy',), ('La Spezia',), ('Kallithea',), ('Šumen',), ('Graz',), ('Solingen',), ('Sevastopol',), ('Bergisch Gladbach',), ('Amsterdam',), ('Heilbronn',), ('Liberec',), ('Herakleion',), ('Novošahtinsk',), ('Castellón de la Plana [Castell',), ('Valencia',), ('Severodvinsk',), ('Bratsk',), ('Amadora',), ('Monaco-Ville',), ('Haarlem',), ('Brindisi',), ('Seversk',), ('Argenteuil',), ('Rybnik',), ('Bytom',), ('Lausanne',), ('Ingolstadt',), ('Pitesti',), ('León',), ('Hmelnytskyi',), ('Piatra Neamt',), ('Satu Mare',), ('Split',), ('Cottbus',), ('Elista',), ('Brasov',), ('Porto',), ('Novotšerkassk',), ('Târgu Jiu',), ('Kinešma',), ('Rubtsovsk',), ('Ufa',), ('Aachen',), ('Irkutsk',), ('Ravenna',), ('Metz',), ('Warszawa',), ('Münster',), ('Vilnius',), ('Thessaloniki',), ('Maastricht',), ('Cesena',), ('Venezia',), ('Duisburg',), ('Uzgorod',), ('Dzerzinsk',), ('Bremerhaven',), ('Orléans',), ('Novyi Urengoi',), ('Zelenograd',), ('Oviedo',), ('Brno',), ('Borisov',), ('Linz',), ('Zwickau',), ('Potsdam',), ('Bochum',), ('Augsburg',), ('Almería',), ('Fürth',), ('Vantaa',), ('Torre del Greco',), ('Messina',), ('Århus',), ('Móstoles',), ('Badalona',), ('Constanta',), ('Badajoz',), ('Lleida (Lérida)',), ('Nijmegen',), ('Veliki Novgorod',), ('Montpellier',), ('Kaiserslautern',), ('Stavropol',), ('Zlatoust',), ('Leverkusen',), ('Kiel',), ('Marseille',), ('Espoo',), ('Herne',), ('Montreuil',), ('Emmen',), ('Kaliningrad',), ('Strasbourg',), ('Sosnowiec',), ('Bergamo',), ('Mykolajiv',), ('Mulhouse',), ('Slovjansk',), ('Pihkova',), ('Legnica',), ('Komsomolsk-na-Amure',), ('Kielce',), ('Mannheim',), ('Tampere',), ('Bologna',), ('Dortmund',), ('Elche [Elx]',), ('Lviv',), ('Poznan',), ('Sofija',), ('Orenburg',), ('Erlangen',), ('Kolpino',), ('Basel',), ('Jelenia Góra',), ('Lisboa',), ('Córdoba',), ('Zeleznodoroznyi',), ('Jaworzno',), ('Pireus',), ('Saratov',), ('Lund',), ('Gorlivka',), ('Alcorcón',), ('Miass',), ('Bila Tserkva',), ('Syktyvkar',), ('Zytomyr',), ('Abakan',), ('Almetjevsk',), ('Tšerepovets',), ('Kolomna',), ('Las Palmas de Gran Canaria',), ('Gdynia',), ('Tirana',), ('Krasnodar',), ('Štšolkovo',), ('Bielsko-Biala',), ('Mozyr',), ('Brest',), ('Mönchengladbach',), ('Düsseldorf',), ('Opole',), ('Larisa',), ('Milano',), ('Darmstadt',), ('Wuppertal',), ('Tšernigiv',), ('Paris',), ('Kovrov',), ('Makijivka',), ('Caen',), ('Pécs',), ('Frankfurt am Main',), ('Skopje',), ('Getafe',), ('Pavlograd',), ('Bilbao',), ('Nyiregyháza',), ('Enschede',), ('Rivne',), ('Leninsk-Kuznetski',), ('Ratingen',), ('Liepaja',), ('Slupsk',), ('Sarapul',), ('Västerås',), ('Zaporizzja',), ('Recklinghausen',), ('Norilsk',), ('Tšerkasy',), ('Saarbrücken',), ('Nahodka',), ('Orjol',), ('Podgorica',), ('Praha',), ('Novokuznetsk',), ('Mons',), ('Malmö',), ('Podolsk',), ('Mezduretšensk',), ('Krefeld',), ('Târgu Mures',), ('Moers',), ('Balti',), ('Ruse',), ('Bobruisk',), ('Le Mans',), ('Volzski',), ('Velikije Luki',), ('Niznekamsk',), ('Sarajevo',), ('Oradea',), ('Armavir',), ('Hradec Králové',), ('Napoli',), ('Mülheim an der Ruhr',), ('Esslingen am Neckar',), ('Kalisz',), ('Helsingborg',), ('Jönköping',), ('Pleven',), ('Anzero-Sudzensk',), ('Hannover',), ('Lipetsk',), ('Jaroslavl',), ('Hamm',), ('Kertš',), ('Sibiu',), ('Helsinki [Helsingfors]',), ('Vologda',), ('Maribor',), ('Koszalin',), ('Burgas',), ('Reggio nell´ Emilia',), ('Ostrava',), ('Roubaix',), ('Rostock',), ('Foggia',), ('Ternopil',), ('Wloclawek',), ('Lódz',), ('Logroño',)",select distinct ?t1_name where { ?t1 a dbo:city . ?t2 a dbo:country . ?t1 dbo:city\#ref-countrycode ?t2 .  ?t1 dbo:city\#name ?t1_name . ?t2 dbo:country\#continent ?t2_continent . ?t2 dbo:country\#name ?t2_name . FILTER(?t2_continent = 'Europe') .     Filter not exists {{select ?t23_name where { ?t23 a dbo:country . ?t24 a dbo:countrylanguage . ?t24 dbo:countrylanguage\#ref-countrycode ?t23 .  ?t23 dbo:country\#name ?t23_name . ?t24 dbo:countrylanguage\#isofficial ?t24_isofficial . ?t24 dbo:countrylanguage\#language ?t24_language . FILTER(?t24_isofficial = 'T' && ?t24_language = 'English') .        }    } FILTER (?t2_name in (?t23_name))}  },"('Tirana',), ('Andorra la Vella',), ('Wien',), ('Graz',), ('Linz',), ('Salzburg',), ('Innsbruck',), ('Klagenfurt',), ('Antwerpen',), ('Gent',), ('Charleroi',), ('Liège',), ('Bruxelles [Brussel]',), ('Brugge',), ('Schaerbeek',), ('Namur',), ('Mons',), ('Sofija',), ('Plovdiv',), ('Varna',), ('Burgas',), ('Ruse',), ('Stara Zagora',), ('Pleven',), ('Sliven',), ('Dobric',), ('Šumen',), ('Sarajevo',), ('Banja Luka',), ('Zenica',), ('Minsk',), ('Gomel',), ('Mogiljov',), ('Vitebsk',), ('Grodno',), ('Brest',), ('Bobruisk',), ('Baranovitši',), ('Borisov',), ('Pinsk',), ('Orša',), ('Mozyr',), ('Novopolotsk',), ('Lida',), ('Soligorsk',), ('Molodetšno',), ('Zürich',), ('Geneve',), ('Basel',), ('Bern',), ('Lausanne',), ('Praha',), ('Brno',), ('Ostrava',), ('Plzen',), ('Olomouc',), ('Liberec',), ('Ceské Budejovice',), ('Hradec Králové',), ('Ústí nad Labem',), ('Pardubice',), ('Berlin',), ('Hamburg',), ('Munich [München]',), ('Köln',), ('Frankfurt am Main',), ('Essen',), ('Dortmund',), ('Stuttgart',), ('Düsseldorf',), ('Bremen',), ('Duisburg',), ('Hannover',), ('Leipzig',), ('Nürnberg',), ('Dresden',), ('Bochum',), ('Wuppertal',), ('Bielefeld',), ('Mannheim',), ('Bonn',), ('Gelsenkirchen',), ('Karlsruhe',), ('Wiesbaden',), ('Münster',), ('Mönchengladbach',), ('Chemnitz',), ('Augsburg',), ('Halle/Saale',), ('Braunschweig',), ('Aachen',), ('Krefeld',), ('Magdeburg',), ('Kiel',), ('Oberhausen',), ('Lübeck',), ('Hagen',), ('Rostock',), ('Freiburg im Breisgau',), ('Erfurt',), ('Kassel',), ('Saarbrücken',), ('Mainz',), ('Hamm',), ('Herne',), ('Mülheim an der Ruhr',), ('Solingen',), ('Osnabrück',), ('Ludwigshafen am Rhein',), ('Leverkusen',), ('Oldenburg',), ('Neuss',), ('Heidelberg',), ('Darmstadt',), ('Paderborn',), ('Potsdam',), ('Würzburg',), ('Regensburg',), ('Recklinghausen',), ('Göttingen',), ('Bremerhaven',), ('Wolfsburg',), ('Bottrop',), ('Remscheid',), ('Heilbronn',), ('Pforzheim',), ('Offenbach am Main',), ('Ulm',), ('Ingolstadt',), ('Gera',), ('Salzgitter',), ('Cottbus',), ('Reutlingen',), ('Fürth',), ('Siegen',), ('Koblenz',), ('Moers',), ('Bergisch Gladbach',), ('Zwickau',), ('Hildesheim',), ('Witten',), ('Schwerin',), ('Erlangen',), ('Kaiserslautern',), ('Trier',), ('Jena',), ('Iserlohn',), ('Gütersloh',), ('Marl',), ('Lünen',), ('Düren',), ('Ratingen',), ('Velbert',), ('Esslingen am Neckar',), ('København',), ('Århus',), ('Odense',), ('Aalborg',), ('Frederiksberg',), ('Madrid',), ('Barcelona',), ('Valencia',), ('Sevilla',), ('Zaragoza',), ('Málaga',), ('Bilbao',), ('Las Palmas de Gran Canaria',), ('Murcia',), ('Palma de Mallorca',), ('Valladolid',), ('Córdoba',), ('Vigo',), ('Alicante [Alacant]',), ('Gijón',), ('L´Hospitalet de Llobregat',), ('Granada',), ('A Coruña (La Coruña)',), ('Vitoria-Gasteiz',), ('Santa Cruz de Tenerife',), ('Badalona',), ('Oviedo',), ('Móstoles',), ('Elche [Elx]',), ('Sabadell',), ('Santander',), ('Jerez de la Frontera',), ('Pamplona [Iruña]',), ('Donostia-San Sebastián',), ('Cartagena',), ('Leganés',), ('Fuenlabrada',), ('Almería',), ('Terrassa',), ('Alcalá de Henares',), ('Burgos',), ('Salamanca',), ('Albacete',), ('Getafe',), ('Cádiz',), ('Alcorcón',), ('Huelva',), ('León',), ('Castellón de la Plana [Castell',), ('Badajoz',), ('[San Cristóbal de] la Laguna',), ('Logroño',), ('Santa Coloma de Gramenet',), ('Tarragona',), ('Lleida (Lérida)',), ('Jaén',), ('Ourense (Orense)',), ('Mataró',), ('Algeciras',), ('Marbella',), ('Barakaldo',), ('Dos Hermanas',), ('Santiago de Compostela',), ('Torrejón de Ardoz',), ('Tallinn',), ('Tartu',), ('Helsinki [Helsingfors]',), ('Espoo',), ('Tampere',), ('Vantaa',), ('Turku [Åbo]',), ('Oulu',), ('Lahti',), ('Paris',), ('Marseille',), ('Lyon',), ('Toulouse',), ('Nice',), ('Nantes',), ('Strasbourg',), ('Montpellier',), ('Bordeaux',), ('Rennes',), ('Le Havre',), ('Reims',), ('Lille',), ('St-Étienne',), ('Toulon',), ('Grenoble',), ('Angers',), ('Dijon',), ('Le Mans',), ('Clermont-Ferrand',), ('Amiens',), ('Aix-en-Provence',), ('Limoges',), ('Nîmes',), ('Tours',), ('Villeurbanne',), ('Metz',), ('Besançon',), ('Caen',), ('Orléans',), ('Mulhouse',), ('Rouen',), ('Boulogne-Billancourt',), ('Perpignan',), ('Nancy',), ('Roubaix',), ('Argenteuil',), ('Tourcoing',), ('Montreuil',), ('Tórshavn',), ('Athenai',), ('Thessaloniki',), ('Pireus',), ('Patras',), ('Peristerion',), ('Herakleion',), ('Kallithea',), ('Larisa',), ('Zagreb',), ('Split',), ('Rijeka',), ('Osijek',), ('Budapest',), ('Debrecen',), ('Miskolc',), ('Szeged',), ('Pécs',), ('Györ',), ('Nyiregyháza',), ('Kecskemét',), ('Székesfehérvár',), ('Reykjavík',), ('Roma',), ('Milano',), ('Napoli',), ('Torino',), ('Palermo',), ('Genova',), ('Bologna',), ('Firenze',), ('Catania',), ('Bari',), ('Venezia',), ('Messina',), ('Verona',), ('Trieste',), ('Padova',), ('Taranto',), ('Brescia',), ('Reggio di Calabria',), ('Modena',), ('Prato',), ('Parma',), ('Cagliari',), ('Livorno',), ('Perugia',), ('Foggia',), ('Reggio nell´ Emilia',), ('Salerno',), ('Ravenna',), ('Ferrara',), ('Rimini',), ('Syrakusa',), ('Sassari',), ('Monza',), ('Bergamo',), ('Pescara',), ('Latina',), ('Vicenza',), ('Terni',), ('Forlì',), ('Trento',), ('Novara',), ('Piacenza',), ('Ancona',), ('Lecce',), ('Bolzano',), ('Catanzaro',), ('La Spezia',), ('Udine',), ('Torre del Greco',), ('Andria',), ('Brindisi',), ('Giugliano in Campania',), ('Pisa',), ('Barletta',), ('Arezzo',), ('Alessandria',), ('Cesena',), ('Pesaro',), ('Schaan',), ('Vaduz',), ('Vilnius',), ('Kaunas',), ('Klaipeda',), ('Šiauliai',), ('Panevezys',), ('Luxembourg [Luxemburg/Lëtzebuerg]',), ('Riga',), ('Daugavpils',), ('Liepaja',), ('Monte-Carlo',), ('Monaco-Ville',), ('Chisinau',), ('Tiraspol',), ('Balti',), ('Bender (Tîghina)',), ('Skopje',), ('Amsterdam',), ('Rotterdam',), ('Haag',), ('Utrecht',), ('Eindhoven',), ('Tilburg',), ('Groningen',), ('Breda',), ('Apeldoorn',), ('Nijmegen',), ('Enschede',), ('Haarlem',), ('Almere',), ('Arnhem',), ('Zaanstad',), ('´s-Hertogenbosch',), ('Amersfoort',), ('Maastricht',), ('Dordrecht',), ('Leiden',), ('Haarlemmermeer',), ('Zoetermeer',), ('Emmen',), ('Zwolle',), ('Ede',), ('Delft',), ('Heerlen',), ('Alkmaar',), ('Oslo',), ('Bergen',), ('Trondheim',), ('Stavanger',), ('Bærum',), ('Warszawa',), ('Lódz',), ('Kraków',), ('Wroclaw',), ('Poznan',), ('Gdansk',), ('Szczecin',), ('Bydgoszcz',), ('Lublin',), ('Katowice',), ('Bialystok',), ('Czestochowa',), ('Gdynia',), ('Sosnowiec',), ('Radom',), ('Kielce',), ('Gliwice',), ('Torun',), ('Bytom',), ('Zabrze',), ('Bielsko-Biala',), ('Olsztyn',), ('Rzeszów',), ('Ruda Slaska',), ('Rybnik',), ('Walbrzych',), ('Tychy',), ('Dabrowa Górnicza',), ('Plock',), ('Elblag',), ('Opole',), ('Gorzów Wielkopolski',), ('Wloclawek',), ('Chorzów',), ('Tarnów',), ('Zielona Góra',), ('Koszalin',), ('Legnica',), ('Kalisz',), ('Grudziadz',), ('Slupsk',), ('Jastrzebie-Zdrój',), ('Jaworzno',), ('Jelenia Góra',), ('Lisboa',), ('Porto',), ('Amadora',), ('Coímbra',), ('Braga',), ('Bucuresti',), ('Iasi',), ('Constanta',), ('Cluj-Napoca',), ('Galati',), ('Timisoara',), ('Brasov',), ('Craiova',), ('Ploiesti',), ('Braila',), ('Oradea',), ('Bacau',), ('Pitesti',), ('Arad',), ('Sibiu',), ('Târgu Mures',), ('Baia Mare',), ('Buzau',), ('Satu Mare',), ('Botosani',), ('Piatra Neamt',), ('Râmnicu Vâlcea',), ('Suceava',), ('Drobeta-Turnu Severin',), ('Târgoviste',), ('Focsani',), ('Târgu Jiu',), ('Tulcea',), ('Resita',), ('Moscow',), ('St Petersburg',), ('Novosibirsk',), ('Nizni Novgorod',), ('Jekaterinburg',), ('Samara',), ('Omsk',), ('Kazan',), ('Ufa',), ('Tšeljabinsk',), ('Rostov-na-Donu',), ('Perm',), ('Volgograd',), ('Voronez',), ('Krasnojarsk',), ('Saratov',), ('Toljatti',), ('Uljanovsk',), ('Izevsk',), ('Krasnodar',), ('Jaroslavl',), ('Habarovsk',), ('Vladivostok',), ('Irkutsk',), ('Barnaul',), ('Novokuznetsk',), ('Penza',), ('Rjazan',), ('Orenburg',), ('Lipetsk',), ('Nabereznyje Tšelny',), ('Tula',), ('Tjumen',), ('Kemerovo',), ('Astrahan',), ('Tomsk',), ('Kirov',), ('Ivanovo',), ('Tšeboksary',), ('Brjansk',), ('Tver',), ('Kursk',), ('Magnitogorsk',), ('Kaliningrad',), ('Nizni Tagil',), ('Murmansk',), ('Ulan-Ude',), ('Kurgan',), ('Arkangeli',), ('Sotši',), ('Smolensk',), ('Orjol',), ('Stavropol',), ('Belgorod',), ('Kaluga',), ('Vladimir',), ('Mahatškala',), ('Tšerepovets',), ('Saransk',), ('Tambov',), ('Vladikavkaz',), ('Tšita',), ('Vologda',), ('Veliki Novgorod',), ('Komsomolsk-na-Amure',), ('Kostroma',), ('Volzski',), ('Taganrog',), ('Petroskoi',), ('Bratsk',), ('Dzerzinsk',), ('Surgut',), ('Orsk',), ('Sterlitamak',), ('Angarsk',), ('Joškar-Ola',), ('Rybinsk',), ('Prokopjevsk',), ('Niznevartovsk',), ('Naltšik',), ('Syktyvkar',), ('Severodvinsk',), ('Bijsk',), ('Niznekamsk',), ('Blagoveštšensk',), ('Šahty',), ('Staryi Oskol',), ('Zelenograd',), ('Balakovo',), ('Novorossijsk',), ('Pihkova',), ('Zlatoust',), ('Jakutsk',), ('Podolsk',), ('Petropavlovsk-Kamtšatski',), ('Kamensk-Uralski',), ('Engels',), ('Syzran',), ('Grozny',), ('Novotšerkassk',), ('Berezniki',), ('Juzno-Sahalinsk',), ('Volgodonsk',), ('Abakan',), ('Maikop',), ('Miass',), ('Armavir',), ('Ljubertsy',), ('Rubtsovsk',), ('Kovrov',), ('Nahodka',), ('Ussurijsk',), ('Salavat',), ('Mytištši',), ('Kolomna',), ('Elektrostal',), ('Murom',), ('Kolpino',), ('Norilsk',), ('Almetjevsk',), ('Novomoskovsk',), ('Dimitrovgrad',), ('Pervouralsk',), ('Himki',), ('Balašiha',), ('Nevinnomyssk',), ('Pjatigorsk',), ('Korolev',), ('Serpuhov',), ('Odintsovo',), ('Orehovo-Zujevo',), ('Kamyšin',), ('Novotšeboksarsk',), ('Tšerkessk',), ('Atšinsk',), ('Magadan',), ('Mitšurinsk',), ('Kislovodsk',), ('Jelets',), ('Seversk',), ('Noginsk',), ('Velikije Luki',), ('Novokuibyševsk',), ('Neftekamsk',), ('Leninsk-Kuznetski',), ('Oktjabrski',), ('Sergijev Posad',), ('Arzamas',), ('Kiseljovsk',), ('Novotroitsk',), ('Obninsk',), ('Kansk',), ('Glazov',), ('Solikamsk',), ('Sarapul',), ('Ust-Ilimsk',), ('Štšolkovo',), ('Mezduretšensk',), ('Usolje-Sibirskoje',), ('Elista',), ('Novošahtinsk',), ('Votkinsk',), ('Kyzyl',), ('Serov',), ('Zelenodolsk',), ('Zeleznodoroznyi',), ('Kinešma',), ('Kuznetsk',), ('Uhta',), ('Jessentuki',), ('Tobolsk',), ('Neftejugansk',), ('Bataisk',), ('Nojabrsk',), ('Balašov',), ('Zeleznogorsk',), ('Zukovski',), ('Anzero-Sudzensk',), ('Bugulma',), ('Novouralsk',), ('Puškin',), ('Vorkuta',), ('Derbent',), ('Kirovo-Tšepetsk',), ('Krasnogorsk',), ('Klin',), ('Tšaikovski',), ('Novyi Urengoi',), ('Longyearbyen',), ('Serravalle',), ('San Marino',), ('Bratislava',), ('Košice',), ('Prešov',), ('Ljubljana',), ('Maribor',), ('Stockholm',), ('Gothenburg [Göteborg]',), ('Malmö',), ('Uppsala',), ('Linköping',), ('Västerås',), ('Örebro',), ('Norrköping',), ('Helsingborg',), ('Jönköping',), ('Umeå',), ('Lund',), ('Borås',), ('Sundsvall',), ('Gävle',), ('Kyiv',), ('Harkova [Harkiv]',), ('Dnipropetrovsk',), ('Donetsk',), ('Odesa',), ('Zaporizzja',), ('Lviv',), ('Kryvyi Rig',), ('Mykolajiv',), ('Mariupol',), ('Lugansk',), ('Vinnytsja',), ('Makijivka',), ('Herson',), ('Sevastopol',), ('Simferopol',), ('Pultava [Poltava]',), ('Tšernigiv',), ('Tšerkasy',), ('Gorlivka',), ('Zytomyr',), ('Sumy',), ('Dniprodzerzynsk',), ('Kirovograd',), ('Hmelnytskyi',), ('Tšernivtsi',), ('Rivne',), ('Krementšuk',), ('Ivano-Frankivsk',), ('Ternopil',), ('Lutsk',), ('Bila Tserkva',), ('Kramatorsk',), ('Melitopol',), ('Kertš',), ('Nikopol',), ('Berdjansk',), ('Pavlograd',), ('Sjeverodonetsk',), ('Slovjansk',), ('Uzgorod',), ('Altševsk',), ('Lysytšansk',), ('Jevpatorija',), ('Kamjanets-Podilskyi',), ('Jenakijeve',), ('Krasnyi Lutš',), ('Stahanov',), ('Oleksandrija',), ('Konotop',), ('Kostjantynivka',), ('Berdytšiv',), ('Izmajil',), ('Šostka',), ('Uman',), ('Brovary',), ('Mukatševe',), ('Città del Vaticano',), ('Beograd',), ('Novi Sad',), ('Niš',), ('Priština',), ('Kragujevac',), ('Podgorica',), ('Subotica',), ('Prizren',)",extra,True,1,
401,world_1,Whic`h unique cities are in  Asian countries where Chinese is the official language?,SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  'Asia',"('Acheng',), ('Amoy [Xiamen]',), ('Anda',), ('Ankang',), ('Anqing',), ('Anshan',), ('Anshun',), ('Anyang',), ('Aqsu',), ('Baicheng',), ('Baiyin',), ('Baoding',), ('Baoji',), ('Baotou',), ('Bei´an',), ('Beihai',), ('Beipiao',), ('Bengbu',), ('Benxi',), ('Binzhou',), ('Bose',), ('Bozhou',), ('Cangzhou',), ('Changchun',), ('Changde',), ('Changji',), ('Changsha',), ('Changshu',), ('Changzhi',), ('Changzhou',), ('Chaohu',), ('Chaoyang',), ('Chaozhou',), ('Chengde',), ('Chengdu',), ('Chenzhou',), ('Chifeng',), ('Chongqing',), ('Chuzhou',), ('Cixi',), ('Da´an',), ('Dali',), ('Dalian',), ('Dandong',), ('Danjiangkou',), ('Danyang',), ('Daqing',), ('Datong',), ('Daxian',), ('Deyang',), ('Dezhou',), ('Dongtai',), ('Dongwan',), ('Dongying',), ('Dujiangyan',), ('Dunhua',), ('Duyun',), ('Emeishan',), ('Enshi',), ('Ezhou',), ('Fengcheng',), ('Foshan',), ('Fu´an',), ('Fujin',), ('Fuling',), ('Fuqing',), ('Fushun',), ('Fuxin',), ('Fuyang',), ('Fuyu',), ('Fuzhou',), ('Ganzhou',), ('Gejiu',), ('Ghulja',), ('Gongziling',), ('Guangshui',), ('Guangyuan',), ('Guigang',), ('Guilin',), ('Guiyang',), ('Haicheng',), ('Haikou',), ('Hailar',), ('Hailun',), ('Haining',), ('Hami',), ('Handan',), ('Hangzhou',), ('Hanzhong',), ('Harbin',), ('Hebi',), ('Hefei',), ('Hegang',), ('Hengshui',), ('Hengyang',), ('Heyuan',), ('Heze',), ('Hohhot',), ('Honghu',), ('Hongjiang',), ('Huadian',), ('Huai´an',), ('Huaibei',), ('Huaihua',), ('Huainan',), ('Huaiyin',), ('Huangshan',), ('Huangshi',), ('Huangyan',), ('Huaying',), ('Huizhou',), ('Hunjiang',), ('Huzhou',), ('Jiamusi',), ('Ji´an',), ('Jiangmen',), ('Jiangyin',), ('Jiangyou',), ('Jiaohe',), ('Jiaonan',), ('Jiaozhou',), ('Jiaozuo',), ('Jiaxing',), ('Jieyang',), ('Jilin',), ('Jinan',), ('Jinchang',), ('Jincheng',), ('Jingdezhen',), ('Jinhua',), ('Jining',), ('Jinmen',), ('Jinxi',), ('Jinzhou',), ('Jiujiang',), ('Jiutai',), ('Jixi',), ('Junan',), ('Kaifeng',), ('Kaili',), ('Kaiyuan',), ('Kanton [Guangzhou]',), ('Korla',), ('Kunming',), ('Kunshan',), ('Kuytun',), ('Laiwu',), ('Laiyang',), ('Laizhou',), ('Langfang',), ('Lanzhou',), ('Laohekou',), ('Leiyang',), ('Lengshuijiang',), ('Leshan',), ('Lhasa',), ('Liangcheng',), ('Lianyuan',), ('Lianyungang',), ('Liaocheng',), ('Liaoyang',), ('Liaoyuan',), ('Liling',), ('Linchuan',), ('Linfen',), ('Linhai',), ('Linhe',), ('Linqing',), ('Linyi',), ('Liu´an',), ('Liupanshui',), ('Liuzhou',), ('Liyang',), ('Longjing',), ('Longkou',), ('Longyan',), ('Loudi',), ('Luohe',), ('Luoyang',), ('Luzhou',), ('Ma´anshan',), ('Manzhouli',), ('Maoming',), ('Meihekou',), ('Meixian',), ('Mianyang',), ('Mishan',), ('Mudanjiang',), ('Nanchang',), ('Nanchong',), ('Nanking [Nanjing]',), ('Nanning',), ('Nanping',), ('Nantong',), ('Nanyang',), ('Neijiang',), ('Ningbo',), ('Panjin',), ('Panzhihua',), ('Peking',), ('Pingdingshan',), ('Pingdu',), ('Pingliang',), ('Pingxiang',), ('Pingyi',), ('Puqi',), ('Putian',), ('Puyang',), ('Qaramay',), ('Qashqar',), ('Qianjiang',), ('Qidong',), ('Qingdao',), ('Qingyuan',), ('Qingzhou',), ('Qinhuangdao',), ('Qinzhou',), ('Qiqihar',), ('Qitaihe',), ('Quanzhou',), ('Qujing',), ('Quzhou',), ('Renqiu',), ('Rizhao',), ('Rui´an',), ('Sanmenxia',), ('Sanming',), ('Sanya',), ('Shanghai',), ('Shangqiu',), ('Shangrao',), ('Shangzi',), ('Shantou',), ('Shanwei',), ('Shaoguan',), ('Shaowu',), ('Shaoxing',), ('Shaoyang',), ('Shashi',), ('Shenyang',), ('Shenzhen',), ('Shihezi',), ('Shijiazhuang',), ('Shishou',), ('Shiyan',), ('Shizuishan',), ('Shuangcheng',), ('Shuangyashan',), ('Singapore',), ('Siping',), ('Suihua',), ('Suining',), ('Suizhou',), ('Suqian',), ('Suzhou',), ('Tai´an',), ('Taiyuan',), ('Taizhou',), ('Tangshan',), ('Taonan',), ('Tengzhou',), ('Tianjin',), ('Tianmen',), ('Tianshui',), ('Tiefa',), ('Tieli',), ('Tieling',), ('Tongchuan',), ('Tonghua',), ('Tongliao',), ('Tongling',), ('Tong Xian',), ('Tumen',), ('Ulanhot',), ('Urumtši [Ürümqi]',), ('Wafangdian',), ('Wanxian',), ('Weifang',), ('Weihai',), ('Weinan',), ('Wendeng',), ('Wenzhou',), ('Wuhai',), ('Wuhan',), ('Wuhu',), ('Wuwei',), ('Wuxi',), ('Wuzhou',), ('Xi´an',), ('Xiangfan',), ('Xiangtan',), ('Xianning',), ('Xiantao',), ('Xianyang',), ('Xiaogan',), ('Xiaoshan',), ('Xichang',), ('Xilin Hot',), ('Xingcheng',), ('Xinghua',), ('Xingtai',), ('Xining',), ('Xintai',), ('Xinxiang',), ('Xinyang',), ('Xinyu',), ('Xinzhou',), ('Xuangzhou',), ('Xuchang',), ('Xuzhou',), ('Ya´an',), ('Yakeshi',), ('Yan´an',), ('Yancheng',), ('Yangjiang',), ('Yangquan',), ('Yangzhou',), ('Yanji',), ('Yantai',), ('Yibin',), ('Yichang',), ('Yichun',), ('Yinchuan',), ('Yingkou',), ('Yixing',), ('Yiyang',), ('Yizheng',), ('Yong´an',), ('Yuanjiang',), ('Yuci',), ('Yueyang',), ('Yulin',), ('Yumen',), ('Yuncheng',), ('Yushu',), ('Yuyao',), ('Yuzhou',), ('Zalantun',), ('Zaoyang',), ('Zaozhuang',), ('Zhangjiagang',), ('Zhangjiakou',), ('Zhangjiang',), ('Zhangzhou',), ('Zhaodong',), ('Zhaoqing',), ('Zhengzhou',), ('Zhenjiang',), ('Zhongshan',), ('Zhoukou',), ('Zhoushan',), ('Zhucheng',), ('Zhuhai',), ('Zhumadian',), ('Zhuzhou',), ('Zibo',), ('Zigong',), ('Zixing',), ('Zunyi',)",select distinct ?t1_name where { ?t1 a dbo:city . ?t3 a dbo:country . ?t1 dbo:city\#ref-countrycode ?t3 .  ?t1 dbo:city\#name ?t1_name . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . ?t2 dbo:countrylanguage\#language ?t2_language . ?t3 dbo:country\#continent ?t3_continent . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t3 .  ?t1 dbo:city\#name ?t1_name . ?t2 dbo:countrylanguage\#isofficial ?t2_isofficial . ?t2 dbo:countrylanguage\#language ?t2_language . ?t3 dbo:country\#continent ?t3_continent . FILTER(?t2_isofficial = 'T' && ?t2_language = 'Chinese' && ?t3_continent = 'Asia') .        },"('Shanghai',), ('Peking',), ('Chongqing',), ('Tianjin',), ('Wuhan',), ('Harbin',), ('Shenyang',), ('Kanton [Guangzhou]',), ('Chengdu',), ('Nanking [Nanjing]',), ('Changchun',), ('Xi´an',), ('Dalian',), ('Qingdao',), ('Jinan',), ('Hangzhou',), ('Zhengzhou',), ('Shijiazhuang',), ('Taiyuan',), ('Kunming',), ('Changsha',), ('Nanchang',), ('Fuzhou',), ('Lanzhou',), ('Guiyang',), ('Ningbo',), ('Hefei',), ('Urumtši [Ürümqi]',), ('Anshan',), ('Fushun',), ('Nanning',), ('Zibo',), ('Qiqihar',), ('Jilin',), ('Tangshan',), ('Baotou',), ('Shenzhen',), ('Hohhot',), ('Handan',), ('Wuxi',), ('Xuzhou',), ('Datong',), ('Yichun',), ('Benxi',), ('Luoyang',), ('Suzhou',), ('Xining',), ('Huainan',), ('Jixi',), ('Daqing',), ('Fuxin',), ('Amoy [Xiamen]',), ('Liuzhou',), ('Shantou',), ('Jinzhou',), ('Mudanjiang',), ('Yinchuan',), ('Changzhou',), ('Zhangjiakou',), ('Dandong',), ('Hegang',), ('Kaifeng',), ('Jiamusi',), ('Liaoyang',), ('Hengyang',), ('Baoding',), ('Hunjiang',), ('Xinxiang',), ('Huangshi',), ('Haikou',), ('Yantai',), ('Bengbu',), ('Xiangtan',), ('Weifang',), ('Wuhu',), ('Pingxiang',), ('Yingkou',), ('Anyang',), ('Panzhihua',), ('Pingdingshan',), ('Xiangfan',), ('Zhuzhou',), ('Jiaozuo',), ('Wenzhou',), ('Zhangjiang',), ('Zigong',), ('Shuangyashan',), ('Zaozhuang',), ('Yakeshi',), ('Yichang',), ('Zhenjiang',), ('Huaibei',), ('Qinhuangdao',), ('Guilin',), ('Liupanshui',), ('Panjin',), ('Yangquan',), ('Jinxi',), ('Liaoyuan',), ('Lianyungang',), ('Xianyang',), ('Tai´an',), ('Chifeng',), ('Shaoguan',), ('Nantong',), ('Leshan',), ('Baoji',), ('Linyi',), ('Tonghua',), ('Siping',), ('Changzhi',), ('Tengzhou',), ('Chaozhou',), ('Yangzhou',), ('Dongwan',), ('Ma´anshan',), ('Foshan',), ('Yueyang',), ('Xingtai',), ('Changde',), ('Shihezi',), ('Yancheng',), ('Jiujiang',), ('Dongying',), ('Shashi',), ('Xintai',), ('Jingdezhen',), ('Tongchuan',), ('Zhongshan',), ('Shiyan',), ('Tieli',), ('Jining',), ('Wuhai',), ('Mianyang',), ('Luzhou',), ('Zunyi',), ('Shizuishan',), ('Neijiang',), ('Tongliao',), ('Tieling',), ('Wafangdian',), ('Anqing',), ('Shaoyang',), ('Laiwu',), ('Chengde',), ('Tianshui',), ('Nanyang',), ('Cangzhou',), ('Yibin',), ('Huaiyin',), ('Dunhua',), ('Yanji',), ('Jiangmen',), ('Tongling',), ('Suihua',), ('Gongziling',), ('Xiantao',), ('Chaoyang',), ('Ganzhou',), ('Huzhou',), ('Baicheng',), ('Shangzi',), ('Yangjiang',), ('Qitaihe',), ('Gejiu',), ('Jiangyin',), ('Hebi',), ('Jiaxing',), ('Wuzhou',), ('Meihekou',), ('Xuchang',), ('Liaocheng',), ('Haicheng',), ('Qianjiang',), ('Baiyin',), ('Bei´an',), ('Yixing',), ('Laizhou',), ('Qaramay',), ('Acheng',), ('Dezhou',), ('Nanping',), ('Zhaoqing',), ('Beipiao',), ('Fengcheng',), ('Fuyu',), ('Xinyang',), ('Dongtai',), ('Yuci',), ('Honghu',), ('Ezhou',), ('Heze',), ('Daxian',), ('Linfen',), ('Tianmen',), ('Yiyang',), ('Quanzhou',), ('Rizhao',), ('Deyang',), ('Guangyuan',), ('Changshu',), ('Zhangzhou',), ('Hailar',), ('Nanchong',), ('Jiutai',), ('Zhaodong',), ('Shaoxing',), ('Fuyang',), ('Maoming',), ('Qujing',), ('Ghulja',), ('Jiaohe',), ('Puyang',), ('Huadian',), ('Jiangyou',), ('Qashqar',), ('Anshun',), ('Fuling',), ('Xinyu',), ('Hanzhong',), ('Danyang',), ('Chenzhou',), ('Xiaogan',), ('Shangqiu',), ('Zhuhai',), ('Qingyuan',), ('Aqsu',), ('Xiaoshan',), ('Zaoyang',), ('Xinghua',), ('Hami',), ('Huizhou',), ('Jinmen',), ('Sanming',), ('Ulanhot',), ('Korla',), ('Wanxian',), ('Rui´an',), ('Zhoushan',), ('Liangcheng',), ('Jiaozhou',), ('Taizhou',), ('Taonan',), ('Pingdu',), ('Ji´an',), ('Longkou',), ('Langfang',), ('Zhoukou',), ('Suining',), ('Yulin',), ('Jinhua',), ('Liu´an',), ('Shuangcheng',), ('Suizhou',), ('Ankang',), ('Weinan',), ('Longjing',), ('Da´an',), ('Lengshuijiang',), ('Laiyang',), ('Xianning',), ('Dali',), ('Anda',), ('Jincheng',), ('Longyan',), ('Xichang',), ('Wendeng',), ('Hailun',), ('Binzhou',), ('Linhe',), ('Wuwei',), ('Duyun',), ('Mishan',), ('Shangrao',), ('Changji',), ('Meixian',), ('Yushu',), ('Tiefa',), ('Huai´an',), ('Leiyang',), ('Zalantun',), ('Weihai',), ('Loudi',), ('Qingzhou',), ('Qidong',), ('Huaihua',), ('Luohe',), ('Chuzhou',), ('Kaiyuan',), ('Linqing',), ('Chaohu',), ('Laohekou',), ('Dujiangyan',), ('Zhumadian',), ('Linchuan',), ('Jiaonan',), ('Sanmenxia',), ('Heyuan',), ('Manzhouli',), ('Lhasa',), ('Lianyuan',), ('Kuytun',), ('Puqi',), ('Hongjiang',), ('Qinzhou',), ('Renqiu',), ('Yuyao',), ('Guigang',), ('Kaili',), ('Yan´an',), ('Beihai',), ('Xuangzhou',), ('Quzhou',), ('Yong´an',), ('Zixing',), ('Liyang',), ('Yizheng',), ('Yumen',), ('Liling',), ('Yuncheng',), ('Shanwei',), ('Cixi',), ('Yuanjiang',), ('Bozhou',), ('Jinchang',), ('Fu´an',), ('Suqian',), ('Shishou',), ('Hengshui',), ('Danjiangkou',), ('Fujin',), ('Sanya',), ('Guangshui',), ('Huangshan',), ('Xingcheng',), ('Zhucheng',), ('Kunshan',), ('Haining',), ('Pingliang',), ('Fuqing',), ('Xinzhou',), ('Jieyang',), ('Zhangjiagang',), ('Tong Xian',), ('Ya´an',), ('Emeishan',), ('Enshi',), ('Bose',), ('Yuzhou',), ('Tumen',), ('Putian',), ('Linhai',), ('Xilin Hot',), ('Shaowu',), ('Junan',), ('Huaying',), ('Pingyi',), ('Huangyan',), ('Singapore',)",hard,True,1,
402,world_1,"What are the name, independence year, and surface area of the country with the smallest population?","SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1","('Bouvet Island', 59.0, 9999)",select ?t1_name ?t1_surfacearea ?t1_indepyear where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#indepyear ?t1_indepyear . ?t1 dbo:country\#population ?t1_population .        }   order by asc (?t1_population) limit 1,"('Holy See (Vatican City State)', 0.4, 1929)",medium,True,1,false_negative
403,world_1,"What are the population, name and leader of the country with the largest area?","SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","('Russian Federation', 146934000, 'Vladimir Putin')",select ?t1_name ?t1_population ?t1_headofstate where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#headofstate ?t1_headofstate . ?t1 dbo:country\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1,"('Russian Federation', 146934000, 'Vladimir Putin')",medium,True,1,
404,world_1,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >=  3","(7, 'Bangladesh'), (3, 'Venezuela'), (3, 'Mayotte'), (5, 'Luxembourg'), (8, 'Czech Republic'), (6, 'Sweden'), (4, 'Cambodia'), (3, 'Singapore'), (4, 'Laos'), (5, 'Colombia'), (3, 'Albania'), (7, 'Ukraine'), (6, 'Latvia'), (5, 'Slovakia'), (3, 'Israel'), (6, 'Micronesia, Federated States of'), (6, 'Malaysia'), (10, 'Kenya'), (6, 'Zambia'), (8, 'Liberia'), (7, 'Benin'), (10, 'Nigeria'), (3, 'Tajikistan'), (5, 'Guam'), (12, 'China'), (3, 'New Caledonia'), (4, 'Gabon'), (8, 'Australia'), (5, 'Côte d’Ivoire'), (3, 'Vanuatu'), (6, 'Congo'), (6, 'Georgia'), (6, 'Belgium'), (4, 'Monaco'), (3, 'Solomon Islands'), (6, 'Thailand'), (3, 'United Kingdom'), (6, 'Germany'), (6, 'Eritrea'), (12, 'Canada'), (8, 'Namibia'), (3, 'Slovenia'), (4, 'Azerbaijan'), (5, 'Afghanistan'), (8, 'Chad'), (4, 'Chile'), (11, 'South Africa'), (3, 'Peru'), (6, 'Yugoslavia'), (6, 'Japan'), (4, 'Macao'), (5, 'Iraq'), (5, 'Norway'), (8, 'Pakistan'), (5, 'Brazil'), (5, 'Guatemala'), (4, 'Bolivia'), (7, 'Ethiopia'), (6, 'Panama'), (3, 'Tunisia'), (10, 'Sudan'), (6, 'Mali'), (5, 'Moldova'), (8, 'Myanmar'), (6, 'Mexico'), (3, 'Guyana'), (4, 'Poland'), (3, 'Lebanon'), (3, 'Virgin Islands, U.S.'), (9, 'Indonesia'), (8, 'Cameroon'), (10, 'Uganda'), (3, 'Jordan'), (5, 'Macedonia'), (3, 'Sri Lanka'), (3, 'American Samoa'), (6, 'Uzbekistan'), (4, 'Brunei'), (5, 'Finland'), (7, 'Kyrgyzstan'), (6, 'France'), (5, 'Réunion'), (3, 'Djibouti'), (5, 'Nauru'), (6, 'Senegal'), (6, 'Ghana'), (5, 'Hong Kong'), (8, 'Sierra Leone'), (10, 'Philippines'), (3, 'Tuvalu'), (12, 'United States'), (7, 'Guinea'), (3, 'Turkey'), (4, 'Zimbabwe'), (5, 'Comoros'), (4, 'Belarus'), (4, 'Netherlands'), (3, 'Lesotho'), (4, 'Paraguay'), (6, 'Mauritius'), (9, 'Angola'), (4, 'Spain'), (3, 'Netherlands Antilles'), (4, 'Malawi'), (3, 'Burundi'), (6, 'Taiwan'), (3, 'Bhutan'), (8, 'Togo'), (6, 'Burkina Faso'), (8, 'Italy'), (10, 'Congo, The Democratic Republic of the'), (4, 'Palau'), (3, 'Argentina'), (3, 'Liechtenstein'), (12, 'India'), (10, 'Iran'), (3, 'French Polynesia'), (5, 'Gambia'), (5, 'Estonia'), (9, 'Vietnam'), (6, 'Kazakstan'), (6, 'Central African Republic'), (7, 'Denmark'), (3, 'Trinidad and Tobago'), (6, 'Mongolia'), (6, 'Mauritania'), (10, 'Mozambique'), (3, 'Seychelles'), (6, 'Northern Mariana Islands'), (4, 'Switzerland'), (6, 'Hungary'), (4, 'Honduras'), (4, 'Belize'), (5, 'Botswana'), (12, 'Russian Federation'), (6, 'Romania'), (8, 'Austria'), (6, 'Guinea-Bissau'), (5, 'Niger'), (5, 'Lithuania'), (4, 'Bulgaria'), (4, 'Turkmenistan'), (4, 'Aruba'), (4, 'Nicaragua'), (7, 'Nepal'), (11, 'Tanzania'), (4, 'Costa Rica'), (3, 'Samoa'), (4, 'Andorra')",select (count( ?t1_language) as ?aggregation_t1_language_226 ) ?t2_name where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#name ?t2_name .        } group by ?t2_name   having(count( *)  >= 3),"(4, 'Aruba'), (5, 'Afghanistan'), (9, 'Angola'), (3, 'Albania'), (4, 'Andorra'), (3, 'Netherlands Antilles'), (3, 'Argentina'), (3, 'American Samoa'), (8, 'Australia'), (8, 'Austria'), (4, 'Azerbaijan'), (3, 'Burundi'), (6, 'Belgium'), (7, 'Benin'), (6, 'Burkina Faso'), (7, 'Bangladesh'), (4, 'Bulgaria'), (4, 'Belarus'), (4, 'Belize'), (4, 'Bolivia'), (5, 'Brazil'), (4, 'Brunei'), (3, 'Bhutan'), (5, 'Botswana'), (6, 'Central African Republic'), (12, 'Canada'), (4, 'Switzerland'), (4, 'Chile'), (12, 'China'), (5, 'Côte d’Ivoire'), (8, 'Cameroon'), (10, 'Congo, The Democratic Republic of the'), (6, 'Congo'), (5, 'Colombia'), (5, 'Comoros'), (4, 'Costa Rica'), (8, 'Czech Republic'), (6, 'Germany'), (3, 'Djibouti'), (7, 'Denmark'), (6, 'Eritrea'), (4, 'Spain'), (5, 'Estonia'), (7, 'Ethiopia'), (5, 'Finland'), (6, 'France'), (6, 'Micronesia, Federated States of'), (4, 'Gabon'), (3, 'United Kingdom'), (6, 'Georgia'), (6, 'Ghana'), (7, 'Guinea'), (5, 'Gambia'), (6, 'Guinea-Bissau'), (5, 'Guatemala'), (5, 'Guam'), (3, 'Guyana'), (5, 'Hong Kong'), (4, 'Honduras'), (6, 'Hungary'), (9, 'Indonesia'), (12, 'India'), (10, 'Iran'), (5, 'Iraq'), (3, 'Israel'), (8, 'Italy'), (3, 'Jordan'), (6, 'Japan'), (6, 'Kazakstan'), (10, 'Kenya'), (7, 'Kyrgyzstan'), (4, 'Cambodia'), (4, 'Laos'), (3, 'Lebanon'), (8, 'Liberia'), (3, 'Liechtenstein'), (3, 'Sri Lanka'), (3, 'Lesotho'), (5, 'Lithuania'), (5, 'Luxembourg'), (6, 'Latvia'), (4, 'Macao'), (4, 'Monaco'), (5, 'Moldova'), (6, 'Mexico'), (5, 'Macedonia'), (6, 'Mali'), (8, 'Myanmar'), (6, 'Mongolia'), (6, 'Northern Mariana Islands'), (10, 'Mozambique'), (6, 'Mauritania'), (6, 'Mauritius'), (4, 'Malawi'), (6, 'Malaysia'), (3, 'Mayotte'), (8, 'Namibia'), (3, 'New Caledonia'), (5, 'Niger'), (10, 'Nigeria'), (4, 'Nicaragua'), (4, 'Netherlands'), (5, 'Norway'), (7, 'Nepal'), (5, 'Nauru'), (8, 'Pakistan'), (6, 'Panama'), (3, 'Peru'), (10, 'Philippines'), (4, 'Palau'), (4, 'Poland'), (4, 'Paraguay'), (3, 'French Polynesia'), (5, 'Réunion'), (6, 'Romania'), (12, 'Russian Federation'), (10, 'Sudan'), (6, 'Senegal'), (3, 'Singapore'), (3, 'Solomon Islands'), (8, 'Sierra Leone'), (5, 'Slovakia'), (3, 'Slovenia'), (6, 'Sweden'), (3, 'Seychelles'), (8, 'Chad'), (8, 'Togo'), (6, 'Thailand'), (3, 'Tajikistan'), (4, 'Turkmenistan'), (3, 'Trinidad and Tobago'), (3, 'Tunisia'), (3, 'Turkey'), (3, 'Tuvalu'), (6, 'Taiwan'), (11, 'Tanzania'), (10, 'Uganda'), (7, 'Ukraine'), (12, 'United States'), (6, 'Uzbekistan'), (3, 'Venezuela'), (3, 'Virgin Islands, U.S.'), (9, 'Vietnam'), (3, 'Vanuatu'), (3, 'Samoa'), (6, 'Yugoslavia'), (11, 'South Africa'), (6, 'Zambia'), (4, 'Zimbabwe')",medium,True,1,
405,world_1,"What are the names of countries that speak more than 2 languages, as well as how many languages they speak?","SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2","(7, 'Bangladesh'), (3, 'Venezuela'), (3, 'Mayotte'), (5, 'Luxembourg'), (8, 'Czech Republic'), (6, 'Sweden'), (4, 'Cambodia'), (3, 'Singapore'), (4, 'Laos'), (5, 'Colombia'), (3, 'Albania'), (7, 'Ukraine'), (6, 'Latvia'), (5, 'Slovakia'), (3, 'Israel'), (6, 'Micronesia, Federated States of'), (6, 'Malaysia'), (10, 'Kenya'), (6, 'Zambia'), (8, 'Liberia'), (7, 'Benin'), (10, 'Nigeria'), (3, 'Tajikistan'), (5, 'Guam'), (12, 'China'), (3, 'New Caledonia'), (4, 'Gabon'), (8, 'Australia'), (5, 'Côte d’Ivoire'), (3, 'Vanuatu'), (6, 'Congo'), (6, 'Georgia'), (6, 'Belgium'), (4, 'Monaco'), (3, 'Solomon Islands'), (6, 'Thailand'), (3, 'United Kingdom'), (6, 'Germany'), (6, 'Eritrea'), (12, 'Canada'), (8, 'Namibia'), (3, 'Slovenia'), (4, 'Azerbaijan'), (5, 'Afghanistan'), (8, 'Chad'), (4, 'Chile'), (11, 'South Africa'), (3, 'Peru'), (6, 'Yugoslavia'), (6, 'Japan'), (4, 'Macao'), (5, 'Iraq'), (5, 'Norway'), (8, 'Pakistan'), (5, 'Brazil'), (5, 'Guatemala'), (4, 'Bolivia'), (7, 'Ethiopia'), (6, 'Panama'), (3, 'Tunisia'), (10, 'Sudan'), (6, 'Mali'), (5, 'Moldova'), (8, 'Myanmar'), (6, 'Mexico'), (3, 'Guyana'), (4, 'Poland'), (3, 'Lebanon'), (3, 'Virgin Islands, U.S.'), (9, 'Indonesia'), (8, 'Cameroon'), (10, 'Uganda'), (3, 'Jordan'), (5, 'Macedonia'), (3, 'Sri Lanka'), (3, 'American Samoa'), (6, 'Uzbekistan'), (4, 'Brunei'), (5, 'Finland'), (7, 'Kyrgyzstan'), (6, 'France'), (5, 'Réunion'), (3, 'Djibouti'), (5, 'Nauru'), (6, 'Senegal'), (6, 'Ghana'), (5, 'Hong Kong'), (8, 'Sierra Leone'), (10, 'Philippines'), (3, 'Tuvalu'), (12, 'United States'), (7, 'Guinea'), (3, 'Turkey'), (4, 'Zimbabwe'), (5, 'Comoros'), (4, 'Belarus'), (4, 'Netherlands'), (3, 'Lesotho'), (4, 'Paraguay'), (6, 'Mauritius'), (9, 'Angola'), (4, 'Spain'), (3, 'Netherlands Antilles'), (4, 'Malawi'), (3, 'Burundi'), (6, 'Taiwan'), (3, 'Bhutan'), (8, 'Togo'), (6, 'Burkina Faso'), (8, 'Italy'), (10, 'Congo, The Democratic Republic of the'), (4, 'Palau'), (3, 'Argentina'), (3, 'Liechtenstein'), (12, 'India'), (10, 'Iran'), (3, 'French Polynesia'), (5, 'Gambia'), (5, 'Estonia'), (9, 'Vietnam'), (6, 'Kazakstan'), (6, 'Central African Republic'), (7, 'Denmark'), (3, 'Trinidad and Tobago'), (6, 'Mongolia'), (6, 'Mauritania'), (10, 'Mozambique'), (3, 'Seychelles'), (6, 'Northern Mariana Islands'), (4, 'Switzerland'), (6, 'Hungary'), (4, 'Honduras'), (4, 'Belize'), (5, 'Botswana'), (12, 'Russian Federation'), (6, 'Romania'), (8, 'Austria'), (6, 'Guinea-Bissau'), (5, 'Niger'), (5, 'Lithuania'), (4, 'Bulgaria'), (4, 'Turkmenistan'), (4, 'Aruba'), (4, 'Nicaragua'), (7, 'Nepal'), (11, 'Tanzania'), (4, 'Costa Rica'), (3, 'Samoa'), (4, 'Andorra')",select (count( ?t1_language) as ?aggregation_t1_language_342 ) ?t2_name where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language . ?t2 dbo:country\#name ?t2_name .        } group by ?t2_name   having(count( *)  > 2),"(4, 'Aruba'), (5, 'Afghanistan'), (9, 'Angola'), (3, 'Albania'), (4, 'Andorra'), (3, 'Netherlands Antilles'), (3, 'Argentina'), (3, 'American Samoa'), (8, 'Australia'), (8, 'Austria'), (4, 'Azerbaijan'), (3, 'Burundi'), (6, 'Belgium'), (7, 'Benin'), (6, 'Burkina Faso'), (7, 'Bangladesh'), (4, 'Bulgaria'), (4, 'Belarus'), (4, 'Belize'), (4, 'Bolivia'), (5, 'Brazil'), (4, 'Brunei'), (3, 'Bhutan'), (5, 'Botswana'), (6, 'Central African Republic'), (12, 'Canada'), (4, 'Switzerland'), (4, 'Chile'), (12, 'China'), (5, 'Côte d’Ivoire'), (8, 'Cameroon'), (10, 'Congo, The Democratic Republic of the'), (6, 'Congo'), (5, 'Colombia'), (5, 'Comoros'), (4, 'Costa Rica'), (8, 'Czech Republic'), (6, 'Germany'), (3, 'Djibouti'), (7, 'Denmark'), (6, 'Eritrea'), (4, 'Spain'), (5, 'Estonia'), (7, 'Ethiopia'), (5, 'Finland'), (6, 'France'), (6, 'Micronesia, Federated States of'), (4, 'Gabon'), (3, 'United Kingdom'), (6, 'Georgia'), (6, 'Ghana'), (7, 'Guinea'), (5, 'Gambia'), (6, 'Guinea-Bissau'), (5, 'Guatemala'), (5, 'Guam'), (3, 'Guyana'), (5, 'Hong Kong'), (4, 'Honduras'), (6, 'Hungary'), (9, 'Indonesia'), (12, 'India'), (10, 'Iran'), (5, 'Iraq'), (3, 'Israel'), (8, 'Italy'), (3, 'Jordan'), (6, 'Japan'), (6, 'Kazakstan'), (10, 'Kenya'), (7, 'Kyrgyzstan'), (4, 'Cambodia'), (4, 'Laos'), (3, 'Lebanon'), (8, 'Liberia'), (3, 'Liechtenstein'), (3, 'Sri Lanka'), (3, 'Lesotho'), (5, 'Lithuania'), (5, 'Luxembourg'), (6, 'Latvia'), (4, 'Macao'), (4, 'Monaco'), (5, 'Moldova'), (6, 'Mexico'), (5, 'Macedonia'), (6, 'Mali'), (8, 'Myanmar'), (6, 'Mongolia'), (6, 'Northern Mariana Islands'), (10, 'Mozambique'), (6, 'Mauritania'), (6, 'Mauritius'), (4, 'Malawi'), (6, 'Malaysia'), (3, 'Mayotte'), (8, 'Namibia'), (3, 'New Caledonia'), (5, 'Niger'), (10, 'Nigeria'), (4, 'Nicaragua'), (4, 'Netherlands'), (5, 'Norway'), (7, 'Nepal'), (5, 'Nauru'), (8, 'Pakistan'), (6, 'Panama'), (3, 'Peru'), (10, 'Philippines'), (4, 'Palau'), (4, 'Poland'), (4, 'Paraguay'), (3, 'French Polynesia'), (5, 'Réunion'), (6, 'Romania'), (12, 'Russian Federation'), (10, 'Sudan'), (6, 'Senegal'), (3, 'Singapore'), (3, 'Solomon Islands'), (8, 'Sierra Leone'), (5, 'Slovakia'), (3, 'Slovenia'), (6, 'Sweden'), (3, 'Seychelles'), (8, 'Chad'), (8, 'Togo'), (6, 'Thailand'), (3, 'Tajikistan'), (4, 'Turkmenistan'), (3, 'Trinidad and Tobago'), (3, 'Tunisia'), (3, 'Turkey'), (3, 'Tuvalu'), (6, 'Taiwan'), (11, 'Tanzania'), (10, 'Uganda'), (7, 'Ukraine'), (12, 'United States'), (6, 'Uzbekistan'), (3, 'Venezuela'), (3, 'Virgin Islands, U.S.'), (9, 'Vietnam'), (3, 'Vanuatu'), (3, 'Samoa'), (6, 'Yugoslavia'), (11, 'South Africa'), (6, 'Zambia'), (4, 'Zimbabwe')",medium,True,1,
406,world_1,Find the number of cities in each district whose population is greater than the average population of cities?,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District","(1, 'Bali'), (1, 'Izmir'), (1, 'Manitoba'), (1, 'Gomel'), (1, 'Marrakech-Tensift-Al'), (1, 'Victoria'), (1, 'Riau'), (1, 'Washington'), (1, 'Tripoli'), (1, 'Içel'), (1, 'Macau'), (1, 'Risaralda'), (1, 'Khorasan'), (2, 'Western Visayas'), (1, 'Santa Catarina'), (1, 'Louisiana'), (1, 'Antananarivo'), (2, 'Cap-Vert'), (1, 'Yucatán'), (1, 'Rio Grande do Sul'), (1, 'al-Tamim'), (1, 'Khuzestan'), (1, 'Tochigi'), (1, 'Taejon'), (1, 'Niamey'), (1, 'Ogun'), (1, 'Suez'), (5, 'Tamil Nadu'), (1, 'Baskimaa'), (1, 'Mato Grosso'), (1, 'Lilongwe'), (1, 'Markazi'), (4, 'Distrito Federal'), (1, 'Aleksandria'), (1, 'Oslo'), (1, 'Antwerpen'), (1, 'Atlántico'), (1, 'Kouilou'), (1, 'Brjansk'), (4, 'Hyogo'), (1, 'Estuaire'), (1, 'Nothwest Border Prov'), (1, 'Piemonte'), (1, 'Santander'), (1, 'Kaduna'), (1, 'Taegu'), (2, 'Ohio'), (3, 'Kerala'), (1, 'Queensland'), (1, 'Minnesota'), (1, 'Nagasaki'), (1, 'Sistan va Baluchesta'), (1, 'Volgograd'), (2, 'Southern Mindanao'), (1, 'Jerusalem'), (1, 'Kiova'), (7, 'Kyonggi'), (1, 'Baghdad'), (1, 'Salta'), (1, 'Penza'), (1, 'Guatemala'), (1, 'Fès-Boulemane'), (1, 'Gansu'), (2, 'Tšeljabinsk'), (2, 'Sonora'), (2, 'Maputo'), (2, 'Coahuila de Zaragoza'), (2, 'Aichi'), (1, 'Karotegin'), (1, 'Baden-Württemberg'), (2, 'Shaba'), (1, 'Astrahan'), (1, 'Bishkek shaary'), (3, 'Saitama'), (1, 'Chiapas'), (1, 'Blantyre'), (1, 'Attika'), (1, 'Jizní Morava'), (1, 'Pietari'), (1, 'Kagoshima'), (1, 'Antalya'), (2, 'Central Java'), (1, 'Qom'), (1, 'Canary Islands'), (1, 'Latium'), (1, 'San Juan'), (1, 'Nebraska'), (1, 'Arequipa'), (1, 'Keelung'), (1, 'Mazowieckie'), (1, 'Bengasi'), (1, 'Shanghai'), (1, 'Baki'), (2, 'Teheran'), (1, 'Ehime'), (1, 'New South Wales'), (1, 'Alagoas'), (1, 'Istanbul'), (2, 'Hiroshima'), (3, 'Sinaloa'), (1, 'Bratislava'), (1, 'Ondo & Ekiti'), (1, 'Tjumen'), (2, 'Jharkhand'), (3, 'Donetsk'), (1, 'Missouri'), (9, 'México'), (3, 'Karnataka'), (1, 'Nizni Novgorod'), (1, 'Santafé de Bogotá'), (1, 'Katalonia'), (3, 'Khartum'), (1, 'Ivanovo'), (1, 'Guerrero'), (1, 'Kirov'), (2, 'Shizuoka'), (1, 'Hainan'), (1, 'Mogiljov'), (1, 'Kermanshah'), (1, 'Uljanovsk'), (1, 'Moscow (City)'), (2, 'Central'), (1, 'Tomsk'), (1, 'Emilia-Romagna'), (1, 'København'), (1, 'Rangoon [Yangon]'), (1, 'Gaza'), (1, 'Bihar'), (1, 'Damascus'), (1, 'Miyagi'), (1, 'Dar es Salaam'), (1, 'Managua'), (4, 'Ontario'), (1, 'Madrid'), (1, 'Baškortostan'), (1, 'Horad Minsk'), (1, 'Rivers & Bayelsa'), (1, 'Grad Zagreb'), (1, 'Nouakchott'), (1, 'Inchon'), (1, 'Seoul'), (2, 'Sverdlovsk'), (1, 'West Kasai'), (1, 'Hlavní mesto Praha'), (1, 'Alger'), (1, 'Santiago de Cuba'), (1, 'Niigata'), (1, 'Diyarbakir'), (2, 'Chihuahua'), (1, 'Kaunas'), (4, 'Hubei'), (1, 'Lodzkie'), (1, 'Ankara'), (1, 'Assam'), (5, 'Andhra Pradesh'), (5, 'Madhya Pradesh'), (1, 'Sumatera Utara'), (1, 'Adana'), (1, 'Amazonas'), (2, 'Jiangxi'), (3, 'West Bengali'), (1, 'Giza'), (1, 'South Kazakstan'), (1, 'Budapest'), (1, 'Hims'), (13, 'Maharashtra'), (1, 'Northern Mindanao'), (2, 'Scotland'), (1, 'Central Visayas'), (1, 'Bangkok'), (1, 'Haryana'), (2, 'Baijeri'), (1, 'Kinshasa'), (1, 'Sofala'), (1, 'Vinnytsja'), (1, 'Murmansk'), (1, 'Arkangeli'), (1, 'Quang Nam-Da Nang'), (1, 'New York'), (7, 'Nordrhein-Westfalen'), (1, 'Hawaii'), (1, 'Kalimantan Selatan'), (1, 'Distrito Nacional'), (2, 'Samara'), (1, 'Harkova'), (2, 'Paraíba'), (1, 'al-Sharqiya'), (1, 'Lombardia'), (1, 'Oita'), (1, 'Conakry'), (1, 'Xinxiang'), (1, 'Western Cape'), (1, 'Bremen'), (1, 'Gifu'), (1, 'Federaatio'), (1, 'Kujawsko-Pomorskie'), (1, 'Doha'), (3, 'Baja California'), (1, 'Omsk'), (11, 'Punjab'), (2, 'Shaanxi'), (1, 'Massachusetts'), (1, 'Pennsylvania'), (6, 'Osaka'), (1, 'Kabol'), (1, 'Malopolskie'), (1, 'Valencia'), (4, 'Minas Gerais'), (2, 'Orissa'), (1, 'Luxor'), (1, 'Fukushima'), (1, 'Harjumaa'), (5, 'Taipei'), (1, 'Loreto'), (1, 'Samarkand'), (1, 'Jambi'), (1, 'Chittagong'), (1, 'Medina'), (1, 'Tainan'), (3, 'Jalisco'), (1, 'Sulawesi Selatan'), (1, 'Puebla'), (1, 'Anambra & Enugu & Eb'), (1, 'Jammu and Kashmir'), (1, 'Beirut'), (1, 'Addis Abeba'), (1, 'Chungchongbuk'), (1, 'Kano & Jigawa'), (1, 'Oregon'), (1, 'Kaliningrad'), (2, 'Colorado'), (1, 'Mykolajiv'), (3, 'Mekka'), (1, 'Michoacán de Ocampo'), (1, 'Kairo'), (2, 'al-Gharbiya'), (1, 'Lviv'), (1, 'Orenburg'), (7, 'Shandong'), (1, 'Callao'), (1, 'Wakayama'), (1, 'Córdoba'), (2, 'Hokkaido'), (1, 'Berliini'), (1, 'Yunnan'), (1, 'Central Serbia'), (1, 'Magdalena'), (1, 'Chari-Baguirmi'), (1, 'Tanger-Tétouan'), (1, 'Abidjan'), (1, 'Aleppo'), (7, 'Jiangsu'), (2, 'Oklahoma'), (1, 'Central Macedonia'), (2, 'Zuid-Holland'), (2, 'Sindh'), (1, 'Delhi'), (1, 'Zaporizzja'), (1, 'Banaadir'), (1, 'Burjatia'), (1, 'Maryland'), (1, 'Almaty Qalasy'), (3, 'Zhejiang'), (3, 'Shanxi'), (1, 'Bangui'), (1, 'Nagano'), (3, 'Kyongsangnam'), (1, 'Tolima'), (1, 'Jaroslavl'), (1, 'Wisconsin'), (2, 'Rabat-Salé-Zammour-Z'), (1, 'Rhône-Alpes'), (1, 'Tšuvassia'), (1, 'Hsinchu'), (2, 'Veracruz'), (1, 'Haute-Zaïre'), (2, 'Paraná'), (1, 'Riyadh'), (1, 'New Mexico'), (3, 'Tokyo-to'), (1, 'Durango'), (1, 'Auckland'), (1, 'Hanoi'), (1, 'Montserrado'), (7, 'Gauteng'), (1, 'Campania'), (1, 'Harare'), (2, 'Bolívar'), (4, 'Guangdong'), (1, 'Fars'), (1, 'Querétaro de Arteaga'), (1, 'Kaohsiung'), (1, 'Tunis'), (1, 'Smolensk'), (1, 'Qaraghandy'), (1, 'Lambayeque'), (1, 'Lugansk'), (1, 'Pyongyang-si'), (1, 'Maritime'), (1, 'al-Zarqa'), (1, 'Sisilia'), (12, 'Liaoning'), (1, 'Chisinau'), (1, 'Voronez'), (1, 'Nara'), (1, 'Bukarest'), (1, 'Midi-Pyrénées'), (2, 'Santa Fé'), (1, 'Wien'), (8, 'Rio de Janeiro'), (1, 'Quintana Roo'), (1, 'Habarovsk'), (1, 'British Colombia'), (1, 'West Azerbaidzan'), (5, 'Gujarat'), (1, 'Ashanti'), (1, 'District of Columbia'), (1, 'East Kasai'), (1, 'Perak'), (7, 'England'), (1, 'Sanaa'), (1, 'Miranda'), (1, 'Oriental'), (1, 'Kowloon and New Kowl'), (1, 'Perm'), (2, 'Florida'), (1, 'Primorje'), (1, 'Hongkong'), (3, 'Inner Mongolia'), (1, 'Udmurtia'), (1, 'Riika'), (1, 'Cochabamba'), (1, 'Baluchistan'), (13, 'São Paulo'), (1, 'Haiphong'), (1, 'Illinois'), (1, 'Kyoto'), (2, 'Kemerovo'), (1, 'West Australia'), (1, 'Santa Cruz'), (1, 'Kwangju'), (1, 'Guayas'), (1, 'Amman'), (1, 'Constantine'), (2, 'Dnipropetrovsk'), (1, 'Kwara & Kogi'), (1, 'Norte de Santander'), (2, 'Fujian'), (1, 'Mato Grosso do Sul'), (1, 'Abu Dhabi'), (1, 'Pusan'), (1, 'Eskisehir'), (4, 'West Java'), (1, 'Hamadan'), (1, 'Rjazan'), (1, 'Nairobi'), (1, 'Ninawa'), (1, 'Aragua'), (1, 'Dhaka'), (1, 'Luanda'), (1, 'Atlantique'), (2, 'La Paz'), (1, 'La Libertad'), (1, 'Nampo-si'), (2, 'Western'), (1, 'Lusaka'), (1, 'Bursa'), (1, 'Kayseri'), (1, 'Provence-Alpes-Côte'), (1, 'Sanliurfa'), (1, 'Lagos'), (1, 'Maranhão'), (1, 'Kumamoto'), (3, 'Arizona'), (5, 'Anhui'), (1, 'Noord-Holland'), (1, '–'), (1, 'Hamgyong P'), (1, 'Maekel'), (1, 'Dubai'), (1, 'Pichincha'), (1, 'North Carolina'), (4, 'Hunan'), (1, 'Hamburg'), (1, 'Québec'), (1, 'Herson'), (4, 'Jilin'), (1, 'West Götanmaan län'), (1, 'Altai'), (1, 'Littoral'), (1, 'Centre'), (6, 'Texas'), (1, 'Asunción'), (1, 'Rostov-na-Donu'), (1, 'Aragonia'), (2, 'Guizhou'), (1, 'Aden'), (1, 'Murcia'), (1, 'Nevada'), (1, 'Viangchan'), (1, 'San Luis Potosí'), (1, 'Leinster'), (1, 'Antioquia'), (1, 'Kalimantan Timur'), (1, 'Zulia'), (1, 'Chongqing'), (1, 'Tucumán'), (1, 'Toskent Shahri'), (1, 'Greater Accra'), (2, 'Tennessee'), (1, 'Taichung'), (1, 'Tula'), (2, 'Chhatisgarh'), (1, 'Sumatera Barat'), (1, 'Grad Sofija'), (2, 'Bahia'), (1, 'Wilayah Persekutuan'), (1, 'Indiana'), (1, 'Carabobo'), (1, 'Tver'), (1, 'Namangan'), (1, 'Khulna'), (1, 'Irbil'), (1, 'Eastern Cape'), (1, 'Georgia'), (1, 'Coast'), (3, 'Santiago'), (1, 'South Australia'), (1, 'Meknès-Tafilalet'), (2, 'East Java'), (1, 'Goiás'), (1, 'Hessen'), (1, 'Kerman'), (2, 'Tamaulipas'), (1, 'Kurgan'), (1, 'Kursk'), (1, 'Odesa'), (1, 'Pomorskie'), (1, 'Yogyakarta'), (3, 'Sichuan'), (12, 'National Capital Reg'), (5, 'Kanagawa'), (1, 'Hamgyong N'), (5, 'Oyo & Osun'), (1, 'Piauí'), (1, 'Ulaanbaatar'), (1, 'Lampung'), (1, 'Novosibirsk'), (1, 'Wielkopolskie'), (1, 'Aguascalientes'), (1, 'Krasnojarsk'), (1, 'Gaziantep'), (3, 'Guangxi'), (1, 'Islamabad'), (1, 'Oran'), (1, 'Ceará'), (1, 'Virginia'), (1, 'Basra'), (1, 'Port Said'), (6, 'Hebei'), (12, 'Buenos Aires'), (1, 'La Habana'), (4, 'KwaZulu-Natal'), (1, 'Mandalay'), (1, 'Zachodnio-Pomorskie'), (1, 'Île-de-France'), (1, 'al-Qalyubiya'), (1, 'Irkutsk'), (1, 'Konya'), (1, 'Tbilisi'), (1, 'Peking'), (1, 'Ouest'), (1, 'Sumatera Selatan'), (1, 'Bulawayo'), (1, 'Qinghai'), (9, 'Heilongjiang'), (1, 'Cortés'), (1, 'Djibouti'), (2, 'Pará'), (1, 'Panamá'), (1, 'Western Mindanao'), (1, 'Lara'), (1, 'Sergipe'), (2, 'Andalusia'), (1, 'Vilna'), (2, 'Fukuoka'), (1, 'Ahal'), (1, 'Valle'), (1, 'Casablanca'), (1, 'Distrito Central'), (7, 'Henan'), (2, 'Lisboa'), (1, 'Kadiogo'), (1, 'Michigan'), (1, 'Saratov'), (1, 'Kalimantan Barat'), (1, 'Chollabuk'), (2, 'Alberta'), (8, 'California'), (2, 'Krasnodar'), (1, 'Kyongsangbuk'), (1, 'Jakarta Raya'), (12, 'Uttar Pradesh'), (1, 'Yerevan'), (1, 'al-Sulaymaniya'), (2, 'Okayama'), (5, 'Rajasthan'), (1, 'Ningxia'), (2, 'Saksi'), (1, 'Skopje'), (1, 'al-Daqahliya'), (1, 'Liguria'), (1, 'San Salvador'), (1, 'Tianjin'), (1, 'Rio Grande do Norte'), (1, 'Montevideo'), (1, 'East Azerbaidzan'), (3, 'Pernambuco'), (1, 'Dolnoslaskie'), (4, 'Chiba'), (1, 'Ishikawa'), (3, 'Guanajuato'), (1, 'Newmaa'), (1, 'Lima'), (1, 'Bamako'), (1, 'Lipetsk'), (1, 'Brazzaville'), (1, 'Toscana'), (1, 'Lubelskie'), (2, 'Southern Tagalog'), (1, 'Gilan'), (1, 'Ho Chi Minh City'), (1, 'Phnom Penh'), (2, 'Tatarstan'), (1, 'Esfahan'), (1, 'Chandigarh'), (3, 'Nuevo León'), (1, 'Tabasco'), (1, 'Niedersachsen')",select (count( *) as ?aggregation_all) ?t1_district where { ?t1 a dbo:city . ?t1 dbo:city\#district ?t1_district . ?t1 dbo:city\#population ?t1_population . FILTER(?t1_population > ?aggregation_t22_population_53) .       {select (avg( ?t22_population) as ?aggregation_t22_population_53 ) where { ?t22 a dbo:city . ?t22 dbo:city\#population ?t22_population .        }    } } group by ?t1_district,"(1, 'Kabol'), (1, 'Noord-Holland'), (2, 'Zuid-Holland'), (1, 'Alger'), (1, 'Oran'), (1, 'Constantine'), (1, 'Luanda'), (1, 'Dubai'), (1, 'Abu Dhabi'), (4, 'Distrito Federal'), (12, 'Buenos Aires'), (1, 'Córdoba'), (2, 'Santa Fé'), (1, 'Tucumán'), (1, 'Salta'), (1, 'Yerevan'), (1, 'New South Wales'), (1, 'Victoria'), (1, 'Queensland'), (1, 'West Australia'), (1, 'South Australia'), (1, 'Baki'), (1, 'Dhaka'), (1, 'Chittagong'), (1, 'Khulna'), (1, 'Antwerpen'), (1, 'Atlantique'), (1, 'Santa Cruz'), (2, 'La Paz'), (1, 'Cochabamba'), (1, 'Federaatio'), (13, 'São Paulo'), (8, 'Rio de Janeiro'), (2, 'Bahia'), (4, 'Minas Gerais'), (1, 'Ceará'), (2, 'Paraná'), (3, 'Pernambuco'), (1, 'Rio Grande do Sul'), (1, 'Amazonas'), (2, 'Pará'), (1, 'Goiás'), (1, 'Maranhão'), (1, 'Alagoas'), (1, 'Piauí'), (1, 'Rio Grande do Norte'), (1, 'Mato Grosso do Sul'), (2, 'Paraíba'), (1, 'Mato Grosso'), (1, 'Sergipe'), (1, 'Santa Catarina'), (7, 'England'), (2, 'Scotland'), (1, 'Grad Sofija'), (1, 'Kadiogo'), (3, 'Santiago'), (1, 'Djibouti'), (1, 'Distrito Nacional'), (1, 'Guayas'), (1, 'Pichincha'), (1, 'Kairo'), (1, 'Aleksandria'), (1, 'Giza'), (1, 'al-Qalyubiya'), (1, 'Port Said'), (1, 'Suez'), (2, 'al-Gharbiya'), (1, 'al-Daqahliya'), (1, 'Luxor'), (1, 'San Salvador'), (1, 'Maekel'), (1, 'Madrid'), (1, 'Katalonia'), (1, 'Valencia'), (2, 'Andalusia'), (1, 'Aragonia'), (1, 'Baskimaa'), (1, 'Canary Islands'), (1, 'Murcia'), (1, 'Western Cape'), (7, 'Gauteng'), (1, 'Eastern Cape'), (4, 'KwaZulu-Natal'), (1, 'Addis Abeba'), (12, 'National Capital Reg'), (2, 'Southern Mindanao'), (1, 'Central Visayas'), (1, 'Western Mindanao'), (2, 'Southern Tagalog'), (1, 'Northern Mindanao'), (2, 'Western Visayas'), (1, 'Estuaire'), (1, 'Tbilisi'), (1, 'Greater Accra'), (1, 'Ashanti'), (1, 'Guatemala'), (1, 'Conakry'), (1, 'Ouest'), (1, 'Distrito Central'), (1, 'Cortés'), (1, 'Kowloon and New Kowl'), (1, 'Hongkong'), (1, 'Jakarta Raya'), (2, 'East Java'), (4, 'West Java'), (1, 'Sumatera Utara'), (1, 'Sumatera Selatan'), (2, 'Central Java'), (1, 'Sulawesi Selatan'), (1, 'Lampung'), (1, 'Sumatera Barat'), (1, 'Kalimantan Selatan'), (1, 'Riau'), (1, 'Bali'), (1, 'Yogyakarta'), (1, 'Kalimantan Barat'), (1, 'Kalimantan Timur'), (1, 'Jambi'), (13, 'Maharashtra'), (1, 'Delhi'), (3, 'West Bengali'), (5, 'Tamil Nadu'), (5, 'Andhra Pradesh'), (5, 'Gujarat'), (3, 'Karnataka'), (12, 'Uttar Pradesh'), (5, 'Rajasthan'), (5, 'Madhya Pradesh'), (11, 'Punjab'), (1, 'Bihar'), (1, 'Jammu and Kashmir'), (1, 'Haryana'), (2, 'Jharkhand'), (1, 'Assam'), (3, 'Kerala'), (1, 'Chandigarh'), (2, 'Chhatisgarh'), (2, 'Orissa'), (1, 'Baghdad'), (1, 'Ninawa'), (1, 'Irbil'), (1, 'al-Tamim'), (1, 'Basra'), (1, 'al-Sulaymaniya'), (2, 'Teheran'), (1, 'Khorasan'), (1, 'Esfahan'), (1, 'East Azerbaidzan'), (1, 'Fars'), (1, 'Khuzestan'), (1, 'Qom'), (1, 'Kermanshah'), (1, 'West Azerbaidzan'), (1, 'Sistan va Baluchesta'), (1, 'Gilan'), (1, 'Hamadan'), (1, 'Kerman'), (1, 'Markazi'), (1, 'Leinster'), (1, 'Jerusalem'), (1, 'Latium'), (1, 'Lombardia'), (1, 'Campania'), (1, 'Piemonte'), (1, 'Sisilia'), (1, 'Liguria'), (1, 'Emilia-Romagna'), (1, 'Toscana'), (1, 'Wien'), (3, 'Tokyo-to'), (5, 'Kanagawa'), (6, 'Osaka'), (2, 'Aichi'), (2, 'Hokkaido'), (1, 'Kyoto'), (4, 'Hyogo'), (2, 'Fukuoka'), (2, 'Hiroshima'), (1, 'Miyagi'), (4, 'Chiba'), (1, 'Kumamoto'), (2, 'Okayama'), (2, 'Shizuoka'), (1, 'Kagoshima'), (1, 'Niigata'), (3, 'Saitama'), (1, 'Ehime'), (1, 'Ishikawa'), (1, 'Tochigi'), (1, 'Oita'), (1, 'Nagasaki'), (1, 'Gifu'), (1, 'Wakayama'), (1, 'Nara'), (1, 'Fukushima'), (1, 'Nagano'), (1, 'Sanaa'), (1, 'Aden'), (1, 'Amman'), (1, 'al-Zarqa'), (1, 'Central Serbia'), (1, 'Phnom Penh'), (1, 'Littoral'), (1, 'Centre'), (1, 'Québec'), (2, 'Alberta'), (4, 'Ontario'), (1, 'Manitoba'), (1, 'British Colombia'), (1, 'Almaty Qalasy'), (1, 'Qaraghandy'), (1, 'South Kazakstan'), (1, 'Nairobi'), (1, 'Coast'), (1, 'Bangui'), (1, 'Shanghai'), (1, 'Peking'), (1, 'Chongqing'), (1, 'Tianjin'), (4, 'Hubei'), (9, 'Heilongjiang'), (12, 'Liaoning'), (4, 'Guangdong'), (3, 'Sichuan'), (7, 'Jiangsu'), (4, 'Jilin'), (2, 'Shaanxi'), (7, 'Shandong'), (3, 'Zhejiang'), (7, 'Henan'), (6, 'Hebei'), (3, 'Shanxi'), (1, 'Yunnan'), (4, 'Hunan'), (2, 'Jiangxi'), (2, 'Fujian'), (1, 'Gansu'), (2, 'Guizhou'), (5, 'Anhui'), (1, 'Xinxiang'), (3, 'Guangxi'), (3, 'Inner Mongolia'), (1, 'Qinghai'), (1, 'Ningxia'), (1, 'Hainan'), (1, 'Bishkek shaary'), (1, 'Santafé de Bogotá'), (1, 'Valle'), (1, 'Antioquia'), (1, 'Atlántico'), (2, 'Bolívar'), (1, 'Norte de Santander'), (1, 'Santander'), (1, 'Tolima'), (1, 'Risaralda'), (1, 'Magdalena'), (1, 'Brazzaville'), (1, 'Kouilou'), (1, 'Kinshasa'), (2, 'Shaba'), (1, 'East Kasai'), (1, 'Haute-Zaïre'), (1, 'West Kasai'), (1, 'Pyongyang-si'), (1, 'Hamgyong N'), (1, 'Hamgyong P'), (1, 'Nampo-si'), (1, 'Seoul'), (1, 'Pusan'), (1, 'Inchon'), (1, 'Taegu'), (1, 'Taejon'), (1, 'Kwangju'), (3, 'Kyongsangnam'), (7, 'Kyonggi'), (1, 'Chollabuk'), (1, 'Chungchongbuk'), (1, 'Kyongsangbuk'), (1, 'Attika'), (1, 'Central Macedonia'), (1, 'Grad Zagreb'), (1, 'La Habana'), (1, 'Santiago de Cuba'), (1, 'Viangchan'), (1, 'Riika'), (1, 'Beirut'), (1, 'Montserrado'), (1, 'Tripoli'), (1, 'Bengasi'), (1, 'Vilna'), (1, 'Kaunas'), (1, 'Macau'), (1, 'Antananarivo'), (1, 'Skopje'), (1, 'Blantyre'), (1, 'Lilongwe'), (1, 'Wilayah Persekutuan'), (1, 'Perak'), (1, 'Bamako'), (1, 'Casablanca'), (2, 'Rabat-Salé-Zammour-Z'), (1, 'Marrakech-Tensift-Al'), (1, 'Fès-Boulemane'), (1, 'Tanger-Tétouan'), (1, 'Meknès-Tafilalet'), (1, 'Oriental'), (1, 'Nouakchott'), (3, 'Jalisco'), (9, 'México'), (1, 'Puebla'), (2, 'Chihuahua'), (3, 'Baja California'), (3, 'Guanajuato'), (3, 'Nuevo León'), (3, 'Sinaloa'), (1, 'Guerrero'), (1, 'Yucatán'), (1, 'San Luis Potosí'), (1, 'Aguascalientes'), (1, 'Querétaro de Arteaga'), (1, 'Michoacán de Ocampo'), (2, 'Sonora'), (2, 'Coahuila de Zaragoza'), (1, 'Tabasco'), (1, 'Durango'), (2, 'Veracruz'), (1, 'Chiapas'), (2, 'Tamaulipas'), (1, 'Quintana Roo'), (1, 'Chisinau'), (1, 'Ulaanbaatar'), (2, 'Maputo'), (1, 'Sofala'), (1, 'Rangoon [Yangon]'), (1, 'Mandalay'), (2, 'Central'), (1, 'Managua'), (1, 'Niamey'), (1, 'Lagos'), (5, 'Oyo & Osun'), (1, 'Kano & Jigawa'), (1, 'Kwara & Kogi'), (1, 'Ogun'), (1, 'Rivers & Bayelsa'), (1, 'Kaduna'), (1, 'Anambra & Enugu & Eb'), (1, 'Ondo & Ekiti'), (1, 'Oslo'), (1, 'Abidjan'), (2, 'Sindh'), (1, 'Nothwest Border Prov'), (1, 'Baluchistan'), (1, 'Islamabad'), (1, 'Panamá'), (1, 'Asunción'), (1, 'Lima'), (1, 'Arequipa'), (1, 'La Libertad'), (1, 'Lambayeque'), (1, 'Callao'), (1, 'Loreto'), (2, 'Lisboa'), (1, 'San Juan'), (1, 'Mazowieckie'), (1, 'Lodzkie'), (1, 'Malopolskie'), (1, 'Dolnoslaskie'), (1, 'Wielkopolskie'), (1, 'Pomorskie'), (1, 'Zachodnio-Pomorskie'), (1, 'Kujawsko-Pomorskie'), (1, 'Lubelskie'), (1, 'Doha'), (1, 'Île-de-France'), (1, 'Provence-Alpes-Côte'), (1, 'Rhône-Alpes'), (1, 'Midi-Pyrénées'), (1, 'Bukarest'), (1, 'West Götanmaan län'), (1, 'Berliini'), (1, 'Hamburg'), (2, 'Baijeri'), (7, 'Nordrhein-Westfalen'), (1, 'Hessen'), (1, 'Baden-Württemberg'), (1, 'Bremen'), (1, 'Niedersachsen'), (2, 'Saksi'), (1, 'Lusaka'), (1, 'Riyadh'), (3, 'Mekka'), (1, 'Medina'), (1, 'al-Sharqiya'), (2, 'Cap-Vert'), (2, 'Western'), (1, '–'), (1, 'Bratislava'), (1, 'Banaadir'), (3, 'Khartum'), (1, 'Newmaa'), (1, 'Damascus'), (1, 'Aleppo'), (1, 'Hims'), (1, 'Karotegin'), (5, 'Taipei'), (1, 'Kaohsiung'), (1, 'Taichung'), (1, 'Tainan'), (1, 'Keelung'), (1, 'Hsinchu'), (1, 'Dar es Salaam'), (1, 'København'), (1, 'Bangkok'), (1, 'Maritime'), (1, 'Chari-Baguirmi'), (1, 'Hlavní mesto Praha'), (1, 'Jizní Morava'), (1, 'Tunis'), (1, 'Istanbul'), (1, 'Ankara'), (1, 'Izmir'), (1, 'Adana'), (1, 'Bursa'), (1, 'Gaziantep'), (1, 'Konya'), (1, 'Içel'), (1, 'Antalya'), (1, 'Diyarbakir'), (1, 'Kayseri'), (1, 'Eskisehir'), (1, 'Sanliurfa'), (1, 'Ahal'), (1, 'Kiova'), (1, 'Harkova'), (2, 'Dnipropetrovsk'), (3, 'Donetsk'), (1, 'Odesa'), (1, 'Zaporizzja'), (1, 'Lviv'), (1, 'Mykolajiv'), (1, 'Lugansk'), (1, 'Vinnytsja'), (1, 'Herson'), (1, 'Budapest'), (1, 'Montevideo'), (1, 'Auckland'), (1, 'Toskent Shahri'), (1, 'Namangan'), (1, 'Samarkand'), (1, 'Horad Minsk'), (1, 'Gomel'), (1, 'Mogiljov'), (1, 'Zulia'), (1, 'Lara'), (1, 'Carabobo'), (1, 'Miranda'), (1, 'Aragua'), (1, 'Moscow (City)'), (1, 'Pietari'), (1, 'Novosibirsk'), (1, 'Nizni Novgorod'), (2, 'Sverdlovsk'), (2, 'Samara'), (1, 'Omsk'), (2, 'Tatarstan'), (1, 'Baškortostan'), (2, 'Tšeljabinsk'), (1, 'Rostov-na-Donu'), (1, 'Perm'), (1, 'Volgograd'), (1, 'Voronez'), (1, 'Krasnojarsk'), (1, 'Saratov'), (1, 'Uljanovsk'), (1, 'Udmurtia'), (2, 'Krasnodar'), (1, 'Jaroslavl'), (1, 'Habarovsk'), (1, 'Primorje'), (1, 'Irkutsk'), (1, 'Altai'), (2, 'Kemerovo'), (1, 'Penza'), (1, 'Rjazan'), (1, 'Orenburg'), (1, 'Lipetsk'), (1, 'Tula'), (1, 'Tjumen'), (1, 'Astrahan'), (1, 'Tomsk'), (1, 'Kirov'), (1, 'Ivanovo'), (1, 'Tšuvassia'), (1, 'Brjansk'), (1, 'Tver'), (1, 'Kursk'), (1, 'Kaliningrad'), (1, 'Murmansk'), (1, 'Burjatia'), (1, 'Kurgan'), (1, 'Arkangeli'), (1, 'Smolensk'), (1, 'Ho Chi Minh City'), (1, 'Hanoi'), (1, 'Haiphong'), (1, 'Quang Nam-Da Nang'), (1, 'Harjumaa'), (1, 'New York'), (8, 'California'), (1, 'Illinois'), (6, 'Texas'), (1, 'Pennsylvania'), (3, 'Arizona'), (1, 'Michigan'), (1, 'Indiana'), (2, 'Florida'), (2, 'Ohio'), (1, 'Maryland'), (2, 'Tennessee'), (1, 'Wisconsin'), (1, 'Massachusetts'), (1, 'District of Columbia'), (1, 'Washington'), (2, 'Colorado'), (1, 'North Carolina'), (1, 'Oregon'), (2, 'Oklahoma'), (1, 'Louisiana'), (1, 'Nevada'), (1, 'New Mexico'), (1, 'Missouri'), (1, 'Virginia'), (1, 'Georgia'), (1, 'Nebraska'), (1, 'Minnesota'), (1, 'Hawaii'), (1, 'Harare'), (1, 'Bulawayo'), (1, 'Gaza')",extra,True,1,
407,world_1,Find the government form name and total population for each government form whose average life expectancy is longer than 72.,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","(464000, 'Nonmetropolitan Territory of France'), (1731000, 'Overseas Department of France'), (99000, 'Part of Denmark'), (2870000, 'Monarchy (Sultanate)'), (7160400, 'Federation'), (115072000, 'Socialistic Republic'), (320000, 'Nonmetropolitan Territory of The Netherlands'), (2441000, 'Emirate Federation'), (329000, 'US Territory'), (3947000, 'Commonwealth of the US'), (78000, 'Parliamentary Coprincipality'), (1972000, 'Constitutional Monarchy (Emirate)'), (617000, 'Monarchy (Emirate)'), (5605000, 'Socialistic State'), (7255000, 'Special Administrative Region of China'), (82516000, 'Constitutional Monarchy, Federation'), (193050, 'Dependent Territory of the UK')",select (sum( ?t1_population) as ?aggregation_t1_population_478 ) ?t1_governmentform where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#governmentform ?t1_governmentform . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy .        } group by ?t1_governmentform   having(avg( ?t1_lifeexpectancy)  > 72),"(320000, 'Nonmetropolitan Territory of The Netherlands'), (191000, 'Dependent Territory of the UK'), (78000, 'Parliamentary Coprincipality'), (2441000, 'Emirate Federation'), (329000, 'US Territory'), (82516000, 'Constitutional Monarchy, Federation'), (617000, 'Monarchy (Emirate)'), (2870000, 'Monarchy (Sultanate)'), (7160400, 'Federation'), (115072000, 'Socialistic Republic'), (99000, 'Part of Denmark'), (1731000, 'Overseas Department of France'), (7255000, 'Special Administrative Region of China'), (1972000, 'Constitutional Monarchy (Emirate)'), (5605000, 'Socialistic State'), (3947000, 'Commonwealth of the US'), (449000, 'Nonmetropolitan Territory of France')",medium,True,1,false_negative
408,world_1,Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","(3705025700, 67.441176470588, 'Asia'), (345780000, 70.946153846154, 'South America'), (30401150, 69.715, 'Oceania'), (784475000, 52.571929824561, 'Africa')",select (sum( ?t1_population) as ?aggregation_t1_population_332 ) (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_95 ) ?t1_continent where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#lifeexpectancy ?t1_lifeexpectancy .        } group by ?t1_continent   having(avg( ?t1_lifeexpectancy)  < 72),"(3705025700, 67.441176470588, 'Asia'), (784475000, 52.571929824561, 'Africa'), (345778000, 70.946153846154, 'South America'), (30377000, 69.715, 'Oceania')",medium,True,1,false_negative
409,world_1,What are the names and areas of countries with the top 5 largest area?,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","('Russian Federation', 17075400.0), ('Antarctica', 13120000.0), ('Canada', 9970610.0), ('China', 9572900.0), ('United States', 9363520.0)",select ?t1_name ?t1_surfacearea where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1,"('Russian Federation', 17075400.0)",medium,False,0,
410,world_1,What are names of countries with the top 3 largest population?,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,"('China',), ('India',), ('United States',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#population ?t1_population .        }   order by desc (?t1_population) limit 1,"('China',)",medium,False,0,
411,world_1,What are the names of the nations with the 3 lowest populations?,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,"('Heard Island and McDonald Islands',), ('Bouvet Island',), ('British Indian Ocean Territory',)",select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#population ?t1_population .        }   order by asc (?t1_population) limit 1,"('Antarctica',)",medium,False,0,
412,world_1,how many countries are in Asia?,SELECT count(*) FROM country WHERE continent  =  'Asia',"(51,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:country . ?t1 dbo:country\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        },"(51,)",easy,True,1,
413,world_1,What are the names of the countries that are in the continent of Europe and have a population of 80000?,SELECT Name FROM country WHERE continent  =  'Europe' AND Population  =  '80000',,select ?t1_name where { ?t1 a dbo:country . ?t1 dbo:country\#name ?t1_name . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#population ?t1_population . FILTER(?t1_continent = 'Europe' && ?t1_population = 80000) .        },,medium,True,1,
414,world_1,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000？,"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000","(480753000, 1344763.7222222222)",select (sum( ?t1_population) as ?aggregation_t1_population_18 ) (avg( ?t1_surfacearea) as ?aggregation_t1_surfacearea_191 ) where { ?t1 a dbo:country . ?t1 dbo:country\#population ?t1_population . ?t1 dbo:country\#surfacearea ?t1_surfacearea . ?t1 dbo:country\#continent ?t1_continent . ?t1 dbo:country\#surfacearea ?t1_surfacearea . FILTER(?t1_continent = 'North America' && ?t1_surfacearea > 3000) .        },"(480753000, 1344763.7222222222)",hard,True,1,
415,world_1,Which language is spoken by the largest number of countries?,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,"('English',)",select ?t1_language where { ?t1 a dbo:countrylanguage . ?t2 a dbo:country . ?t1 dbo:countrylanguage\#ref-countrycode ?t2 .  ?t1 dbo:countrylanguage\#language ?t1_language .        } group by ?t1_language  order by desc (count(*)) limit 1,"('English',)",hard,True,1,
416,world_1,What is the language spoken by the largest percentage of people in each country?,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode, Language","('Dutch', 'NLD', 95.6), ('Banja', 'IDN', 1.8), ('Nepali', 'BTN', 34.8), ('English', 'TON', 0.0), ('English', 'MDV', 0.0), ('Dutch', 'CAN', 0.5), ('English', 'VUT', 28.3), ('Spanish', 'NIC', 97.6), ('Meru', 'KEN', 5.5), ('Polish', 'AUT', 0.2), ('Hindi', 'ARE', 0.0), ('Lezgian', 'AZE', 2.3), ('Náhuatl', 'MEX', 1.8), ('Nyamwesi', 'TZA', 21.1), ('Kotokoli', 'TGO', 5.7), ('Bari', 'SDN', 2.5), ('Chokwe', 'COD', 1.8), ('Miao', 'CHN', 0.7), ('Crioulo', 'CPV', 100.0), ('Chamorro', 'MNP', 30.0), ('Mon-khmer', 'LAO', 16.5), ('Songhai-zerma', 'NER', 21.2), ('Minangkabau', 'IDN', 2.4), ('Urdu', 'PAK', 7.6), ('French', 'LBN', 0.0), ('Mari', 'RUS', 0.4), ('Tahitian', 'PYF', 46.4), ('Kongo', 'COD', 16.0), ('Slovene', 'HRV', 0.0), ('Arabic-French-English', 'TUN', 3.2), ('Creole English', 'PAN', 14.0), ('Gujarati', 'IND', 4.8), ('Khmer', 'VNM', 1.4), ('Swedish', 'NOR', 0.3), ('Romanian', 'AUT', 0.2), ('Somali', 'SOM', 98.3), ('Mende', 'SLE', 34.8), ('Spanish', 'ECU', 93.0), ('Malinke', 'GMB', 34.1), ('Arabic', 'OMN', 76.7), ('Zhuang', 'CHN', 1.4), ('Tsonga', 'MOZ', 12.4), ('Arabic', 'TUR', 1.4), ('Puyi', 'CHN', 0.2), ('Busansi', 'BFA', 3.5), ('Turkish', 'TUR', 87.6), ('Russian', 'GEO', 8.8), ('Swedish', 'DNK', 0.3), ('Italian', 'CHE', 7.7), ('Dutch', 'BEL', 59.2), ('Hindi', 'SUR', 0.0), ('Somali', 'ETH', 4.1), ('Greek', 'GRC', 98.5), ('Kiribati', 'KIR', 98.9), ('Mandarin Chinese', 'MAC', 1.2), ('Hindi', 'FJI', 43.7), ('Soga', 'UGA', 8.2), ('Kpelle', 'GIN', 4.6), ('Pangasinan', 'PHL', 1.8), ('Thai', 'LAO', 7.8), ('Pohnpei', 'FSM', 23.8), ('Ndebele', 'ZAF', 1.5), ('Tiv', 'NGA', 2.3), ('Somba', 'BEN', 6.7), ('Akan', 'CIV', 30.0), ('Tatar', 'UZB', 1.8), ('Gaeli', 'GBR', 0.1), ('Mongo', 'COD', 13.5), ('Ilocano', 'PHL', 9.3), ('Soninke', 'SEN', 1.3), ('Slovak', 'HUN', 0.1), ('Bubi', 'GNQ', 8.7), ('Slovak', 'YUG', 0.7), ('Ukrainian', 'BLR', 1.3), ('Zande', 'COD', 6.1), ('Moba', 'TGO', 5.4), ('Hakka', 'HKG', 1.6), ('Burmese', 'MMR', 69.0), ('Kurdish', 'SYR', 9.0), ('English', 'VCT', 0.0), ('Korean', 'USA', 0.3), ('Gisu', 'UGA', 4.5), ('Kongo', 'COG', 51.5), ('Khmer', 'THA', 1.3), ('Persian', 'IRQ', 0.8), ('Sunda', 'IDN', 15.8), ('Tadzhik', 'KGZ', 0.8), ('Armenian', 'JOR', 1.0), ('Belorussian', 'UKR', 0.3), ('Adja', 'BEN', 11.1), ('Mahoré', 'MYT', 41.9), ('Wolea', 'FSM', 3.7), ('Irish', 'IRL', 1.6), ('Russian', 'UKR', 32.9), ('Ewe', 'TGO', 23.2), ('Spanish', 'PAN', 76.8), ('Kiribati', 'TUV', 7.5), ('Russian', 'EST', 27.8), ('Arabic', 'DZA', 86.0), ('German', 'KAZ', 3.1), ('Maka', 'CMR', 4.9), ('Russian', 'UZB', 10.9), ('Russian', 'RUS', 86.6), ('Araucan', 'CHL', 9.6), ('Zulu', 'SWZ', 2.0), ('Turkish', 'DNK', 0.8), ('Kanuri', 'NER', 4.4), ('Dutch', 'ANT', 0.0), ('Kannada', 'IND', 3.9), ('Persian', 'IRN', 45.7), ('Galecian', 'ESP', 6.4), ('Malay', 'CCK', 0.0), ('Caprivi', 'NAM', 4.7), ('Kazakh', 'TKM', 2.0), ('Chinese', 'KHM', 3.1), ('Shona', 'BWA', 12.3), ('Afar', 'ERI', 4.3), ('Ami', 'TWN', 0.6), ('Teso', 'UGA', 6.0), ('Ibo', 'NGA', 18.1), ('Belorussian', 'EST', 1.4), ('Mbum', 'CAF', 6.4), ('Nyanja', 'MOZ', 3.3), ('Creole English', 'JAM', 94.2), ('French', 'BEL', 32.6), ('Romani', 'ROM', 0.7), ('Balochi', 'PAK', 3.0), ('Creole French', 'MUS', 70.6), ('Tsonga', 'ZAF', 4.3), ('Kamba', 'KEN', 11.2), ('Punjabi', 'IND', 2.8), ('Southsotho', 'ZAF', 7.6), ('German', 'LIE', 89.0), ('Arabic', 'GIB', 7.4), ('Romani', 'BGR', 3.7), ('Russian', 'AZE', 3.0), ('Nuer', 'SDN', 4.9), ('Turkish', 'LIE', 2.5), ('Azerbaijani', 'AZE', 89.0), ('Italian', 'CAN', 1.7), ('Malay', 'MYS', 58.4), ('Portuguese', 'TMP', 0.0), ('Comorian-Arabic', 'COM', 1.6), ('Spanish', 'PRY', 55.1), ('Spanish', 'CAN', 0.7), ('Senufo and Minianka', 'MLI', 12.0), ('Temne', 'SLE', 31.8), ('Japanese', 'JPN', 99.1), ('Indian Languages', 'ARG', 0.3), ('Russian', 'LVA', 32.5), ('Pitcairnese', 'PCN', 0.0), ('Dzongkha', 'BTN', 50.0), ('German', 'ITA', 0.5), ('Ketšua', 'ECU', 7.0), ('Nyanja', 'ZWE', 2.2), ('Spanish', 'USA', 7.5), ('Edo', 'NGA', 3.3), ('Malay', 'IDN', 12.1), ('Greek', 'AUS', 1.6), ('English', 'PLW', 3.2), ('Swedish', 'FIN', 5.7), ('Creole English', 'GRD', 100.0), ('Norwegian', 'SJM', 0.0), ('Hausa', 'NER', 53.1), ('Creole French', 'GLP', 95.0), ('[South]Mande', 'CIV', 7.7), ('Swazi', 'SWZ', 89.9), ('Albaniana', 'ITA', 0.2), ('Japanese', 'USA', 0.2), ('Guaymí', 'PAN', 5.3), ('Yucatec', 'MEX', 1.1), ('Hindi', 'JAM', 1.9), ('Dari', 'AFG', 32.1), ('Polish', 'POL', 97.6), ('English', 'DNK', 0.3), ('Chinese', 'THA', 12.1), ('Ful', 'GMB', 16.2), ('Ndebele', 'BWA', 1.3), ('Hindi', 'MUS', 1.2), ('Turkish', 'AUT', 1.5), ('Hindko', 'PAK', 2.4), ('Berberi', 'DZA', 14.0), ('French', 'MYT', 20.3), ('Spanish', 'VEN', 96.9), ('Spanish', 'URY', 95.7), ('Samoan', 'WSM', 47.5), ('English', 'MYS', 1.6), ('Sumo', 'NIC', 0.2), ('Bhojpuri', 'NPL', 7.5), ('Marendje', 'MOZ', 3.5), ('Belorussian', 'LVA', 4.1), ('Zande', 'SDN', 2.7), ('Gio', 'LBR', 7.9), ('Italian', 'DEU', 0.7), ('Danish', 'DNK', 93.5), ('Spanish', 'HND', 97.2), ('Mantšu', 'CHN', 0.9), ('Khmer', 'KHM', 88.6), ('Creole English', 'NIC', 0.5), ('Albaniana', 'YUG', 16.5), ('Romanian', 'HUN', 0.1), ('Dagara', 'BFA', 3.1), ('Romanian', 'MDA', 61.9), ('Lugbara', 'UGA', 4.7), ('Arabic', 'LBY', 96.0), ('Tagalog', 'USA', 0.4), ('Romanian', 'ROM', 90.7), ('Italian', 'USA', 0.6), ('Vietnamese', 'VNM', 86.8), ('Papuan Languages', 'SLB', 8.6), ('Arabic', 'BEL', 1.6), ('Portuguese', 'FRA', 1.2), ('Catalan', 'ESP', 16.9), ('Italian', 'AUS', 2.2), ('Avarian', 'RUS', 0.4), ('Rwanda', 'COD', 10.3), ('Vietnamese', 'KHM', 5.5), ('Serbo-Croatian', 'AUT', 2.2), ('Embera', 'PAN', 0.6), ('Tatar', 'KAZ', 2.0), ('Malinke', 'LBR', 5.1), ('Chinese', 'NRU', 8.5), ('Kirgiz', 'KGZ', 59.7), ('Marshallese', 'MHL', 96.8), ('Malinke', 'GNB', 6.9), ('Samoan', 'ASM', 90.6), ('Russian', 'BLR', 32.0), ('Pampango', 'PHL', 3.0), ('Sena', 'MOZ', 9.4), ('Serbo-Croatian', 'ROM', 0.1), ('Gilaki', 'IRN', 5.3), ('Hindi', 'IND', 39.9), ('Tadzhik', 'TJK', 62.2), ('Nung', 'VNM', 1.1), ('Serbo-Croatian', 'MKD', 2.0), ('Spanish', 'SLV', 100.0), ('Canton Chinese', 'HKG', 88.7), ('Min', 'TWN', 66.7), ('Danish', 'NOR', 0.4), ('Russian', 'KAZ', 34.7), ('Grebo', 'LBR', 8.9), ('Otomí', 'MEX', 0.4), ('Haya', 'TZA', 5.9), ('Chinese', 'PYF', 2.9), ('Bengali', 'BGD', 97.7), ('Korean', 'GUM', 3.3), ('Turkmenian', 'IRN', 1.6), ('English', 'WSM', 0.6), ('Arabic', 'JOR', 97.9), ('English', 'BRN', 3.1), ('Bulgariana', 'BGR', 83.2), ('Quiché', 'GTM', 10.1), ('Arabic', 'EGY', 98.8), ('Philippene Languages', 'MNP', 34.1), ('Gagauzi', 'MDA', 3.2), ('English', 'FLK', 0.0), ('English', 'USA', 86.2), ('Russian', 'ISR', 8.9), ('Fang', 'GNQ', 84.8), ('Kru', 'CIV', 10.5), ('Chinese', 'USA', 0.6), ('Arabic', 'DJI', 10.6), ('Belorussian', 'BLR', 65.6), ('Pashto', 'PAK', 13.1), ('Arabic', 'FRA', 2.5), ('Trukese', 'FSM', 41.6), ('Gorane', 'TCD', 6.2), ('Malay', 'SGP', 14.1), ('Philippene Languages', 'PLW', 9.2), ('Turkish', 'CYP', 22.4), ('English', 'ASM', 3.1), ('Seselwa', 'SYC', 91.3), ('Garifuna', 'BLZ', 6.8), ('English', 'AIA', 0.0), ('Kiga', 'UGA', 8.3), ('Bullom-sherbro', 'SLE', 3.8), ('Crioulo', 'GNB', 36.4), ('Russian', 'KGZ', 16.2), ('Asami', 'BTN', 15.2), ('English', 'GIB', 88.9), ('Ndebele', 'ZWE', 16.2), ('Diola', 'GMB', 9.2), ('Mortlock', 'FSM', 7.6), ('Tamil', 'REU', 0.0), ('Nepali', 'NPL', 50.4), ('English', 'ABW', 9.5), ('French', 'AND', 6.2), ('Nsenga', 'ZMB', 4.3), ('Creole French', 'BHS', 10.3), ('Canton Chinese', 'AUS', 1.1), ('Mongolian', 'CHN', 0.4), ('Karen', 'MMR', 6.2), ('Luchazi', 'AGO', 2.4), ('English', 'NZL', 87.0), ('Caribbean', 'GUY', 2.2), ('Tibetan', 'CHN', 0.4), ('English', 'GBR', 97.3), ('Chakma', 'BGD', 0.4), ('Bashkir', 'RUS', 0.7), ('Kanem-bornu', 'TCD', 9.0), ('Joruba', 'GHA', 1.3), ('Ukrainian', 'EST', 2.8), ('Bengali', 'IND', 8.2), ('Shan', 'MMR', 8.5), ('English', 'LSO', 0.0), ('Serbo-Croatian', 'HRV', 95.9), ('Punjabi', 'CAN', 0.7), ('Spanish', 'VIR', 13.3), ('Sranantonga', 'SUR', 81.0), ('Uzbek', 'KGZ', 14.1), ('Akan', 'GHA', 52.4), ('Ainu', 'JPN', 0.0), ('Uzbek', 'AFG', 8.8), ('Kekchí', 'GTM', 4.9), ('Norwegian', 'NOR', 96.6), ('Maori', 'NZL', 4.3), ('Chinese', 'CHN', 92.0), ('Kalenjin', 'KEN', 10.8), ('Luimbe-nganguela', 'AGO', 5.4), ('Arabic', 'TUN', 69.9), ('Malagasy', 'MDG', 98.9), ('Masai', 'KEN', 1.6), ('Portuguese', 'LUX', 13.0), ('Polish', 'LTU', 7.0), ('Creole French', 'MTQ', 96.6), ('Songhai', 'MLI', 6.9), ('Tongan', 'ZMB', 11.0), ('Cebuano', 'PHL', 23.3), ('Tatar', 'RUS', 3.2), ('Bambara', 'MLI', 31.8), ('Singali', 'LKA', 60.3), ('Urdu', 'QAT', 0.0), ('Italian', 'LUX', 4.6), ('Miao', 'VNM', 0.9), ('Portuguese', 'MAC', 2.3), ('Ketšua', 'PER', 16.4), ('Luxembourgish', 'LUX', 64.4), ('Mandyako', 'GNB', 4.9), ('Romani', 'ITA', 0.2), ('Creole English', 'VCT', 99.1), ('Portuguese', 'USA', 0.2), ('English', 'MSR', 0.0), ('Dhivehi', 'MDV', 100.0), ('Watyi', 'TGO', 10.3), ('Turkmenian', 'TKM', 76.7), ('Man', 'VNM', 0.7), ('Kabyé', 'TGO', 13.8), ('Thai', 'THA', 52.6), ('Tamashek', 'MLI', 7.3), ('Telugu', 'IND', 7.8), ('Turkish', 'FRA', 0.4), ('Portuguese', 'BRA', 97.5), ('Kuranko', 'SLE', 3.4), ('Nyanja', 'ZMB', 7.8), ('Diola', 'SEN', 5.0), ('Nyaneka-nkhumbi', 'AGO', 5.4), ('Tamil', 'MUS', 0.8), ('Czech', 'CZE', 81.2), ('Hakka', 'TWN', 11.0), ('Turkmenian', 'AFG', 1.9), ('Lao', 'THA', 26.9), ('Swahili', 'TZA', 8.8), ('Mongolian', 'MNG', 78.8), ('Gur', 'CIV', 11.7), ('Ukrainian', 'LTU', 1.1), ('Creole English', 'COL', 0.1), ('Soninke', 'GMB', 7.6), ('Gbaya', 'CAF', 23.8), ('Bali', 'IDN', 1.7), ('Maguindanao', 'PHL', 1.4), ('Kazakh', 'KGZ', 0.8), ('Hungarian', 'AUT', 0.4), ('English', 'MCO', 6.5), ('Goajiro', 'VEN', 0.4), ('Spanish', 'CHL', 89.7), ('English', 'SYC', 3.8), ('Mossi', 'GHA', 15.8), ('Kavango', 'NAM', 9.7), ('Ronga', 'MOZ', 3.7), ('English', 'IRL', 98.4), ('Hungarian', 'ROM', 7.2), ('French', 'RWA', 0.0), ('Hadjarai', 'TCD', 6.7), ('Creole English', 'KNA', 100.0), ('Armenian', 'AZE', 2.0), ('Rapa nui', 'CHL', 0.2), ('Malay', 'BRN', 45.5), ('Creole English', 'ATG', 95.7), ('Mam', 'GTM', 2.7), ('Danish', 'GRL', 12.5), ('English', 'NRU', 7.5), ('French', 'NCL', 34.3), ('Kikuyu', 'KEN', 20.9), ('English', 'SHN', 0.0), ('Yao', 'MWI', 13.2), ('Dariganga', 'MNG', 1.4), ('Italian', 'MCO', 16.1), ('Atayal', 'TWN', 0.4), ('Chewa', 'ZMB', 5.7), ('Serbo-Croatian', 'AUS', 0.6), ('Zulu', 'ZAF', 22.7), ('Bajan', 'BRB', 95.1), ('Chilluk', 'SDN', 1.7), ('Khasi', 'BGD', 0.1), ('Ukrainian', 'KAZ', 5.0), ('Susu', 'GIN', 11.0), ('Creole English', 'BHS', 89.7), ('Samoan-English', 'WSM', 52.0), ('Ukrainian', 'KGZ', 1.7), ('English', 'MLT', 2.1), ('Czech', 'AUT', 0.2), ('English', 'ANT', 7.8), ('Arabic', 'DNK', 0.7), ('Bajad', 'MNG', 1.9), ('Nama', 'NAM', 12.4), ('Spanish', 'CRI', 97.5), ('Wallis', 'WLF', 0.0), ('Hiligaynon', 'PHL', 9.1), ('Assyrian', 'IRQ', 0.8), ('Polish', 'CAN', 0.7), ('Greek', 'DEU', 0.4), ('Portuguese', 'CAN', 0.7), ('Punu-sira-nzebi', 'GAB', 17.1), ('Turkish', 'MKD', 4.0), ('Maya Languages', 'BLZ', 9.6), ('English', 'VGB', 0.0), ('Fang', 'GAB', 35.8), ('Tamang', 'NPL', 4.9), ('Creole English', 'CRI', 2.0), ('Kurdish', 'TUR', 10.6), ('Haiti Creole', 'HTI', 100.0), ('Udmur', 'RUS', 0.3), ('Lithuanian', 'LTU', 81.6), ('Fijian', 'FJI', 50.8), ('Ha', 'TZA', 3.5), ('Swahili', 'BDI', 0.0), ('Armenian', 'GEO', 6.8), ('German', 'DEU', 91.3), ('Bulgariana', 'MDA', 1.6), ('Arabic', 'PAN', 0.6), ('Moravian', 'CZE', 12.9), ('Southern Slavic Languages', 'SWE', 1.3), ('French', 'ITA', 0.5), ('Ketšua', 'BOL', 8.1), ('Portuguese', 'GNB', 8.1), ('Kazakh', 'RUS', 0.4), ('Polish', 'CZE', 0.6), ('Italian', 'ITA', 94.1), ('Malagasy', 'REU', 1.4), ('Gogo', 'TZA', 3.9), ('Orija', 'IND', 3.3), ('Kono-vai', 'SLE', 5.1), ('Albaniana', 'ALB', 97.9), ('Tatar', 'KGZ', 1.3), ('Creole French', 'LCA', 80.0), ('English', 'TCA', 0.0), ('Ukrainian and Russian', 'SVK', 0.6), ('Tamil', 'SGP', 7.4), ('Soninke', 'MLI', 8.7), ('Palau', 'PLW', 82.2), ('San', 'NAM', 1.9), ('Ful', 'MLI', 13.9), ('Italian', 'BEL', 2.4), ('Ambo', 'AGO', 2.4), ('English', 'NIU', 0.0), ('French', 'MTQ', 0.0), ('Ful', 'BFA', 9.7), ('Arabic', 'ARE', 42.0), ('Spanish', 'ARG', 96.8), ('Herero', 'NAM', 8.0), ('French', 'GLP', 0.0), ('Malenasian Languages', 'NCL', 45.4), ('Xhosa', 'ZAF', 17.7), ('Arabic', 'TCD', 12.3), ('Lomwe', 'MOZ', 7.8), ('Masana', 'CMR', 3.9), ('Armenian', 'ARM', 93.4), ('Punjabi', 'PAK', 48.2), ('Turkish', 'NLD', 0.8), ('Caribbean', 'COL', 0.1), ('Serbo-Croatian', 'YUG', 75.2), ('Malinke', 'SEN', 3.8), ('Mixtec', 'MEX', 0.6), ('English', 'BRB', 0.0), ('Mandara', 'CMR', 5.7), ('English', 'BHR', 0.0), ('Georgiana', 'GEO', 71.7), ('Hungarian', 'YUG', 3.4), ('Danish', 'FRO', 0.0), ('Kiribati', 'NRU', 17.9), ('Tamil', 'IND', 6.3), ('Madura', 'IDN', 4.3), ('Chamorro', 'GUM', 29.6), ('Aizo', 'BEN', 8.7), ('Turkish', 'BEL', 0.9), ('Spanish', 'DOM', 98.0), ('English', 'PRI', 47.4), ('Romani', 'CZE', 0.3), ('Turkish', 'GRC', 0.9), ('Lao-Soung', 'LAO', 5.2), ('Arabic', 'QAT', 40.7), ('Italian', 'BRA', 0.4), ('Newari', 'NPL', 3.7), ('Afrikaans', 'NAM', 9.5), ('Nkole', 'UGA', 10.7), ('Tokelau', 'TKL', 0.0), ('Macedonian', 'YUG', 0.5), ('Guaraní', 'PRY', 40.1), ('Santhali', 'BGD', 0.1), ('Tongan', 'ASM', 3.1), ('Rwanda', 'RWA', 100.0), ('Malinke', 'GIN', 23.2), ('French', 'CHE', 19.2), ('Balante', 'GNB', 14.6), ('Hehet', 'TZA', 6.9), ('Russian', 'TJK', 9.7), ('Albaniana', 'MKD', 22.9), ('Uzbek', 'KAZ', 2.3), ('Joruba', 'NGA', 21.4), ('Spanish', 'BOL', 87.7), ('Arabic', 'KWT', 78.1), ('Slovene', 'SVN', 87.9), ('Fukien', 'HKG', 1.9), ('Vietnamese', 'AUS', 0.8), ('Waray-waray', 'PHL', 3.8), ('French', 'SPM', 0.0), ('Kazakh', 'UZB', 3.8), ('Greenlandic', 'GRL', 87.5), ('Korean', 'MNP', 6.5), ('Slovene', 'AUT', 0.4), ('Brahui', 'PAK', 1.2), ('Sidamo', 'ETH', 3.2), ('Turkana', 'KEN', 1.4), ('Spanish', 'CUB', 100.0), ('Cakchiquel', 'GTM', 8.9), ('Osseetti', 'GEO', 2.4), ('Norwegian', 'DNK', 0.3), ('Ful', 'GNB', 16.6), ('Kirundi', 'BDI', 98.1), ('Mbundu', 'AGO', 21.6), ('Carolinian', 'MNP', 4.8), ('Mandjia', 'CAF', 14.8), ('Miskito', 'NIC', 1.6), ('Shambala', 'TZA', 4.3), ('Limba', 'SLE', 8.3), ('German', 'NAM', 0.9), ('Fur', 'SDN', 2.1), ('Hausa', 'NGA', 21.1), ('Hungarian', 'HUN', 98.5), ('Japanese', 'BRA', 0.4), ('Malay', 'THA', 3.6), ('Chinese', 'PRK', 0.1), ('Teke', 'COD', 2.7), ('Turkish', 'DEU', 2.6), ('Portuguese', 'CPV', 0.0), ('Kissi', 'GIN', 6.0), ('Spanish', 'ABW', 7.4), ('Tuvalu', 'TUV', 92.5), ('Indian Languages', 'BRA', 0.2), ('Soqutri', 'YEM', 0.0), ('Chinese', 'MNP', 7.1), ('Sotho', 'LSO', 85.0), ('Chinese', 'KOR', 0.1), ('Bura', 'NGA', 1.6), ('Polish', 'DEU', 0.3), ('Kurdish', 'IRN', 9.1), ('English', 'NFK', 0.0), ('Ukrainian', 'CAN', 0.6), ('Polynesian Languages', 'NCL', 11.6), ('English', 'TKL', 0.0), ('French', 'SYC', 1.3), ('English', 'ZWE', 2.2), ('Venda', 'ZAF', 2.2), ('Uighur', 'CHN', 0.6), ('Comorian', 'COM', 75.0), ('Gurma', 'TGO', 3.4), ('Arabic', 'LBN', 93.0), ('Silesiana', 'CZE', 0.4), ('Gurma', 'GHA', 3.3), ('Estonian', 'EST', 65.3), ('Spanish', 'SWE', 0.6), ('Spanish', 'AND', 44.6), ('Tujia', 'CHN', 0.5), ('Asami', 'IND', 1.5), ('Swedish', 'SWE', 89.5), ('Soninke', 'MRT', 2.7), ('Creole French', 'DMA', 0.0), ('Indian Languages', 'GUF', 1.9), ('Arawakan', 'COL', 0.1), ('Hungarian', 'SVN', 0.5), ('Ukrainian', 'RUS', 1.3), ('Uzbek', 'TJK', 23.2), ('Rundi', 'COD', 3.8), ('Romani', 'MKD', 2.3), ('French', 'LUX', 4.2), ('Chinese', 'SGP', 77.1), ('Malagasy', 'MYT', 16.1), ('Warrau', 'VEN', 0.1), ('Pashto', 'AFG', 52.4), ('Icelandic', 'ISL', 95.7), ('Polish', 'UKR', 0.1), ('German', 'CAN', 1.6), ('German', 'LUX', 2.3), ('Saame', 'FIN', 0.0), ('Chinese', 'CRI', 0.2), ('Malay-English', 'BRN', 28.8), ('Javanese', 'IDN', 39.4), ('German', 'ROM', 0.4), ('German', 'POL', 1.3), ('Spanish', 'PER', 79.8), ('Circassian', 'JOR', 1.0), ('French', 'STP', 0.7), ('Luguru', 'TZA', 4.9), ('Aimará', 'CHL', 0.5), ('Mano', 'LBR', 7.2), ('Ful', 'NGA', 11.3), ('Greek', 'CYP', 74.1), ('Nubian Languages', 'SDN', 8.1), ('Arabic', 'ISR', 18.0), ('Miskito', 'HND', 0.2), ('Catalan', 'AND', 32.3), ('Sardinian', 'ITA', 2.7), ('Hui', 'CHN', 0.8), ('Macedonian', 'BGR', 2.6), ('Hebrew', 'PSE', 4.1), ('German', 'BRA', 0.5), ('Tuvalu', 'NRU', 8.5), ('Italian', 'FRA', 0.4), ('English', 'KNA', 0.0), ('Papiamento', 'ANT', 86.2), ('Tadzhik', 'UZB', 4.4), ('Polish', 'BLR', 0.6), ('Mordva', 'RUS', 0.5), ('Northsotho', 'ZAF', 9.1), ('Russian', 'MDA', 23.2), ('Fries', 'NLD', 3.7), ('Boa', 'COD', 2.3), ('Mazandarani', 'IRN', 3.6), ('Russian', 'FIN', 0.4), ('Chinese', 'CXR', 0.0), ('Aimará', 'BOL', 3.2), ('Arabic', 'SAU', 95.0), ('Portuguese', 'PRT', 99.0), ('Malajalam', 'IND', 3.6), ('Ngbaka', 'CAF', 7.5), ('Dinka', 'SDN', 11.5), ('English', 'KWT', 0.0), ('Luri', 'IRN', 4.3), ('Norwegian', 'SWE', 0.5), ('Philippene Languages', 'GUM', 19.7), ('French', 'HTI', 0.0), ('English', 'BMU', 100.0), ('Lithuanian', 'LVA', 1.2), ('Azerbaijani', 'GEO', 5.5), ('Spanish', 'FRA', 0.4), ('Kazakh', 'KAZ', 46.0), ('Finnish', 'SWE', 2.4), ('Wolof', 'SEN', 48.1), ('German', 'CZE', 0.5), ('Tuvalu', 'KIR', 0.5), ('Ewe', 'GHA', 11.9), ('French', 'MCO', 41.9), ('English', 'AUS', 81.2), ('Bislama', 'VUT', 56.6), ('Arawakan', 'GUY', 1.4), ('Kayah', 'MMR', 0.4), ('Iban', 'MYS', 2.8), ('Arabic-French', 'TUN', 26.3), ('English', 'CAN', 60.4), ('Romansh', 'CHE', 0.6), ('Papiamento', 'ABW', 76.7), ('Ovambo', 'NAM', 50.7), ('Bicol', 'PHL', 5.7), ('Ukrainian', 'LVA', 2.9), ('Acholi', 'UGA', 4.4), ('Fon', 'BEN', 39.8), ('Shona', 'ZWE', 72.1), ('Sindhi', 'PAK', 11.8), ('German', 'CHE', 63.6), ('Dorbet', 'MNG', 2.7), ('Ful', 'GIN', 38.6), ('Rwanda', 'UGA', 3.2), ('Ngoni', 'MWI', 6.7), ('Chichewa', 'MWI', 58.3), ('Arabic', 'ESH', 100.0), ('Arabic', 'PSE', 95.9), ('Berberi', 'LBY', 1.0), ('Ukrainian', 'UKR', 64.7), ('Ibibio', 'NGA', 5.6), ('Mossi', 'BFA', 50.2), ('Italian', 'ARG', 1.7), ('English', 'CCK', 0.0), ('Chinese', 'PLW', 1.6), ('Urdu', 'IND', 5.1), ('Sunda', 'TMP', 0.0), ('Wolof', 'MRT', 6.6), ('Korean', 'KOR', 99.9), ('Spanish', 'PRI', 51.3), ('Guaraní', 'BOL', 0.1), ('Nyika', 'KEN', 4.8), ('Dong', 'CHN', 0.2), ('Marathi', 'MUS', 0.7), ('Hassaniya', 'MRT', 81.7), ('Dutch', 'ABW', 5.3), ('Yalunka', 'SLE', 3.4), ('Kurdish', 'IRQ', 19.0), ('Azerbaijani', 'IRN', 16.8), ('Tho', 'VNM', 1.8), ('Somali', 'DJI', 43.9), ('Spanish', 'COL', 99.0), ('Makonde', 'TZA', 5.9), ('Mpongwe', 'GAB', 14.6), ('Tamashek', 'NER', 10.4), ('Mboshi', 'COG', 11.4), ('Korean', 'PRK', 99.9), ('Tongan', 'TON', 98.3), ('Arabic', 'NLD', 0.9), ('Swazi', 'ZAF', 2.5), ('Arabic', 'AUS', 1.0), ('Bariba', 'BEN', 8.7), ('Zulu', 'LSO', 15.0), ('Oromo', 'ETH', 31.0), ('Hindi', 'TTO', 3.4), ('Makua', 'MOZ', 27.8), ('Slovak', 'SVK', 85.6), ('Naudemba', 'TGO', 4.1), ('English', 'ISL', 0.0), ('Polish', 'LVA', 2.1), ('Tandjile', 'TCD', 6.5), ('Maithili', 'NPL', 11.9), ('Gusii', 'KEN', 6.1), ('Bakhtyari', 'IRN', 1.7), ('English', 'CYM', 0.0), ('Macedonian', 'MKD', 66.5), ('Kosrean', 'FSM', 7.3), ('Wolof', 'GMB', 12.6), ('Luvale', 'AGO', 3.6), ('Spanish', 'ESP', 74.4), ('Ouaddai', 'TCD', 8.7), ('Marathi', 'IND', 7.4), ('Afar', 'DJI', 34.8), ('Canton Chinese', 'MAC', 85.6), ('Tamil', 'MYS', 3.9), ('Lozi', 'ZMB', 6.4), ('English', 'MAC', 0.5), ('Lotuko', 'SDN', 1.5), ('Russian', 'TKM', 6.7), ('Slovak', 'CZE', 3.1), ('Eskimo Languages', 'CAN', 0.1), ('German', 'BEL', 1.0), ('Romanian', 'UKR', 0.7), ('Bhojpuri', 'MUS', 21.1), ('Zenaga', 'MRT', 1.2), ('Tigrinja', 'ETH', 7.2), ('Chokwe', 'AGO', 4.2), ('Ane', 'TGO', 5.7), ('Saame', 'NOR', 0.0), ('Bilin', 'ERI', 3.0), ('Tšam', 'KHM', 2.4), ('Punu', 'COG', 2.9), ('Arabic', 'SYR', 90.0), ('Macedonian', 'ALB', 0.1), ('Maori', 'COK', 0.0), ('Garifuna', 'HND', 1.3), ('Romani', 'YUG', 1.4), ('Gurma', 'BFA', 5.7), ('English', 'TTO', 93.5), ('Muong', 'VNM', 1.5), ('French', 'VIR', 2.5), ('English', 'GUM', 37.5), ('Azerbaijani', 'ARM', 2.6), ('Ful', 'MRT', 1.2), ('Chechen', 'RUS', 0.6), ('Shona', 'MOZ', 6.5), ('Kazakh', 'MNG', 5.9), ('Dyula', 'BFA', 2.6), ('Ukrainian', 'MDA', 8.6), ('Balochi', 'OMN', 0.0), ('Mandarin Chinese', 'TWN', 20.1), ('Loma', 'LBR', 5.8), ('Ful', 'SEN', 21.7), ('Fang', 'CMR', 19.7), ('Sinaberberi', 'EGY', 0.0), ('German', 'PRY', 0.9), ('Tikar', 'CMR', 7.4), ('Luhya', 'KEN', 13.8), ('Kpelle', 'LBR', 19.5), ('Crioulo', 'STP', 86.3), ('Russian', 'SJM', 0.0), ('Chinese', 'CAN', 2.5), ('Ganda', 'UGA', 18.1), ('English', 'ATG', 0.0), ('Mayo-kebbi', 'TCD', 11.5), ('Yi', 'CHN', 0.6), ('Walaita', 'ETH', 2.8), ('Comorian-French', 'COM', 12.9), ('Pilipino', 'PHL', 29.3), ('German', 'AUS', 0.6), ('Mbete', 'GAB', 13.8), ('Amhara', 'ETH', 30.0), ('Futuna', 'WLF', 0.0), ('Bassa', 'LBR', 13.7), ('Hungarian', 'SVK', 10.5), ('Friuli', 'ITA', 1.2), ('Tswana', 'BWA', 75.5), ('Chuvash', 'RUS', 0.9), ('French', 'USA', 0.7), ('Uzbek', 'TKM', 9.2), ('Monegasque', 'MCO', 16.1), ('Teke', 'COG', 17.3), ('Ful', 'BEN', 5.6), ('Creole French', 'REU', 91.5), ('Tripuri', 'BGD', 0.1), ('French', 'VUT', 14.2), ('English', 'VIR', 81.7), ('Chuabo', 'MOZ', 5.7), ('Zapotec', 'MEX', 0.6), ('Chaga and Pare', 'TZA', 4.9), ('Serbo-Croatian', 'HUN', 0.2), ('Creole French', 'DOM', 2.0), ('Saraiki', 'PAK', 9.8), ('Marma', 'BGD', 0.2), ('Russian', 'LTU', 8.1), ('Chinese', 'BRN', 9.3), ('Chin', 'MMR', 2.2), ('French', 'MDG', 0.0), ('Arabic', 'SDN', 49.4), ('Gurage', 'ETH', 4.7), ('French', 'MUS', 3.4), ('Sara', 'TCD', 27.7), ('Sara', 'CAF', 6.4), ('Tigrinja', 'ERI', 49.1), ('Arabic', 'SOM', 0.0), ('Portuguese', 'PRY', 3.2), ('English', 'NOR', 0.5), ('Basque', 'ESP', 1.6), ('Kymri', 'GBR', 0.9), ('Cuna', 'PAN', 2.0), ('Spanish', 'GTM', 64.7), ('Beja', 'SDN', 6.4), ('Niue', 'NIU', 0.0), ('Latvian', 'LVA', 55.1), ('Sango', 'COG', 2.6), ('English', 'LCA', 20.0), ('Creole English', 'GUY', 96.4), ('Kru', 'LBR', 7.2), ('Hadareb', 'ERI', 3.8), ('Banda', 'CAF', 23.5), ('Slovene', 'ITA', 0.2), ('Polynesian Languages', 'SLB', 3.8), ('Serbo-Croatian', 'BIH', 99.2), ('Romani', 'SVK', 1.7), ('Kongo', 'AGO', 13.2), ('Chinese', 'VNM', 1.4), ('Mon', 'MMR', 2.4), ('Chibcha', 'COL', 0.4), ('Abhyasi', 'GEO', 1.7), ('English', 'JPN', 0.1), ('Bemba', 'ZMB', 29.7), ('Italian', 'LIE', 2.5), ('French', 'BDI', 0.0), ('Lomwe', 'MWI', 18.4), ('Ukrainian', 'POL', 0.6), ('English', 'MNP', 4.8), ('Estonian', 'FIN', 0.2), ('Tharu', 'NPL', 5.4), ('Chinese', 'JPN', 0.2), ('Balochi', 'AFG', 0.9), ('Luo', 'KEN', 12.8), ('Kachin', 'MMR', 1.4), ('Nauru', 'NRU', 57.5), ('Malenasian Languages', 'PNG', 20.0), ('Romani', 'HUN', 0.5), ('Bulgariana', 'UKR', 0.3), ('Greek', 'ALB', 1.8), ('French', 'FRA', 93.6), ('San', 'BWA', 3.5), ('Spanish', 'BLZ', 31.6), ('Paiwan', 'TWN', 0.3), ('Comorian-Swahili', 'COM', 0.5), ('Japanese', 'GUM', 2.0), ('Ga-adangme', 'GHA', 7.8), ('Yap', 'FSM', 5.8), ('Ijo', 'NGA', 1.8), ('Loma', 'GIN', 2.3), ('Finnish', 'FIN', 92.7), ('English', 'UMI', 0.0), ('Comorian-madagassi', 'COM', 5.5), ('Korean', 'JPN', 0.5), ('Belorussian', 'LTU', 1.4), ('Creole French', 'GUF', 94.3), ('Aimará', 'PER', 2.3), ('Hungarian', 'UKR', 0.3), ('Southern Slavic Languages', 'DEU', 1.4), ('Kanuri', 'NGA', 4.1), ('English', 'MHL', 0.0), ('Comorian', 'REU', 2.8), ('Nahua', 'SLV', 0.0), ('Hebrew', 'ISR', 63.1), ('Vietnamese', 'USA', 0.2), ('French', 'PYF', 40.8), ('Duala', 'CMR', 10.9), ('Lango', 'UGA', 5.9), ('Hindi', 'NPL', 3.0), ('Khoekhoe', 'BWA', 2.5), ('German', 'DNK', 0.5), ('English', 'COK', 0.0), ('Tamil', 'LKA', 19.6), ('Creole English', 'TTO', 2.9), ('Tigre', 'ERI', 31.7), ('Belorussian', 'POL', 0.5), ('Creole English', 'DMA', 100.0), ('German', 'AUT', 92.0), ('German', 'USA', 0.7), ('Belorussian', 'RUS', 0.3), ('Chiu chau', 'HKG', 1.4), ('Ovimbundu', 'AGO', 37.2), ('Chinese', 'REU', 2.8), ('Faroese', 'FRO', 100.0), ('Mbete', 'COG', 4.8), ('English', 'CXR', 0.0), ('French', 'CAN', 23.4), ('Tswana', 'ZAF', 8.1), ('Arabic', 'YEM', 99.6), ('Bamileke-bamum', 'CMR', 18.6), ('Joruba', 'BEN', 12.2), ('Maltese', 'MLT', 95.8), ('English', 'BLZ', 50.8), ('Mixed Languages', 'LKA', 19.6), ('Berberi', 'MAR', 33.0), ('Chibcha', 'CRI', 0.3), ('Spanish', 'MEX', 92.1), ('Azerbaijani', 'IRQ', 1.7), ('Nyakusa', 'TZA', 5.4), ('Arabic', 'MAR', 65.0), ('Czech and Moravian', 'SVK', 1.1), ('Buryat', 'MNG', 1.7), ('Serer', 'SEN', 12.5), ('Serbo-Croatian', 'SVN', 7.9), ('Arabic', 'SWE', 0.8), ('Ful', 'NER', 9.7), ('Arabic', 'IRQ', 77.2), ('Portuguese', 'AND', 10.8), ('Finnish', 'EST', 0.7), ('Tukulor', 'MRT', 5.4), ('Thai', 'VNM', 1.6), ('Ukrainian', 'ROM', 0.3), ('Arabic', 'BHR', 67.7), ('Rakhine', 'MMR', 4.5), ('Papuan Languages', 'PNG', 78.1), ('Lao', 'LAO', 67.2), ('Karakalpak', 'UZB', 2.0), ('Dusun', 'MYS', 1.1), ('Armenian', 'LBN', 5.9), ('Yalunka', 'GIN', 2.9), ('Uzbek', 'UZB', 72.6), ('Balochi', 'IRN', 2.3), ('English', 'HKG', 2.2), ('Ful', 'SLE', 3.8), ('Creole English', 'HND', 0.2), ('Italian', 'VAT', 0.0), ('Polish', 'USA', 0.3), ('Italian', 'SMR', 100.0), ('Maranao', 'PHL', 1.3), ('Arabic', 'IRN', 2.2), ('Batakki', 'IDN', 2.2), ('Chinese', 'MYS', 9.0), ('German', 'HUN', 0.4), ('Hungarian', 'CZE', 0.2), ('Philippene Languages', 'JPN', 0.1), ('Turkish', 'BGR', 9.4), ('Luba', 'COD', 18.0), ('Saho', 'ERI', 3.0), ('Afrikaans', 'ZAF', 14.3), ('Ngala and Bangi', 'COD', 5.8), ('Tswa', 'MOZ', 6.0), ('Bugi', 'IDN', 2.2), ('Ful', 'CMR', 9.6), ('Garo', 'BGD', 0.1), ('English', 'ZAF', 8.5), ('Kuy', 'THA', 1.1), ('Malenasian Languages', 'SLB', 85.6), ('Malinke', 'CIV', 11.4), ('English', 'TUV', 0.0)",select ?t1_language ?t1_countrycode (max( ?t1_percentage) as ?aggregation_t1_percentage_464 ) where { ?t1 a dbo:countrylanguage . ?t1 dbo:countrylanguage\#language ?t1_language . ?t1 dbo:countrylanguage\#countrycode ?t1_countrycode . ?t1 dbo:countrylanguage\#percentage ?t1_percentage .        } group by ?t1_language ?t1_countrycode,"('Dutch', 'ABW', 5.3), ('English', 'ABW', 9.5), ('Papiamento', 'ABW', 76.7), ('Spanish', 'ABW', 7.4), ('Balochi', 'AFG', 0.9), ('Dari', 'AFG', 32.1), ('Pashto', 'AFG', 52.4), ('Turkmenian', 'AFG', 1.9), ('Uzbek', 'AFG', 8.8), ('Ambo', 'AGO', 2.4), ('Chokwe', 'AGO', 4.2), ('Kongo', 'AGO', 13.2), ('Luchazi', 'AGO', 2.4), ('Luimbe-nganguela', 'AGO', 5.4), ('Luvale', 'AGO', 3.6), ('Mbundu', 'AGO', 21.6), ('Nyaneka-nkhumbi', 'AGO', 5.4), ('Ovimbundu', 'AGO', 37.2), ('English', 'AIA', 0.0), ('Albaniana', 'ALB', 97.9), ('Greek', 'ALB', 1.8), ('Macedonian', 'ALB', 0.1), ('Catalan', 'AND', 32.3), ('French', 'AND', 6.2), ('Portuguese', 'AND', 10.8), ('Spanish', 'AND', 44.6), ('Dutch', 'ANT', 0.0), ('English', 'ANT', 7.8), ('Papiamento', 'ANT', 86.2), ('Arabic', 'ARE', 42.0), ('Hindi', 'ARE', 0.0), ('Indian Languages', 'ARG', 0.3), ('Italian', 'ARG', 1.7), ('Spanish', 'ARG', 96.8), ('Armenian', 'ARM', 93.4), ('Azerbaijani', 'ARM', 2.6), ('English', 'ASM', 3.1), ('Samoan', 'ASM', 90.6), ('Tongan', 'ASM', 3.1), ('Creole English', 'ATG', 95.7), ('English', 'ATG', 0.0), ('Arabic', 'AUS', 1.0), ('Canton Chinese', 'AUS', 1.1), ('English', 'AUS', 81.2), ('German', 'AUS', 0.6), ('Greek', 'AUS', 1.6), ('Italian', 'AUS', 2.2), ('Serbo-Croatian', 'AUS', 0.6), ('Vietnamese', 'AUS', 0.8), ('Czech', 'AUT', 0.2), ('German', 'AUT', 92.0), ('Hungarian', 'AUT', 0.4), ('Polish', 'AUT', 0.2), ('Romanian', 'AUT', 0.2), ('Serbo-Croatian', 'AUT', 2.2), ('Slovene', 'AUT', 0.4), ('Turkish', 'AUT', 1.5), ('Armenian', 'AZE', 2.0), ('Azerbaijani', 'AZE', 89.0), ('Lezgian', 'AZE', 2.3), ('Russian', 'AZE', 3.0), ('French', 'BDI', 0.0), ('Kirundi', 'BDI', 98.1), ('Swahili', 'BDI', 0.0), ('Arabic', 'BEL', 1.6), ('Dutch', 'BEL', 59.2), ('French', 'BEL', 32.6), ('German', 'BEL', 1.0), ('Italian', 'BEL', 2.4), ('Turkish', 'BEL', 0.9), ('Adja', 'BEN', 11.1), ('Aizo', 'BEN', 8.7), ('Bariba', 'BEN', 8.7), ('Fon', 'BEN', 39.8), ('Ful', 'BEN', 5.6), ('Joruba', 'BEN', 12.2), ('Somba', 'BEN', 6.7), ('Busansi', 'BFA', 3.5), ('Dagara', 'BFA', 3.1), ('Dyula', 'BFA', 2.6), ('Ful', 'BFA', 9.7), ('Gurma', 'BFA', 5.7), ('Mossi', 'BFA', 50.2), ('Bengali', 'BGD', 97.7), ('Chakma', 'BGD', 0.4), ('Garo', 'BGD', 0.1), ('Khasi', 'BGD', 0.1), ('Marma', 'BGD', 0.2), ('Santhali', 'BGD', 0.1), ('Tripuri', 'BGD', 0.1), ('Bulgariana', 'BGR', 83.2), ('Macedonian', 'BGR', 2.6), ('Romani', 'BGR', 3.7), ('Turkish', 'BGR', 9.4), ('Arabic', 'BHR', 67.7), ('English', 'BHR', 0.0), ('Creole English', 'BHS', 89.7), ('Creole French', 'BHS', 10.3), ('Serbo-Croatian', 'BIH', 99.2), ('Belorussian', 'BLR', 65.6), ('Polish', 'BLR', 0.6), ('Russian', 'BLR', 32.0), ('Ukrainian', 'BLR', 1.3), ('English', 'BLZ', 50.8), ('Garifuna', 'BLZ', 6.8), ('Maya Languages', 'BLZ', 9.6), ('Spanish', 'BLZ', 31.6), ('English', 'BMU', 100.0), ('Aimará', 'BOL', 3.2), ('Guaraní', 'BOL', 0.1), ('Ketšua', 'BOL', 8.1), ('Spanish', 'BOL', 87.7), ('German', 'BRA', 0.5), ('Indian Languages', 'BRA', 0.2), ('Italian', 'BRA', 0.4), ('Japanese', 'BRA', 0.4), ('Portuguese', 'BRA', 97.5), ('Bajan', 'BRB', 95.1), ('English', 'BRB', 0.0), ('Chinese', 'BRN', 9.3), ('English', 'BRN', 3.1), ('Malay', 'BRN', 45.5), ('Malay-English', 'BRN', 28.8), ('Asami', 'BTN', 15.2), ('Dzongkha', 'BTN', 50.0), ('Nepali', 'BTN', 34.8), ('Khoekhoe', 'BWA', 2.5), ('Ndebele', 'BWA', 1.3), ('San', 'BWA', 3.5), ('Shona', 'BWA', 12.3), ('Tswana', 'BWA', 75.5), ('Banda', 'CAF', 23.5), ('Gbaya', 'CAF', 23.8), ('Mandjia', 'CAF', 14.8), ('Mbum', 'CAF', 6.4), ('Ngbaka', 'CAF', 7.5), ('Sara', 'CAF', 6.4), ('Chinese', 'CAN', 2.5), ('Dutch', 'CAN', 0.5), ('English', 'CAN', 60.4), ('Eskimo Languages', 'CAN', 0.1), ('French', 'CAN', 23.4), ('German', 'CAN', 1.6), ('Italian', 'CAN', 1.7), ('Polish', 'CAN', 0.7), ('Portuguese', 'CAN', 0.7), ('Punjabi', 'CAN', 0.7), ('Spanish', 'CAN', 0.7), ('Ukrainian', 'CAN', 0.6), ('English', 'CCK', 0.0), ('Malay', 'CCK', 0.0), ('French', 'CHE', 19.2), ('German', 'CHE', 63.6), ('Italian', 'CHE', 7.7), ('Romansh', 'CHE', 0.6), ('Aimará', 'CHL', 0.5), ('Araucan', 'CHL', 9.6), ('Rapa nui', 'CHL', 0.2), ('Spanish', 'CHL', 89.7), ('Chinese', 'CHN', 92.0), ('Dong', 'CHN', 0.2), ('Hui', 'CHN', 0.8), ('Mantšu', 'CHN', 0.9), ('Miao', 'CHN', 0.7), ('Mongolian', 'CHN', 0.4), ('Puyi', 'CHN', 0.2), ('Tibetan', 'CHN', 0.4), ('Tujia', 'CHN', 0.5), ('Uighur', 'CHN', 0.6), ('Yi', 'CHN', 0.6), ('Zhuang', 'CHN', 1.4), ('Akan', 'CIV', 30.0), ('Gur', 'CIV', 11.7), ('Kru', 'CIV', 10.5), ('Malinke', 'CIV', 11.4), ('[South]Mande', 'CIV', 7.7), ('Bamileke-bamum', 'CMR', 18.6), ('Duala', 'CMR', 10.9), ('Fang', 'CMR', 19.7), ('Ful', 'CMR', 9.6), ('Maka', 'CMR', 4.9), ('Mandara', 'CMR', 5.7), ('Masana', 'CMR', 3.9), ('Tikar', 'CMR', 7.4), ('Boa', 'COD', 2.3), ('Chokwe', 'COD', 1.8), ('Kongo', 'COD', 16.0), ('Luba', 'COD', 18.0), ('Mongo', 'COD', 13.5), ('Ngala and Bangi', 'COD', 5.8), ('Rundi', 'COD', 3.8), ('Rwanda', 'COD', 10.3), ('Teke', 'COD', 2.7), ('Zande', 'COD', 6.1), ('Kongo', 'COG', 51.5), ('Mbete', 'COG', 4.8), ('Mboshi', 'COG', 11.4), ('Punu', 'COG', 2.9), ('Sango', 'COG', 2.6), ('Teke', 'COG', 17.3), ('English', 'COK', 0.0), ('Maori', 'COK', 0.0), ('Arawakan', 'COL', 0.1), ('Caribbean', 'COL', 0.1), ('Chibcha', 'COL', 0.4), ('Creole English', 'COL', 0.1), ('Spanish', 'COL', 99.0), ('Comorian', 'COM', 75.0), ('Comorian-Arabic', 'COM', 1.6), ('Comorian-French', 'COM', 12.9), ('Comorian-madagassi', 'COM', 5.5), ('Comorian-Swahili', 'COM', 0.5), ('Crioulo', 'CPV', 100.0), ('Portuguese', 'CPV', 0.0), ('Chibcha', 'CRI', 0.3), ('Chinese', 'CRI', 0.2), ('Creole English', 'CRI', 2.0), ('Spanish', 'CRI', 97.5), ('Spanish', 'CUB', 100.0), ('Chinese', 'CXR', 0.0), ('English', 'CXR', 0.0), ('English', 'CYM', 0.0), ('Greek', 'CYP', 74.1), ('Turkish', 'CYP', 22.4), ('Czech', 'CZE', 81.2), ('German', 'CZE', 0.5), ('Hungarian', 'CZE', 0.2), ('Moravian', 'CZE', 12.9), ('Polish', 'CZE', 0.6), ('Romani', 'CZE', 0.3), ('Silesiana', 'CZE', 0.4), ('Slovak', 'CZE', 3.1), ('German', 'DEU', 91.3), ('Greek', 'DEU', 0.4), ('Italian', 'DEU', 0.7), ('Polish', 'DEU', 0.3), ('Southern Slavic Languages', 'DEU', 1.4), ('Turkish', 'DEU', 2.6), ('Afar', 'DJI', 34.8), ('Arabic', 'DJI', 10.6), ('Somali', 'DJI', 43.9), ('Creole English', 'DMA', 100.0), ('Creole French', 'DMA', 0.0), ('Arabic', 'DNK', 0.7), ('Danish', 'DNK', 93.5), ('English', 'DNK', 0.3), ('German', 'DNK', 0.5), ('Norwegian', 'DNK', 0.3), ('Swedish', 'DNK', 0.3), ('Turkish', 'DNK', 0.8), ('Creole French', 'DOM', 2.0), ('Spanish', 'DOM', 98.0), ('Arabic', 'DZA', 86.0), ('Berberi', 'DZA', 14.0), ('Ketšua', 'ECU', 7.0), ('Spanish', 'ECU', 93.0), ('Arabic', 'EGY', 98.8), ('Sinaberberi', 'EGY', 0.0), ('Afar', 'ERI', 4.3), ('Bilin', 'ERI', 3.0), ('Hadareb', 'ERI', 3.8), ('Saho', 'ERI', 3.0), ('Tigre', 'ERI', 31.7), ('Tigrinja', 'ERI', 49.1), ('Arabic', 'ESH', 100.0), ('Basque', 'ESP', 1.6), ('Catalan', 'ESP', 16.9), ('Galecian', 'ESP', 6.4), ('Spanish', 'ESP', 74.4), ('Belorussian', 'EST', 1.4), ('Estonian', 'EST', 65.3), ('Finnish', 'EST', 0.7), ('Russian', 'EST', 27.8), ('Ukrainian', 'EST', 2.8), ('Amhara', 'ETH', 30.0), ('Gurage', 'ETH', 4.7), ('Oromo', 'ETH', 31.0), ('Sidamo', 'ETH', 3.2), ('Somali', 'ETH', 4.1), ('Tigrinja', 'ETH', 7.2), ('Walaita', 'ETH', 2.8), ('Estonian', 'FIN', 0.2), ('Finnish', 'FIN', 92.7), ('Russian', 'FIN', 0.4), ('Saame', 'FIN', 0.0), ('Swedish', 'FIN', 5.7), ('Fijian', 'FJI', 50.8), ('Hindi', 'FJI', 43.7), ('English', 'FLK', 0.0), ('Arabic', 'FRA', 2.5), ('French', 'FRA', 93.6), ('Italian', 'FRA', 0.4), ('Portuguese', 'FRA', 1.2), ('Spanish', 'FRA', 0.4), ('Turkish', 'FRA', 0.4), ('Danish', 'FRO', 0.0), ('Faroese', 'FRO', 100.0), ('Kosrean', 'FSM', 7.3), ('Mortlock', 'FSM', 7.6), ('Pohnpei', 'FSM', 23.8), ('Trukese', 'FSM', 41.6), ('Wolea', 'FSM', 3.7), ('Yap', 'FSM', 5.8), ('Fang', 'GAB', 35.8), ('Mbete', 'GAB', 13.8), ('Mpongwe', 'GAB', 14.6), ('Punu-sira-nzebi', 'GAB', 17.1), ('English', 'GBR', 97.3), ('Gaeli', 'GBR', 0.1), ('Kymri', 'GBR', 0.9), ('Abhyasi', 'GEO', 1.7), ('Armenian', 'GEO', 6.8), ('Azerbaijani', 'GEO', 5.5), ('Georgiana', 'GEO', 71.7), ('Osseetti', 'GEO', 2.4), ('Russian', 'GEO', 8.8), ('Akan', 'GHA', 52.4), ('Ewe', 'GHA', 11.9), ('Ga-adangme', 'GHA', 7.8), ('Gurma', 'GHA', 3.3), ('Joruba', 'GHA', 1.3), ('Mossi', 'GHA', 15.8), ('Arabic', 'GIB', 7.4), ('English', 'GIB', 88.9), ('Ful', 'GIN', 38.6), ('Kissi', 'GIN', 6.0), ('Kpelle', 'GIN', 4.6), ('Loma', 'GIN', 2.3), ('Malinke', 'GIN', 23.2), ('Susu', 'GIN', 11.0), ('Yalunka', 'GIN', 2.9), ('Creole French', 'GLP', 95.0), ('French', 'GLP', 0.0), ('Diola', 'GMB', 9.2), ('Ful', 'GMB', 16.2), ('Malinke', 'GMB', 34.1), ('Soninke', 'GMB', 7.6), ('Wolof', 'GMB', 12.6), ('Balante', 'GNB', 14.6), ('Crioulo', 'GNB', 36.4), ('Ful', 'GNB', 16.6), ('Malinke', 'GNB', 6.9), ('Mandyako', 'GNB', 4.9), ('Portuguese', 'GNB', 8.1), ('Bubi', 'GNQ', 8.7), ('Fang', 'GNQ', 84.8), ('Greek', 'GRC', 98.5), ('Turkish', 'GRC', 0.9), ('Creole English', 'GRD', 100.0), ('Danish', 'GRL', 12.5), ('Greenlandic', 'GRL', 87.5), ('Cakchiquel', 'GTM', 8.9), ('Kekchí', 'GTM', 4.9), ('Mam', 'GTM', 2.7), ('Quiché', 'GTM', 10.1), ('Spanish', 'GTM', 64.7), ('Creole French', 'GUF', 94.3), ('Indian Languages', 'GUF', 1.9), ('Chamorro', 'GUM', 29.6), ('English', 'GUM', 37.5), ('Japanese', 'GUM', 2.0), ('Korean', 'GUM', 3.3), ('Philippene Languages', 'GUM', 19.7), ('Arawakan', 'GUY', 1.4), ('Caribbean', 'GUY', 2.2), ('Creole English', 'GUY', 96.4), ('Canton Chinese', 'HKG', 88.7), ('Chiu chau', 'HKG', 1.4), ('English', 'HKG', 2.2), ('Fukien', 'HKG', 1.9), ('Hakka', 'HKG', 1.6), ('Creole English', 'HND', 0.2), ('Garifuna', 'HND', 1.3), ('Miskito', 'HND', 0.2), ('Spanish', 'HND', 97.2), ('Serbo-Croatian', 'HRV', 95.9), ('Slovene', 'HRV', 0.0), ('French', 'HTI', 0.0), ('Haiti Creole', 'HTI', 100.0), ('German', 'HUN', 0.4), ('Hungarian', 'HUN', 98.5), ('Romani', 'HUN', 0.5), ('Romanian', 'HUN', 0.1), ('Serbo-Croatian', 'HUN', 0.2), ('Slovak', 'HUN', 0.1), ('Bali', 'IDN', 1.7), ('Banja', 'IDN', 1.8), ('Batakki', 'IDN', 2.2), ('Bugi', 'IDN', 2.2), ('Javanese', 'IDN', 39.4), ('Madura', 'IDN', 4.3), ('Malay', 'IDN', 12.1), ('Minangkabau', 'IDN', 2.4), ('Sunda', 'IDN', 15.8), ('Asami', 'IND', 1.5), ('Bengali', 'IND', 8.2), ('Gujarati', 'IND', 4.8), ('Hindi', 'IND', 39.9), ('Kannada', 'IND', 3.9), ('Malajalam', 'IND', 3.6), ('Marathi', 'IND', 7.4), ('Orija', 'IND', 3.3), ('Punjabi', 'IND', 2.8), ('Tamil', 'IND', 6.3), ('Telugu', 'IND', 7.8), ('Urdu', 'IND', 5.1), ('English', 'IRL', 98.4), ('Irish', 'IRL', 1.6), ('Arabic', 'IRN', 2.2), ('Azerbaijani', 'IRN', 16.8), ('Bakhtyari', 'IRN', 1.7), ('Balochi', 'IRN', 2.3), ('Gilaki', 'IRN', 5.3), ('Kurdish', 'IRN', 9.1), ('Luri', 'IRN', 4.3), ('Mazandarani', 'IRN', 3.6), ('Persian', 'IRN', 45.7), ('Turkmenian', 'IRN', 1.6), ('Arabic', 'IRQ', 77.2), ('Assyrian', 'IRQ', 0.8), ('Azerbaijani', 'IRQ', 1.7), ('Kurdish', 'IRQ', 19.0), ('Persian', 'IRQ', 0.8), ('English', 'ISL', 0.0), ('Icelandic', 'ISL', 95.7), ('Arabic', 'ISR', 18.0), ('Hebrew', 'ISR', 63.1), ('Russian', 'ISR', 8.9), ('Albaniana', 'ITA', 0.2), ('French', 'ITA', 0.5), ('Friuli', 'ITA', 1.2), ('German', 'ITA', 0.5), ('Italian', 'ITA', 94.1), ('Romani', 'ITA', 0.2), ('Sardinian', 'ITA', 2.7), ('Slovene', 'ITA', 0.2), ('Creole English', 'JAM', 94.2), ('Hindi', 'JAM', 1.9), ('Arabic', 'JOR', 97.9), ('Armenian', 'JOR', 1.0), ('Circassian', 'JOR', 1.0), ('Ainu', 'JPN', 0.0), ('Chinese', 'JPN', 0.2), ('English', 'JPN', 0.1), ('Japanese', 'JPN', 99.1), ('Korean', 'JPN', 0.5), ('Philippene Languages', 'JPN', 0.1), ('German', 'KAZ', 3.1), ('Kazakh', 'KAZ', 46.0), ('Russian', 'KAZ', 34.7), ('Tatar', 'KAZ', 2.0), ('Ukrainian', 'KAZ', 5.0), ('Uzbek', 'KAZ', 2.3), ('Gusii', 'KEN', 6.1), ('Kalenjin', 'KEN', 10.8), ('Kamba', 'KEN', 11.2), ('Kikuyu', 'KEN', 20.9), ('Luhya', 'KEN', 13.8), ('Luo', 'KEN', 12.8), ('Masai', 'KEN', 1.6), ('Meru', 'KEN', 5.5), ('Nyika', 'KEN', 4.8), ('Turkana', 'KEN', 1.4), ('Kazakh', 'KGZ', 0.8), ('Kirgiz', 'KGZ', 59.7), ('Russian', 'KGZ', 16.2), ('Tadzhik', 'KGZ', 0.8), ('Tatar', 'KGZ', 1.3), ('Ukrainian', 'KGZ', 1.7), ('Uzbek', 'KGZ', 14.1), ('Chinese', 'KHM', 3.1), ('Khmer', 'KHM', 88.6), ('Tšam', 'KHM', 2.4), ('Vietnamese', 'KHM', 5.5), ('Kiribati', 'KIR', 98.9), ('Tuvalu', 'KIR', 0.5), ('Creole English', 'KNA', 100.0), ('English', 'KNA', 0.0), ('Chinese', 'KOR', 0.1), ('Korean', 'KOR', 99.9), ('Arabic', 'KWT', 78.1), ('English', 'KWT', 0.0), ('Lao', 'LAO', 67.2), ('Lao-Soung', 'LAO', 5.2), ('Mon-khmer', 'LAO', 16.5), ('Thai', 'LAO', 7.8), ('Arabic', 'LBN', 93.0), ('Armenian', 'LBN', 5.9), ('French', 'LBN', 0.0), ('Bassa', 'LBR', 13.7), ('Gio', 'LBR', 7.9), ('Grebo', 'LBR', 8.9), ('Kpelle', 'LBR', 19.5), ('Kru', 'LBR', 7.2), ('Loma', 'LBR', 5.8), ('Malinke', 'LBR', 5.1), ('Mano', 'LBR', 7.2), ('Arabic', 'LBY', 96.0), ('Berberi', 'LBY', 1.0), ('Creole French', 'LCA', 80.0), ('English', 'LCA', 20.0), ('German', 'LIE', 89.0), ('Italian', 'LIE', 2.5), ('Turkish', 'LIE', 2.5), ('Mixed Languages', 'LKA', 19.6), ('Singali', 'LKA', 60.3), ('Tamil', 'LKA', 19.6), ('English', 'LSO', 0.0), ('Sotho', 'LSO', 85.0), ('Zulu', 'LSO', 15.0), ('Belorussian', 'LTU', 1.4), ('Lithuanian', 'LTU', 81.6), ('Polish', 'LTU', 7.0), ('Russian', 'LTU', 8.1), ('Ukrainian', 'LTU', 1.1), ('French', 'LUX', 4.2), ('German', 'LUX', 2.3), ('Italian', 'LUX', 4.6), ('Luxembourgish', 'LUX', 64.4), ('Portuguese', 'LUX', 13.0), ('Belorussian', 'LVA', 4.1), ('Latvian', 'LVA', 55.1), ('Lithuanian', 'LVA', 1.2), ('Polish', 'LVA', 2.1), ('Russian', 'LVA', 32.5), ('Ukrainian', 'LVA', 2.9), ('Canton Chinese', 'MAC', 85.6), ('English', 'MAC', 0.5), ('Mandarin Chinese', 'MAC', 1.2), ('Portuguese', 'MAC', 2.3), ('Arabic', 'MAR', 65.0), ('Berberi', 'MAR', 33.0), ('English', 'MCO', 6.5), ('French', 'MCO', 41.9), ('Italian', 'MCO', 16.1), ('Monegasque', 'MCO', 16.1), ('Bulgariana', 'MDA', 1.6), ('Gagauzi', 'MDA', 3.2), ('Romanian', 'MDA', 61.9), ('Russian', 'MDA', 23.2), ('Ukrainian', 'MDA', 8.6), ('French', 'MDG', 0.0), ('Malagasy', 'MDG', 98.9), ('Dhivehi', 'MDV', 100.0), ('English', 'MDV', 0.0), ('Mixtec', 'MEX', 0.6), ('Náhuatl', 'MEX', 1.8), ('Otomí', 'MEX', 0.4), ('Spanish', 'MEX', 92.1), ('Yucatec', 'MEX', 1.1), ('Zapotec', 'MEX', 0.6), ('English', 'MHL', 0.0), ('Marshallese', 'MHL', 96.8), ('Albaniana', 'MKD', 22.9), ('Macedonian', 'MKD', 66.5), ('Romani', 'MKD', 2.3), ('Serbo-Croatian', 'MKD', 2.0), ('Turkish', 'MKD', 4.0), ('Bambara', 'MLI', 31.8), ('Ful', 'MLI', 13.9), ('Senufo and Minianka', 'MLI', 12.0), ('Songhai', 'MLI', 6.9), ('Soninke', 'MLI', 8.7), ('Tamashek', 'MLI', 7.3), ('English', 'MLT', 2.1), ('Maltese', 'MLT', 95.8), ('Burmese', 'MMR', 69.0), ('Chin', 'MMR', 2.2), ('Kachin', 'MMR', 1.4), ('Karen', 'MMR', 6.2), ('Kayah', 'MMR', 0.4), ('Mon', 'MMR', 2.4), ('Rakhine', 'MMR', 4.5), ('Shan', 'MMR', 8.5), ('Bajad', 'MNG', 1.9), ('Buryat', 'MNG', 1.7), ('Dariganga', 'MNG', 1.4), ('Dorbet', 'MNG', 2.7), ('Kazakh', 'MNG', 5.9), ('Mongolian', 'MNG', 78.8), ('Carolinian', 'MNP', 4.8), ('Chamorro', 'MNP', 30.0), ('Chinese', 'MNP', 7.1), ('English', 'MNP', 4.8), ('Korean', 'MNP', 6.5), ('Philippene Languages', 'MNP', 34.1), ('Chuabo', 'MOZ', 5.7), ('Lomwe', 'MOZ', 7.8), ('Makua', 'MOZ', 27.8), ('Marendje', 'MOZ', 3.5), ('Nyanja', 'MOZ', 3.3), ('Ronga', 'MOZ', 3.7), ('Sena', 'MOZ', 9.4), ('Shona', 'MOZ', 6.5), ('Tsonga', 'MOZ', 12.4), ('Tswa', 'MOZ', 6.0), ('Ful', 'MRT', 1.2), ('Hassaniya', 'MRT', 81.7), ('Soninke', 'MRT', 2.7), ('Tukulor', 'MRT', 5.4), ('Wolof', 'MRT', 6.6), ('Zenaga', 'MRT', 1.2), ('English', 'MSR', 0.0), ('Creole French', 'MTQ', 96.6), ('French', 'MTQ', 0.0), ('Bhojpuri', 'MUS', 21.1), ('Creole French', 'MUS', 70.6), ('French', 'MUS', 3.4), ('Hindi', 'MUS', 1.2), ('Marathi', 'MUS', 0.7), ('Tamil', 'MUS', 0.8), ('Chichewa', 'MWI', 58.3), ('Lomwe', 'MWI', 18.4), ('Ngoni', 'MWI', 6.7), ('Yao', 'MWI', 13.2), ('Chinese', 'MYS', 9.0), ('Dusun', 'MYS', 1.1), ('English', 'MYS', 1.6), ('Iban', 'MYS', 2.8), ('Malay', 'MYS', 58.4), ('Tamil', 'MYS', 3.9), ('French', 'MYT', 20.3), ('Mahoré', 'MYT', 41.9), ('Malagasy', 'MYT', 16.1), ('Afrikaans', 'NAM', 9.5), ('Caprivi', 'NAM', 4.7), ('German', 'NAM', 0.9), ('Herero', 'NAM', 8.0), ('Kavango', 'NAM', 9.7), ('Nama', 'NAM', 12.4), ('Ovambo', 'NAM', 50.7), ('San', 'NAM', 1.9), ('French', 'NCL', 34.3), ('Malenasian Languages', 'NCL', 45.4), ('Polynesian Languages', 'NCL', 11.6), ('Ful', 'NER', 9.7), ('Hausa', 'NER', 53.1), ('Kanuri', 'NER', 4.4), ('Songhai-zerma', 'NER', 21.2), ('Tamashek', 'NER', 10.4), ('English', 'NFK', 0.0), ('Bura', 'NGA', 1.6), ('Edo', 'NGA', 3.3), ('Ful', 'NGA', 11.3), ('Hausa', 'NGA', 21.1), ('Ibibio', 'NGA', 5.6), ('Ibo', 'NGA', 18.1), ('Ijo', 'NGA', 1.8), ('Joruba', 'NGA', 21.4), ('Kanuri', 'NGA', 4.1), ('Tiv', 'NGA', 2.3), ('Creole English', 'NIC', 0.5), ('Miskito', 'NIC', 1.6), ('Spanish', 'NIC', 97.6), ('Sumo', 'NIC', 0.2), ('English', 'NIU', 0.0), ('Niue', 'NIU', 0.0), ('Arabic', 'NLD', 0.9), ('Dutch', 'NLD', 95.6), ('Fries', 'NLD', 3.7), ('Turkish', 'NLD', 0.8), ('Danish', 'NOR', 0.4), ('English', 'NOR', 0.5), ('Norwegian', 'NOR', 96.6), ('Saame', 'NOR', 0.0), ('Swedish', 'NOR', 0.3), ('Bhojpuri', 'NPL', 7.5), ('Hindi', 'NPL', 3.0), ('Maithili', 'NPL', 11.9), ('Nepali', 'NPL', 50.4), ('Newari', 'NPL', 3.7), ('Tamang', 'NPL', 4.9), ('Tharu', 'NPL', 5.4), ('Chinese', 'NRU', 8.5), ('English', 'NRU', 7.5), ('Kiribati', 'NRU', 17.9), ('Nauru', 'NRU', 57.5), ('Tuvalu', 'NRU', 8.5), ('English', 'NZL', 87.0), ('Maori', 'NZL', 4.3), ('Arabic', 'OMN', 76.7), ('Balochi', 'OMN', 0.0), ('Balochi', 'PAK', 3.0), ('Brahui', 'PAK', 1.2), ('Hindko', 'PAK', 2.4), ('Pashto', 'PAK', 13.1), ('Punjabi', 'PAK', 48.2), ('Saraiki', 'PAK', 9.8), ('Sindhi', 'PAK', 11.8), ('Urdu', 'PAK', 7.6), ('Arabic', 'PAN', 0.6), ('Creole English', 'PAN', 14.0), ('Cuna', 'PAN', 2.0), ('Embera', 'PAN', 0.6), ('Guaymí', 'PAN', 5.3), ('Spanish', 'PAN', 76.8), ('Pitcairnese', 'PCN', 0.0), ('Aimará', 'PER', 2.3), ('Ketšua', 'PER', 16.4), ('Spanish', 'PER', 79.8), ('Bicol', 'PHL', 5.7), ('Cebuano', 'PHL', 23.3), ('Hiligaynon', 'PHL', 9.1), ('Ilocano', 'PHL', 9.3), ('Maguindanao', 'PHL', 1.4), ('Maranao', 'PHL', 1.3), ('Pampango', 'PHL', 3.0), ('Pangasinan', 'PHL', 1.8), ('Pilipino', 'PHL', 29.3), ('Waray-waray', 'PHL', 3.8), ('Chinese', 'PLW', 1.6), ('English', 'PLW', 3.2), ('Palau', 'PLW', 82.2), ('Philippene Languages', 'PLW', 9.2), ('Malenasian Languages', 'PNG', 20.0), ('Papuan Languages', 'PNG', 78.1), ('Belorussian', 'POL', 0.5), ('German', 'POL', 1.3), ('Polish', 'POL', 97.6), ('Ukrainian', 'POL', 0.6), ('English', 'PRI', 47.4), ('Spanish', 'PRI', 51.3), ('Chinese', 'PRK', 0.1), ('Korean', 'PRK', 99.9), ('Portuguese', 'PRT', 99.0), ('German', 'PRY', 0.9), ('Guaraní', 'PRY', 40.1), ('Portuguese', 'PRY', 3.2), ('Spanish', 'PRY', 55.1), ('Arabic', 'PSE', 95.9), ('Hebrew', 'PSE', 4.1), ('Chinese', 'PYF', 2.9), ('French', 'PYF', 40.8), ('Tahitian', 'PYF', 46.4), ('Arabic', 'QAT', 40.7), ('Urdu', 'QAT', 0.0), ('Chinese', 'REU', 2.8), ('Comorian', 'REU', 2.8), ('Creole French', 'REU', 91.5), ('Malagasy', 'REU', 1.4), ('Tamil', 'REU', 0.0), ('German', 'ROM', 0.4), ('Hungarian', 'ROM', 7.2), ('Romani', 'ROM', 0.7), ('Romanian', 'ROM', 90.7), ('Serbo-Croatian', 'ROM', 0.1), ('Ukrainian', 'ROM', 0.3), ('Avarian', 'RUS', 0.4), ('Bashkir', 'RUS', 0.7), ('Belorussian', 'RUS', 0.3), ('Chechen', 'RUS', 0.6), ('Chuvash', 'RUS', 0.9), ('Kazakh', 'RUS', 0.4), ('Mari', 'RUS', 0.4), ('Mordva', 'RUS', 0.5), ('Russian', 'RUS', 86.6), ('Tatar', 'RUS', 3.2), ('Udmur', 'RUS', 0.3), ('Ukrainian', 'RUS', 1.3), ('French', 'RWA', 0.0), ('Rwanda', 'RWA', 100.0), ('Arabic', 'SAU', 95.0), ('Arabic', 'SDN', 49.4), ('Bari', 'SDN', 2.5), ('Beja', 'SDN', 6.4), ('Chilluk', 'SDN', 1.7), ('Dinka', 'SDN', 11.5), ('Fur', 'SDN', 2.1), ('Lotuko', 'SDN', 1.5), ('Nubian Languages', 'SDN', 8.1), ('Nuer', 'SDN', 4.9), ('Zande', 'SDN', 2.7), ('Diola', 'SEN', 5.0), ('Ful', 'SEN', 21.7), ('Malinke', 'SEN', 3.8), ('Serer', 'SEN', 12.5), ('Soninke', 'SEN', 1.3), ('Wolof', 'SEN', 48.1), ('Chinese', 'SGP', 77.1), ('Malay', 'SGP', 14.1), ('Tamil', 'SGP', 7.4), ('English', 'SHN', 0.0), ('Norwegian', 'SJM', 0.0), ('Russian', 'SJM', 0.0), ('Malenasian Languages', 'SLB', 85.6), ('Papuan Languages', 'SLB', 8.6), ('Polynesian Languages', 'SLB', 3.8), ('Bullom-sherbro', 'SLE', 3.8), ('Ful', 'SLE', 3.8), ('Kono-vai', 'SLE', 5.1), ('Kuranko', 'SLE', 3.4), ('Limba', 'SLE', 8.3), ('Mende', 'SLE', 34.8), ('Temne', 'SLE', 31.8), ('Yalunka', 'SLE', 3.4), ('Nahua', 'SLV', 0.0), ('Spanish', 'SLV', 100.0), ('Italian', 'SMR', 100.0), ('Arabic', 'SOM', 0.0), ('Somali', 'SOM', 98.3), ('French', 'SPM', 0.0), ('Crioulo', 'STP', 86.3), ('French', 'STP', 0.7), ('Hindi', 'SUR', 0.0), ('Sranantonga', 'SUR', 81.0), ('Czech and Moravian', 'SVK', 1.1), ('Hungarian', 'SVK', 10.5), ('Romani', 'SVK', 1.7), ('Slovak', 'SVK', 85.6), ('Ukrainian and Russian', 'SVK', 0.6), ('Hungarian', 'SVN', 0.5), ('Serbo-Croatian', 'SVN', 7.9), ('Slovene', 'SVN', 87.9), ('Arabic', 'SWE', 0.8), ('Finnish', 'SWE', 2.4), ('Norwegian', 'SWE', 0.5), ('Southern Slavic Languages', 'SWE', 1.3), ('Spanish', 'SWE', 0.6), ('Swedish', 'SWE', 89.5), ('Swazi', 'SWZ', 89.9), ('Zulu', 'SWZ', 2.0), ('English', 'SYC', 3.8), ('French', 'SYC', 1.3), ('Seselwa', 'SYC', 91.3), ('Arabic', 'SYR', 90.0), ('Kurdish', 'SYR', 9.0), ('English', 'TCA', 0.0), ('Arabic', 'TCD', 12.3), ('Gorane', 'TCD', 6.2), ('Hadjarai', 'TCD', 6.7), ('Kanem-bornu', 'TCD', 9.0), ('Mayo-kebbi', 'TCD', 11.5), ('Ouaddai', 'TCD', 8.7), ('Sara', 'TCD', 27.7), ('Tandjile', 'TCD', 6.5), ('Ane', 'TGO', 5.7), ('Ewe', 'TGO', 23.2), ('Gurma', 'TGO', 3.4), ('Kabyé', 'TGO', 13.8), ('Kotokoli', 'TGO', 5.7), ('Moba', 'TGO', 5.4), ('Naudemba', 'TGO', 4.1), ('Watyi', 'TGO', 10.3), ('Chinese', 'THA', 12.1), ('Khmer', 'THA', 1.3), ('Kuy', 'THA', 1.1), ('Lao', 'THA', 26.9), ('Malay', 'THA', 3.6), ('Thai', 'THA', 52.6), ('Russian', 'TJK', 9.7), ('Tadzhik', 'TJK', 62.2), ('Uzbek', 'TJK', 23.2), ('English', 'TKL', 0.0), ('Tokelau', 'TKL', 0.0), ('Kazakh', 'TKM', 2.0), ('Russian', 'TKM', 6.7), ('Turkmenian', 'TKM', 76.7), ('Uzbek', 'TKM', 9.2), ('Portuguese', 'TMP', 0.0), ('Sunda', 'TMP', 0.0), ('English', 'TON', 0.0), ('Tongan', 'TON', 98.3), ('Creole English', 'TTO', 2.9), ('English', 'TTO', 93.5), ('Hindi', 'TTO', 3.4), ('Arabic', 'TUN', 69.9), ('Arabic-French', 'TUN', 26.3), ('Arabic-French-English', 'TUN', 3.2), ('Arabic', 'TUR', 1.4), ('Kurdish', 'TUR', 10.6), ('Turkish', 'TUR', 87.6), ('English', 'TUV', 0.0), ('Kiribati', 'TUV', 7.5), ('Tuvalu', 'TUV', 92.5), ('Ami', 'TWN', 0.6), ('Atayal', 'TWN', 0.4), ('Hakka', 'TWN', 11.0), ('Mandarin Chinese', 'TWN', 20.1), ('Min', 'TWN', 66.7), ('Paiwan', 'TWN', 0.3), ('Chaga and Pare', 'TZA', 4.9), ('Gogo', 'TZA', 3.9), ('Ha', 'TZA', 3.5), ('Haya', 'TZA', 5.9), ('Hehet', 'TZA', 6.9), ('Luguru', 'TZA', 4.9), ('Makonde', 'TZA', 5.9), ('Nyakusa', 'TZA', 5.4), ('Nyamwesi', 'TZA', 21.1), ('Shambala', 'TZA', 4.3), ('Swahili', 'TZA', 8.8), ('Acholi', 'UGA', 4.4), ('Ganda', 'UGA', 18.1), ('Gisu', 'UGA', 4.5), ('Kiga', 'UGA', 8.3), ('Lango', 'UGA', 5.9), ('Lugbara', 'UGA', 4.7), ('Nkole', 'UGA', 10.7), ('Rwanda', 'UGA', 3.2), ('Soga', 'UGA', 8.2), ('Teso', 'UGA', 6.0), ('Belorussian', 'UKR', 0.3), ('Bulgariana', 'UKR', 0.3), ('Hungarian', 'UKR', 0.3), ('Polish', 'UKR', 0.1), ('Romanian', 'UKR', 0.7), ('Russian', 'UKR', 32.9), ('Ukrainian', 'UKR', 64.7), ('English', 'UMI', 0.0), ('Spanish', 'URY', 95.7), ('Chinese', 'USA', 0.6), ('English', 'USA', 86.2), ('French', 'USA', 0.7), ('German', 'USA', 0.7), ('Italian', 'USA', 0.6), ('Japanese', 'USA', 0.2), ('Korean', 'USA', 0.3), ('Polish', 'USA', 0.3), ('Portuguese', 'USA', 0.2), ('Spanish', 'USA', 7.5), ('Tagalog', 'USA', 0.4), ('Vietnamese', 'USA', 0.2), ('Karakalpak', 'UZB', 2.0), ('Kazakh', 'UZB', 3.8), ('Russian', 'UZB', 10.9), ('Tadzhik', 'UZB', 4.4), ('Tatar', 'UZB', 1.8), ('Uzbek', 'UZB', 72.6), ('Italian', 'VAT', 0.0), ('Creole English', 'VCT', 99.1), ('English', 'VCT', 0.0), ('Goajiro', 'VEN', 0.4), ('Spanish', 'VEN', 96.9), ('Warrau', 'VEN', 0.1), ('English', 'VGB', 0.0), ('English', 'VIR', 81.7), ('French', 'VIR', 2.5), ('Spanish', 'VIR', 13.3), ('Chinese', 'VNM', 1.4), ('Khmer', 'VNM', 1.4), ('Man', 'VNM', 0.7), ('Miao', 'VNM', 0.9), ('Muong', 'VNM', 1.5), ('Nung', 'VNM', 1.1), ('Thai', 'VNM', 1.6), ('Tho', 'VNM', 1.8), ('Vietnamese', 'VNM', 86.8), ('Bislama', 'VUT', 56.6), ('English', 'VUT', 28.3), ('French', 'VUT', 14.2), ('Futuna', 'WLF', 0.0), ('Wallis', 'WLF', 0.0), ('English', 'WSM', 0.6), ('Samoan', 'WSM', 47.5), ('Samoan-English', 'WSM', 52.0), ('Arabic', 'YEM', 99.6), ('Soqutri', 'YEM', 0.0), ('Albaniana', 'YUG', 16.5), ('Hungarian', 'YUG', 3.4), ('Macedonian', 'YUG', 0.5), ('Romani', 'YUG', 1.4), ('Serbo-Croatian', 'YUG', 75.2), ('Slovak', 'YUG', 0.7), ('Afrikaans', 'ZAF', 14.3), ('English', 'ZAF', 8.5), ('Ndebele', 'ZAF', 1.5), ('Northsotho', 'ZAF', 9.1), ('Southsotho', 'ZAF', 7.6), ('Swazi', 'ZAF', 2.5), ('Tsonga', 'ZAF', 4.3), ('Tswana', 'ZAF', 8.1), ('Venda', 'ZAF', 2.2), ('Xhosa', 'ZAF', 17.7), ('Zulu', 'ZAF', 22.7), ('Bemba', 'ZMB', 29.7), ('Chewa', 'ZMB', 5.7), ('Lozi', 'ZMB', 6.4), ('Nsenga', 'ZMB', 4.3), ('Nyanja', 'ZMB', 7.8), ('Tongan', 'ZMB', 11.0), ('English', 'ZWE', 2.2), ('Ndebele', 'ZWE', 16.2), ('Nyanja', 'ZWE', 2.2), ('Shona', 'ZWE', 72.1)",medium,True,1,
417,world_1,What is the total number of countries where Spanish is spoken by the largest percentage of people?,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode",,select (count( *) as ?aggregation_all) (max( ?t2_percentage) as ?aggregation_t2_percentage_330 ) where { ?t1 a dbo:country . ?t2 a dbo:countrylanguage . ?t2 dbo:countrylanguage\#ref-countrycode ?t1 .  ?t2 dbo:countrylanguage\#percentage ?t2_percentage . ?t2 dbo:countrylanguage\#language ?t2_language . FILTER(?t2_language = 'Spanish') .        } group by,,extra,,-2,HTTP Error 400: 
418,world_1,What are the codes of countries where Spanish is spoken by the largest percentage of people?,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode","('ABW', 7.4), ('CRI', 97.5), ('PRY', 55.1), ('ECU', 93.0), ('PER', 79.8), ('URY', 95.7), ('SLV', 100.0), ('PRI', 51.3), ('PAN', 76.8), ('FRA', 0.4), ('CHL', 89.7), ('VEN', 96.9), ('GTM', 64.7), ('ARG', 96.8), ('USA', 7.5), ('HND', 97.2), ('VIR', 13.3), ('CUB', 100.0), ('NIC', 97.6), ('COL', 99.0), ('CAN', 0.7), ('BLZ', 31.6), ('AND', 44.6), ('BOL', 87.7), ('MEX', 92.1), ('SWE', 0.6), ('DOM', 98.0), ('ESP', 74.4)",select ?t1_countrycode (max( ?t1_percentage) as ?aggregation_t1_percentage_330 ) where { ?t1 a dbo:countrylanguage . ?t1 dbo:countrylanguage\#countrycode ?t1_countrycode . ?t1 dbo:countrylanguage\#percentage ?t1_percentage . ?t1 dbo:countrylanguage\#language ?t1_language . FILTER(?t1_language = 'Spanish') .        } group by ?t1_countrycode,"('ABW', 7.4), ('AND', 44.6), ('ARG', 96.8), ('BLZ', 31.6), ('BOL', 87.7), ('CAN', 0.7), ('CHL', 89.7), ('COL', 99.0), ('CRI', 97.5), ('CUB', 100.0), ('DOM', 98.0), ('ECU', 93.0), ('ESP', 74.4), ('FRA', 0.4), ('GTM', 64.7), ('HND', 97.2), ('MEX', 92.1), ('NIC', 97.6), ('PAN', 76.8), ('PER', 79.8), ('PRI', 51.3), ('PRY', 55.1), ('SLV', 100.0), ('SWE', 0.6), ('URY', 95.7), ('USA', 7.5), ('VEN', 96.9), ('VIR', 13.3)",medium,True,1,
419,orchestra,How many conductors are there?,SELECT count(*) FROM conductor,"(12,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:conductor .        },"(12,)",easy,True,1,
420,orchestra,List the names of conductors in ascending order of age.,SELECT Name FROM conductor ORDER BY Age ASC,"('Antal Doráti',), ('Igor Stravinsky',), ('Michael Tilson Thomas',), ('Colin Davis',), ('Antal Brown',), ('Charles Dutoit',), ('Seiji Ozawa',), ('Paul Jorgensen',), ('Valeri Gergiev',), ('Pierre Boulez',), ('Gerard Schwarz',), ('Robert Craft',)",select ?t1_name where { ?t1 a dbo:conductor . ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#age ?t1_age .        }  order by asc (?t1_age),"('Antal Doráti',), ('Igor Stravinsky',), ('Michael Tilson Thomas',), ('Colin Davis',), ('Seiji Ozawa',), ('Paul Jorgensen',), ('Antal Brown',), ('Charles Dutoit',), ('Valeri Gergiev',), ('Pierre Boulez',), ('Gerard Schwarz',), ('Robert Craft',)",easy,True,1,
421,orchestra,What are the names of conductors whose nationalities are not 'USA'?,SELECT Name FROM conductor WHERE Nationality != 'USA',"('Igor Stravinsky',), ('Paul Jorgensen',), ('Charles Dutoit',), ('Pierre Boulez',), ('Robert Craft',), ('Michael Tilson Thomas',)",select ?t1_name where { ?t1 a dbo:conductor . ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#nationality ?t1_nationality . FILTER(?t1_nationality != 'USA') .        },"('Igor Stravinsky',), ('Paul Jorgensen',), ('Charles Dutoit',), ('Pierre Boulez',), ('Robert Craft',), ('Michael Tilson Thomas',)",easy,True,1,
422,orchestra,What are the record companies of orchestras in descending order of years in which they were founded?,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,"('Columbia Masterworks',), ('Philips Classics Records',), ('Philips',), ('RCA',), ('EMI',), ('Koch Records / Naxos Records',), ('Decca Records',), ('Mercury Records',), ('Deutsche Grammophon',), ('Delos Records',), ('Decca Records',), ('Kultur',)",select ?t1_record_company where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#record_company ?t1_record_company . ?t1 dbo:orchestra\#year_of_founded ?t1_year_of_founded .        }  order by desc (?t1_year_of_founded),"('Columbia Masterworks',), ('RCA',), ('Philips',), ('Philips Classics Records',), ('EMI',), ('Koch Records / Naxos Records',), ('Decca Records',), ('Mercury Records',), ('Deutsche Grammophon',), ('Kultur',), ('Decca Records',), ('Delos Records',)",easy,True,1,
423,orchestra,What is the average attendance of shows?,SELECT avg(Attendance) FROM SHOW,"(1326.4,)",select (avg( ?t1_attendance) as ?aggregation_t1_attendance_118 ) where { ?t1 a dbo:show . ?t1 dbo:show\#attendance ?t1_attendance .        },"(1326.4,)",easy,True,1,
424,orchestra,What are the maximum and minimum share of performances whose type is not 'Live final'.,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != 'Live final'","('44.7%', '22.7%')",select (max( ?t1_share) as ?aggregation_t1_share_294 ) (min( ?t1_share) as ?aggregation_t1_share_364 ) where { ?t1 a dbo:performance . ?t1 dbo:performance\#share ?t1_share . ?t1 dbo:performance\#share ?t1_share . ?t1 dbo:performance\#type ?t1_type . FILTER(?t1_type != 'Live final') .        },"('44.7%', '22.7%')",medium,True,1,
425,orchestra,How many different nationalities do conductors have?,SELECT count(DISTINCT Nationality) FROM conductor,"(3,)",select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_262 ) where { ?t1 a dbo:conductor . ?t1 dbo:conductor\#nationality ?t1_nationality .        },"(3,)",easy,True,1,
426,orchestra,List names of conductors in descending order of years of work.,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"('Robert Craft',), ('Antal Brown',), ('Gerard Schwarz',), ('Valeri Gergiev',), ('Michael Tilson Thomas',), ('Charles Dutoit',), ('Paul Jorgensen',), ('Pierre Boulez',), ('Igor Stravinsky',), ('Seiji Ozawa',), ('Antal Doráti',), ('Colin Davis',)",select ?t1_name where { ?t1 a dbo:conductor . ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#year_of_work ?t1_year_of_work .        }  order by desc (?t1_year_of_work),"('Robert Craft',), ('Antal Brown',), ('Gerard Schwarz',), ('Valeri Gergiev',), ('Michael Tilson Thomas',), ('Charles Dutoit',), ('Igor Stravinsky',), ('Paul Jorgensen',), ('Pierre Boulez',), ('Antal Doráti',), ('Seiji Ozawa',), ('Colin Davis',)",easy,True,1,
427,orchestra,List the name of the conductor with the most years of work.,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,"('Robert Craft',)",select ?t1_name where { ?t1 a dbo:conductor . ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#year_of_work ?t1_year_of_work .        }   order by desc (?t1_year_of_work) limit 1,"('Robert Craft',)",medium,True,1,
428,orchestra,Show the names of conductors and the orchestras they have conducted.,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","('Antal Doráti', 'London Symphony Orchestra'), ('Igor Stravinsky', 'Columbia Symphony Orchestra'), ('Colin Davis', 'Royal Concertgebouw Orchestra'), ('Paul Jorgensen', 'Royal Danish Orchestra'), ('Antal Brown', 'Detroit Symphony Orchestra'), ('Charles Dutoit', 'Montreal Symphony Orchestra'), ('Gerard Schwarz', 'Seattle Symphony Orchestra'), ('Pierre Boulez', 'Chicago Symphony Orchestra'), ('Valeri Gergiev', 'Kirov Orchestra'), ('Robert Craft', 'Philharmonia Orchestra'), ('Seiji Ozawa', 'Orchestre de Paris'), ('Michael Tilson Thomas', 'San Francisco Symphony Orchestra')",select ?t1_name ?t2_orchestra where { ?t1 a dbo:conductor . ?t2 a dbo:orchestra . ?t2 dbo:orchestra\#ref-conductor_id ?t1 .  ?t1 dbo:conductor\#name ?t1_name . ?t2 dbo:orchestra\#orchestra ?t2_orchestra .        },"('Antal Doráti', 'London Symphony Orchestra'), ('Igor Stravinsky', 'Columbia Symphony Orchestra'), ('Colin Davis', 'Royal Concertgebouw Orchestra'), ('Paul Jorgensen', 'Royal Danish Orchestra'), ('Antal Brown', 'Detroit Symphony Orchestra'), ('Charles Dutoit', 'Montreal Symphony Orchestra'), ('Gerard Schwarz', 'Seattle Symphony Orchestra'), ('Pierre Boulez', 'Chicago Symphony Orchestra'), ('Valeri Gergiev', 'Kirov Orchestra'), ('Robert Craft', 'Philharmonia Orchestra'), ('Seiji Ozawa', 'Orchestre de Paris'), ('Michael Tilson Thomas', 'San Francisco Symphony Orchestra')",medium,True,1,
429,orchestra,Show the names of conductors that have conducted more than one orchestras.,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,,select ?t1_name where { ?t1 a dbo:conductor . ?t2 a dbo:orchestra . ?t2 dbo:orchestra\#ref-conductor_id ?t1 .  ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#conductor_id ?t1_conductor_id .        } group by ?t1_name   having(count( *)  > 1),,medium,True,1,
430,orchestra,Show the name of the conductor that has conducted the most number of orchestras.,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,"('Seiji Ozawa',)",select ?t1_name where { ?t1 a dbo:conductor . ?t2 a dbo:orchestra . ?t2 dbo:orchestra\#ref-conductor_id ?t1 .  ?t1 dbo:conductor\#name ?t1_name . ?t1 dbo:conductor\#conductor_id ?t1_conductor_id .        } group by ?t1_name  order by desc (count(*)) limit 1,"('Antal Brown',)",extra,True,1,false_negative
431,orchestra,Please show the name of the conductor that has conducted orchestras founded after 2008.,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,"('Igor Stravinsky',)",select ?t1_name where { ?t1 a dbo:conductor . ?t2 a dbo:orchestra . ?t2 dbo:orchestra\#ref-conductor_id ?t1 .  ?t1 dbo:conductor\#name ?t1_name . ?t2 dbo:orchestra\#year_of_founded ?t2_year_of_founded . FILTER(?t2_year_of_founded > 2008) .        },"('Igor Stravinsky',)",medium,True,1,
432,orchestra,Please show the different record companies and the corresponding number of orchestras.,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","('RCA', 1), ('Kultur', 1), ('Delos Records', 1), ('Decca Records', 2), ('Mercury Records', 1), ('Columbia Masterworks', 1), ('Koch Records / Naxos Records', 1), ('Deutsche Grammophon', 1), ('EMI', 1), ('Philips', 1), ('Philips Classics Records', 1)",select ?t1_record_company (count( *) as ?aggregation_all) where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#record_company ?t1_record_company .        } group by ?t1_record_company,"('Mercury Records', 1), ('Columbia Masterworks', 1), ('Philips', 1), ('Kultur', 1), ('Decca Records', 2), ('Delos Records', 1), ('Deutsche Grammophon', 1), ('Philips Classics Records', 1), ('Koch Records / Naxos Records', 1), ('EMI', 1), ('RCA', 1)",medium,True,1,
433,orchestra,Please show the record formats of orchestras in ascending order of count.,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"('DVD',), ('CD / LP',), ('CD',)",select ?t1_major_record_format where { ?t1 a dbo:orchestra . ?t13 a dbo:performance . ?t13 dbo:performance\#ref-orchestra_id ?t1 .  ?t1 dbo:orchestra\#major_record_format ?t1_major_record_format .        } group by ?t1_major_record_format order by asc (count(*)),"('CD / LP',), ('DVD',), ('CD',)",medium,True,1,
434,orchestra,List the record company shared by the most number of orchestras.,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,"('Decca Records',)",select ?t1_record_company where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#record_company ?t1_record_company .        } group by ?t1_record_company  order by desc (count(*)) limit 1,"('Decca Records',)",hard,True,1,false_negative
435,orchestra,List the names of orchestras that have no performance.,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),"('San Francisco Symphony Orchestra',)",select ?t1_orchestra where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#orchestra ?t1_orchestra . ?t1 dbo:orchestra\#orchestra_id ?t1_orchestra_id .     Filter not exists {{select ?t22_orchestra_id where { ?t22 a dbo:performance . ?t22 dbo:performance\#orchestra_id ?t22_orchestra_id .        }    } FILTER (?t1_orchestra_id in (?t22_orchestra_id))}  },"('San Francisco Symphony Orchestra',)",hard,True,1,
436,orchestra,Show the record companies shared by orchestras founded before 2003 and after 2003.,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,"('Decca Records',)",select distinct ?t1_record_company where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#record_company ?t1_record_company . ?t1 dbo:orchestra\#year_of_founded ?t1_year_of_founded . FILTER(?t1_year_of_founded < 2003) . FILTER (?t1_record_company in (?t2_record_company)) .  { ?t2 a dbo:orchestra . ?t2 dbo:orchestra\#record_company ?t2_record_company . ?t2 dbo:orchestra\#year_of_founded ?t2_year_of_founded .  FILTER(?t2_year_of_founded > 2003) .     }      },"('Decca Records',)",hard,True,1,
437,orchestra,Find the number of orchestras whose record format is 'CD' or 'DVD'.,SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD',"(11,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:orchestra . ?t1 dbo:orchestra\#major_record_format ?t1_major_record_format . ?t1 dbo:orchestra\#major_record_format ?t1_major_record_format . FILTER(?t1_major_record_format = 'CD' || ?t1_major_record_format = 'DVD') .        },"(11,)",medium,True,1,
438,orchestra,Show the years in which orchestras that have given more than one performance are founded.,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING COUNT(*)  >  1,"(2002.0,), (2003.0,), (2008.0,)",select ?t1_year_of_founded where { ?t1 a dbo:orchestra . ?t2 a dbo:performance . ?t2 dbo:performance\#ref-orchestra_id ?t1 .  ?t1 dbo:orchestra\#year_of_founded ?t1_year_of_founded . ?t1 dbo:orchestra\#orchestra_id ?t1_orchestra_id .        } group by ?t1_year_of_founded   having(count( *)  > 1),"(2003.0,), (2008.0,), (2002.0,)",medium,True,1,
439,network_1,How many high schoolers are there?,SELECT count(*) FROM high_schooler,"(16,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:high_schooler .        },"(16,)",easy,True,1,
440,network_1,Show the names and grades of each high schooler.,"SELECT name ,  grade FROM high_schooler","('Jordan', 9), ('Gabriel', 9), ('Tiffany', 9), ('Cassandra', 9), ('Haley', 10), ('Andrew', 10), ('Kris', 10), ('Brittany', 10), ('Alexis', 11), ('Austin', 11), ('Gabriel', 11), ('Jessica', 11), ('Jordan', 12), ('John', 12), ('Kyle', 12), ('Logan', 12)",select ?t1_name ?t1_grade where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#grade ?t1_grade .        },"('Jordan', 9), ('Gabriel', 9), ('Tiffany', 9), ('Cassandra', 9), ('Haley', 10), ('Andrew', 10), ('Kris', 10), ('Brittany', 10), ('Alexis', 11), ('Austin', 11), ('Gabriel', 11), ('Jessica', 11), ('Jordan', 12), ('John', 12), ('Kyle', 12), ('Logan', 12)",medium,True,1,
441,network_1,Show all the grades of the high schoolers.,SELECT grade FROM high_schooler,"(9,), (9,), (9,), (9,), (10,), (10,), (10,), (10,), (11,), (11,), (11,), (11,), (12,), (12,), (12,), (12,)",select ?t1_grade where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade .        },"(9,), (9,), (9,), (9,), (10,), (10,), (10,), (10,), (11,), (11,), (11,), (11,), (12,), (12,), (12,), (12,)",easy,True,1,
442,network_1,What grade is Kyle in?,SELECT grade FROM high_schooler WHERE name  =  'Kyle',"(12,)",select ?t1_grade where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade . ?t1 dbo:high_schooler\#name ?t1_name . FILTER(?t1_name = 'Kyle') .        },"(12,)",easy,True,1,
443,network_1,Show the names of all high schoolers in grade 10.,SELECT name FROM high_schooler WHERE grade  =  10,"('Haley',), ('Andrew',), ('Kris',), ('Brittany',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#grade ?t1_grade . FILTER(?t1_grade = 10) .        },"('Haley',), ('Andrew',), ('Kris',), ('Brittany',)",easy,True,1,
444,network_1,Show the ID of the high schooler named Kyle.,SELECT ID FROM high_schooler WHERE name  =  'Kyle',"(1934,)",select ?t1_id where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#id ?t1_id . ?t1 dbo:high_schooler\#name ?t1_name . FILTER(?t1_name = 'Kyle') .        },"(1934,)",easy,True,1,
445,network_1,How many high schoolers are there in grade 9 or 10?,SELECT count(*) FROM high_schooler WHERE grade  =  9 OR grade  =  10,"(8,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade . ?t1 dbo:high_schooler\#grade ?t1_grade . FILTER(?t1_grade = 9 || ?t1_grade = 10) .        },"(8,)",medium,True,1,
446,network_1,Show the number of high schoolers for each grade.,"SELECT grade ,  count(*) FROM high_schooler GROUP BY grade","(10, 4), (9, 4), (12, 4), (11, 4)",select ?t1_grade (count( *) as ?aggregation_all) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade .        } group by ?t1_grade,"(9, 4), (10, 4), (11, 4), (12, 4)",medium,True,1,
447,network_1,Which grade has the most high schoolers?,SELECT grade FROM high_schooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,"(10,)",select ?t1_grade where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade .        } group by ?t1_grade  order by desc (count(*)) limit 1,"(9,)",hard,True,1,false_negative
448,network_1,Show me all grades that have at least 4 students.,SELECT grade FROM high_schooler GROUP BY grade HAVING count(*)  >=  4,"(10,), (9,), (12,), (11,)",select ?t1_grade where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade .        } group by ?t1_grade   having(count( *)  >= 4),"(9,), (10,), (11,), (12,)",easy,True,1,
449,network_1,Show the student IDs and numbers of friends corresponding to each.,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","(1510, 2), (1316, 1), (1661, 1), (1689, 2), (1501, 1), (1381, 1), (1782, 3), (1468, 2), (1709, 1), (1934, 1), (1911, 1), (1101, 1), (1304, 1), (1247, 2)",select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a dbo:friend . ?t1 dbo:friend\#student_id ?t1_student_id .        } group by ?t1_student_id,"(1510, 2), (1689, 2), (1381, 1), (1709, 1), (1782, 3), (1468, 2), (1101, 1), (1247, 2), (1911, 1), (1501, 1), (1316, 1), (1934, 1), (1304, 1), (1661, 1)",medium,True,1,
450,network_1,Show the names of high school students and their corresponding number of friends.,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name","('Logan', 1), ('Kris', 2), ('Jessica', 1), ('Haley', 1), ('Cassandra', 1), ('Austin', 1), ('Kyle', 1), ('Tiffany', 1), ('Jordan', 3), ('Gabriel', 3), ('Alexis', 2), ('Andrew', 3)",select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a dbo:high_schooler . ?t2 a dbo:friend . ?t2 dbo:friend\#ref-friend_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name .        } group by ?t1_name,"('Gabriel', 2), ('Tiffany', 1), ('Cassandra', 1), ('Haley', 1), ('Andrew', 1), ('Kris', 1), ('Brittany', 2), ('Alexis', 2), ('Austin', 1), ('Jessica', 2), ('Jordan', 2), ('John', 1), ('Kyle', 2), ('Logan', 1)",medium,False,0,
451,network_1,What is the name of the high schooler who has the greatest number of friends?,SELECT T2.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name ORDER BY count(*) DESC LIMIT 1,"('Jordan',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:friend . ?t2 dbo:friend\#ref-friend_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id .        } group by ?t1_name  order by desc (count(*)) limit 1,"('Alexis',)",extra,False,0,
452,network_1,Show the names of high schoolers who have at least 3 friends.,SELECT T2.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name HAVING count(*)  >=  3,"('Jordan',), ('Gabriel',), ('Andrew',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:friend . ?t2 dbo:friend\#ref-friend_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id .        } group by ?t1_name   having(count( *)  >= 3),,medium,False,0,
453,network_1,Show the names of all of the high schooler Kyle's friends.,SELECT T3.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id JOIN high_schooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  'Kyle',"('Jordan',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:friend . ?t2 dbo:friend\#ref-friend_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id . ?t1 dbo:high_schooler\#name ?t1_name . FILTER(?t1_name = 'Kyle') .        },"('Kyle',), ('Kyle',)",hard,False,0,
454,network_1,How many friends does the high school student Kyle have?,SELECT count(*) FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle',"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:friend . ?t2 a dbo:high_schooler . ?t1 dbo:friend\#ref-friend_id ?t2 .  ?t2 dbo:high_schooler\#name ?t2_name . FILTER(?t2_name = 'Kyle') .        },"(2,)",medium,False,0,
455,network_1,Show ids of all students who do not have any friends.,SELECT id FROM high_schooler EXCEPT SELECT student_id FROM Friend,"(1641,), (1025,)",SELECT distinct?col1 WHERE { { select (?t1_id as ?col1) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#id ?t1_id .   }}  MINUS {select (?t2_student_id as ?col1) where { ?t2 a dbo:friend . ?t2 dbo:friend\#student_id ?t2_student_id .        }     } },"(1641,), (1025,)",hard,True,1,
456,network_1,Show names of all high school students who do not have any friends.,SELECT name FROM high_schooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id,"('John',), ('Brittany',)",SELECT distinct?col1 WHERE { { select (?t1_name as ?col1) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#name ?t1_name .   }}  MINUS {select (?t2_name as ?col1) where { ?t2 a dbo:high_schooler . ?t3 a dbo:friend . ?t3 dbo:friend\#ref-friend_id ?t2 .  ?t2 dbo:high_schooler\#name ?t2_name . ?t2 dbo:high_schooler\#id ?t2_id .        }     } },,hard,False,0,
457,network_1,Show the ids of high schoolers who have friends and are also liked by someone else.,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,"(1468,), (1709,), (1934,), (1689,), (1101,), (1501,), (1304,), (1247,)",select distinct ?t1_student_id where { ?t1 a dbo:friend . ?t1 dbo:friend\#student_id ?t1_student_id . FILTER (?t1_student_id in (?t2_liked_id)) .  { ?t2 a dbo:likes . ?t2 dbo:likes\#liked_id ?t2_liked_id .      }      },"(1709,), (1689,), (1247,), (1468,), (1304,), (1934,), (1501,), (1101,)",hard,True,1,
458,network_1,Show name of all students who have some friends and also are liked by someone else.,SELECT T2.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN high_schooler AS T2 ON T1.liked_id  =  T2.id,"('Kyle',), ('Jordan',), ('Gabriel',), ('Kris',), ('Jessica',), ('Haley',), ('Alexis',), ('Cassandra',)",select distinct ?t1_name where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#name ?t1_name . FILTER (?t1_name in (?t2_name)) .  { ?t2 a dbo:high_schooler . ?t3 a dbo:likes . ?t3 dbo:likes\#ref-student_id ?t2 .  ?t2 dbo:high_schooler\#name ?t2_name . ?t2 dbo:high_schooler\#id ?t2_id .      }      },"('Gabriel',), ('Cassandra',), ('Andrew',), ('Alexis',), ('Brittany',), ('Austin',), ('Jessica',), ('Kyle',), ('John',)",hard,False,0,
459,network_1,Count the number of likes for each student id.,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","(1641, 1), (1025, 1), (1782, 1), (1316, 1), (1709, 1), (1934, 1), (1689, 1), (1911, 1), (1501, 1), (1247, 1)",select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a dbo:likes . ?t1 dbo:likes\#student_id ?t1_student_id .        } group by ?t1_student_id,"(1689, 1), (1709, 1), (1782, 1), (1911, 1), (1247, 1), (1641, 1), (1316, 1), (1501, 1), (1934, 1), (1025, 1)",medium,True,1,
460,network_1,"Show the names of high schoolers who have likes, and numbers of likes for each.","SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name","('Austin', 1), ('John', 1), ('Kyle', 1), ('Gabriel', 2), ('Jessica', 1), ('Brittany', 1), ('Alexis', 1), ('Cassandra', 1), ('Andrew', 1)",select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a dbo:high_schooler . ?t2 a dbo:likes . ?t2 dbo:likes\#ref-student_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name .        } group by ?t1_name,"('Gabriel', 2), ('Cassandra', 1), ('Andrew', 1), ('Alexis', 1), ('Brittany', 1), ('Austin', 1), ('Jessica', 1), ('Kyle', 1), ('John', 1)",medium,True,1,
461,network_1,What is the name of the high schooler who has the greatest number of likes?,SELECT T2.name FROM Likes AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name ORDER BY count(*) DESC LIMIT 1,"('Gabriel',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:likes . ?t2 dbo:likes\#ref-student_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id .        } group by ?t1_name  order by desc (count(*)) limit 1,"('Gabriel',)",extra,True,1,
462,network_1,Show the names of students who have at least 2 likes.,SELECT T2.name FROM Likes AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id GROUP BY T2.name HAVING count(*)  >=  2,"('Gabriel',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:likes . ?t2 dbo:likes\#ref-student_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id .        } group by ?t1_name   having(count( *)  >= 2),"('Gabriel',)",medium,True,1,
463,network_1,Show the names of students who have a grade higher than 5 and have at least 2 friends.,SELECT T2.name FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T2.name HAVING count(*)  >=  2,"('Andrew',), ('Jordan',), ('Gabriel',), ('Kris',), ('Alexis',)",select ?t1_name where { ?t1 a dbo:high_schooler . ?t2 a dbo:friend . ?t2 dbo:friend\#ref-friend_id ?t1 .  ?t1 dbo:high_schooler\#name ?t1_name . ?t1 dbo:high_schooler\#id ?t1_id . ?t1 dbo:high_schooler\#grade ?t1_grade . FILTER(?t1_grade > 5) .        } group by ?t1_name   having(count( *)  >= 2),"('Gabriel',), ('Brittany',), ('Alexis',), ('Jessica',), ('Jordan',), ('Kyle',)",hard,False,0,
464,network_1,How many likes does Kyle have?,SELECT count(*) FROM Likes AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle',"(1,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:likes . ?t2 a dbo:high_schooler . ?t1 dbo:likes\#ref-student_id ?t2 .  ?t2 dbo:high_schooler\#name ?t2_name . FILTER(?t2_name = 'Kyle') .        },"(1,)",medium,True,1,
465,network_1,Find the average grade of all students who have some friends.,SELECT avg(grade) FROM high_schooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id),,select (avg( ?t1_grade) as ?aggregation_t1_grade_203 ) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade . ?t1 dbo:high_schooler\#id ?t1_id . FILTER(?t1_id in ?t22_student_id) .       {select ?t22_student_id where { ?t22 a dbo:friend . ?t23 a dbo:high_schooler . ?t22 dbo:friend\#ref-friend_id ?t23 .  ?t22 dbo:friend\#student_id ?t22_student_id . ?t22 dbo:friend\#student_id ?t22_student_id .        }    } },,hard,,-2,HTTP Error 400: 
466,network_1,Find the minimum grade of students who have no friends.,SELECT min(grade) FROM high_schooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN high_schooler AS T2 ON T1.student_id  =  T2.id),"(10,)",select (min( ?t1_grade) as ?aggregation_t1_grade_180 ) where { ?t1 a dbo:high_schooler . ?t1 dbo:high_schooler\#grade ?t1_grade . ?t1 dbo:high_schooler\#id ?t1_id .     Filter not exists {{select ?t22_student_id where { ?t22 a dbo:friend . ?t23 a dbo:high_schooler . ?t22 dbo:friend\#ref-friend_id ?t23 .  ?t22 dbo:friend\#student_id ?t22_student_id . ?t22 dbo:friend\#student_id ?t22_student_id .        }    } FILTER (?t1_id in (?t22_student_id))}  },"(10,)",extra,True,1,
467,dog_kennels,Which states have both owners and professionals living there?,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,"('Mississippi',), ('Wisconsin',), ('Indiana',)",select distinct ?t1_state where { ?t1 a dbo:owners . ?t1 dbo:owners\#state ?t1_state . FILTER (?t1_state in (?t2_state)) .  { ?t2 a dbo:professionals . ?t2 dbo:professionals\#state ?t2_state .      }      },"('Wisconsin',), ('Indiana',), ('Mississippi',)",hard,True,1,
468,dog_kennels,What is the average age of the dogs who have gone through any treatments?,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),"(5.111111111111,)",select (avg( ?t1_age) as ?aggregation_t1_age_450 ) where { ?t1 a dbo:dogs . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-dog_id ?t1 .  ?t1 dbo:dogs\#age ?t1_age . ?t1 dbo:dogs\#dog_id ?t1_dog_id .        },"(5.466666666667,)",hard,False,0,
469,dog_kennels,"Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.","SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","(1, 'Braun', '(275)939-2435x80863'), (8, 'Hyatt', '328.842.3792'), (9, 'Kshlerin', '962-983-8109x3509')",SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#last_name ?t1_last_name . ?t1 dbo:professionals\#cell_number ?t1_cell_number . ?t1 dbo:professionals\#state ?t1_state . FILTER(?t1_state = 'Indiana') .   }} UNION {select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a dbo:professionals . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-professional_id ?t1 .  ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#last_name ?t1_last_name . ?t1 dbo:professionals\#cell_number ?t1_cell_number . ?t1 dbo:professionals\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_last_name ?t1_cell_number   having(count( *)  > 2)  } },"(1, 'Braun', '(275)939-2435x80863'), (8, 'Hyatt', '328.842.3792'), (9, 'Kshlerin', '962-983-8109x3509')",extra,True,1,
470,dog_kennels,Which dogs have not cost their owner more than 1000 for treatment? List the dog names.,SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 ),"('Kacey',), ('Hipolito',), ('Houston',), ('Jeffrey',), ('Merritt',), ('Narciso',), ('George',), ('Bessie',), ('Betty',), ('Holden',), ('Jesus',), ('Mavis',)",select ?t1_name where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#name ?t1_name . ?t1 dbo:dogs\#dog_id ?t1_dog_id .     Filter not exists {{select ?t22_dog_id where { ?t22 a dbo:treatments . ?t22 dbo:treatments\#dog_id ?t22_dog_id . ?t22 dbo:treatments\#cost_of_treatment ?t22_cost_of_treatment .        } group by ?t22_dog_id   having(sum( ?t22_cost_of_treatment)  > 1000)} FILTER (?t1_dog_id in (?t22_dog_id))}  },"('Kacey',), ('Hipolito',), ('Houston',), ('Jeffrey',), ('Merritt',), ('Narciso',), ('George',), ('Bessie',), ('Betty',), ('Holden',), ('Jesus',), ('Mavis',)",hard,True,1,
471,dog_kennels,Which first names are used for professionals or owners but are not used as dog names?,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,"('Tre',), ('Heather',), ('Cindy',), ('Vernice',), ('Ruben',), ('Karley',), ('Melisa',), ('Adelle',), ('Velva',), ('Olaf',), ('Kade',), ('Monte',), ('Orlando',), ('Lorenz',), ('Rolando',), ('Winfield',), ('Sigurd',), ('Nora',), ('Domenica',), ('Brady',), ('Rachelle',), ('Johann',), ('Ericka',), ('Jaclyn',), ('Jayson',), ('Gay',), ('Lesly',), ('Taryn',), ('Emelie',), ('Danny',)",SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#first_name ?t1_first_name .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a dbo:owners . ?t1 dbo:owners\#first_name ?t1_first_name .        }      } },"('Taryn',), ('Jayson',), ('Olaf',), ('Vernice',), ('Danny',), ('Ruben',), ('Velva',), ('Karley',), ('Monte',), ('Domenica',), ('Brady',), ('Winfield',), ('Ericka',), ('Sigurd',), ('Lesly',), ('Nora',), ('Melisa',), ('Jaclyn',), ('Tre',), ('Johann',), ('Kade',), ('Emelie',), ('Rolando',), ('Adelle',), ('Lorenz',), ('Gay',), ('Orlando',), ('Cindy',), ('Rachelle',), ('Heather',)",hard,True,1,
472,dog_kennels,"Which professional did not operate any treatment on dogs? List the professional's id, role and email.","SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","(13, 'Veterenarian', 'delphine29@example.com'), (12, 'Veterenarian', 'marquardt.furman@example.org'), (11, 'Employee', 'west.eula@example.net'), (1, 'Employee', 'deanna.schuster@example.com'), (3, 'Employee', 'uboehm@example.org'), (15, 'Employee', 'jeichmann@example.com'), (2, 'Employee', 'lucile.shanahan@example.org')",SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_role_code as ?col2) (?t1_email_address as ?col3) where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#role_code ?t1_role_code . ?t1 dbo:professionals\#email_address ?t1_email_address .   }}  MINUS {select (?t2_professional_id as ?col1) (?t2_role_code as ?col2) (?t2_email_address as ?col3) where { ?t2 a dbo:professionals . ?t3 a dbo:treatments . ?t3 dbo:treatments\#ref-professional_id ?t2 .  ?t2 dbo:professionals\#professional_id ?t2_professional_id . ?t2 dbo:professionals\#role_code ?t2_role_code . ?t2 dbo:professionals\#email_address ?t2_email_address . ?t2 dbo:professionals\#professional_id ?t2_professional_id .        }     } },"(1, 'Employee', 'deanna.schuster@example.com'), (2, 'Employee', 'lucile.shanahan@example.org'), (3, 'Employee', 'uboehm@example.org'), (11, 'Employee', 'west.eula@example.net'), (12, 'Veterenarian', 'marquardt.furman@example.org'), (13, 'Veterenarian', 'delphine29@example.com'), (15, 'Employee', 'jeichmann@example.com')",extra,True,1,
473,dog_kennels,"Which owner owns the most dogs? List the owner id, first name and last name.","SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id, T2.first_name, T2.last_name ORDER BY count(*) DESC LIMIT 1","(14, 'Rachelle', 'Funk')",select ?t1_owner_id ?t2_first_name ?t2_last_name where { ?t1 a dbo:dogs . ?t2 a dbo:owners . ?t1 dbo:dogs\#ref-owner_id ?t2 .  ?t1 dbo:dogs\#owner_id ?t1_owner_id . ?t2 dbo:owners\#first_name ?t2_first_name . ?t2 dbo:owners\#last_name ?t2_last_name .        } group by ?t1_owner_id ?t2_first_name ?t2_last_name  order by desc (count(*)) limit 1,"(14, 'Rachelle', 'Funk')",extra,True,1,
474,dog_kennels,"Which professionals have done at least two treatments? List the professional's id, role, and first name.","SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","(8, 'Employee', 'Karley'), (10, 'Employee', 'Domenica'), (9, 'Veterenarian', 'Monte'), (4, 'Veterenarian', 'Vernice'), (6, 'Veterenarian', 'Ruben'), (14, 'Employee', 'Sigurd')",select ?t1_professional_id ?t1_role_code ?t1_first_name where { ?t1 a dbo:professionals . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-professional_id ?t1 .  ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#role_code ?t1_role_code . ?t1 dbo:professionals\#first_name ?t1_first_name . ?t1 dbo:professionals\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_role_code ?t1_first_name   having(count( *)  >= 2),"(9, 'Veterenarian', 'Monte'), (10, 'Employee', 'Domenica'), (4, 'Veterenarian', 'Vernice'), (8, 'Employee', 'Karley'), (14, 'Employee', 'Sigurd'), (6, 'Veterenarian', 'Ruben')",medium,True,1,
475,dog_kennels,What is the name of the breed with the most dogs?,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,"('Bulldog',)",select ?t1_breed_name where { ?t1 a dbo:breeds . ?t2 a dbo:dogs . ?t2 dbo:dogs\#ref-breed_code ?t1 .  ?t1 dbo:breeds\#breed_name ?t1_breed_name . ?t1 dbo:breeds\#breed_code ?t1_breed_code .        } group by ?t1_breed_name  order by desc (count(*)) limit 1,"('Bulldog',)",extra,True,1,
476,dog_kennels,Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","(14, 'Funk')",select ?t1_owner_id ?t1_last_name where { ?t1 a dbo:owners . ?t3 a dbo:dogs . ?t3 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#owner_id ?t1_owner_id . ?t1 dbo:owners\#last_name ?t1_last_name . ?t1 dbo:owners\#owner_id ?t1_owner_id .        } group by ?t1_owner_id ?t1_last_name  order by desc (count(*)) limit 1,"(14, 'Funk')",extra,True,1,
477,dog_kennels,What is the description of the treatment type that costs the least money in total?,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,"('Take for a Walk',)",select ?t1_treatment_type_description where { ?t1 a dbo:treatment_types . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-treatment_type_code ?t1 .  ?t1 dbo:treatment_types\#treatment_type_description ?t1_treatment_type_description . ?t2 dbo:treatments\#cost_of_treatment ?t2_cost_of_treatment .        } group by ?t1_treatment_type_description  order by asc (sum( ?t2_cost_of_treatment) ) limit 1,"('Take for a Walk',)",extra,True,1,
478,dog_kennels,Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","(3, '02647')",select ?t1_owner_id ?t1_zip_code where { ?t1 a dbo:owners . ?t3 a dbo:dogs . ?t3 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#owner_id ?t1_owner_id . ?t1 dbo:owners\#zip_code ?t1_zip_code . ?t2 dbo:treatments\#cost_of_treatment ?t2_cost_of_treatment . ?t1 dbo:owners\#owner_id ?t1_owner_id . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-dog_id ?t3 .  ?t1 dbo:owners\#owner_id ?t1_owner_id . ?t1 dbo:owners\#zip_code ?t1_zip_code . ?t2 dbo:treatments\#cost_of_treatment ?t2_cost_of_treatment . ?t1 dbo:owners\#owner_id ?t1_owner_id .        } group by ?t1_owner_id ?t1_zip_code  order by desc (sum( ?t2_cost_of_treatment) ) limit 1,"(3, '02647')",extra,True,1,
479,dog_kennels,Which professionals have done at least two types of treatments? List the professional id and cell phone.,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","(8, '328.842.3792'), (10, '461-801-2600'), (9, '962-983-8109x3509'), (4, '00230569697'), (6, '139-321-7313'), (14, '1-185-137-1945x409')",select ?t1_professional_id ?t1_cell_number where { ?t1 a dbo:professionals . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-professional_id ?t1 .  ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#cell_number ?t1_cell_number . ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t3 a dbo:treatment_types . ?t2 dbo:treatments\#ref-treatment_type_code ?t3 .  ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t1 dbo:professionals\#cell_number ?t1_cell_number . ?t1 dbo:professionals\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_cell_number   having(count( *)  >= 2),"(9, '962-983-8109x3509'), (10, '461-801-2600'), (4, '00230569697'), (8, '328.842.3792'), (14, '1-185-137-1945x409'), (6, '139-321-7313')",medium,True,1,
480,dog_kennels,What are the first name and last name of the professionals who have done treatment with cost below average?,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments );","('Domenica', 'Jacobs'), ('Karley', 'Hyatt'), ('Vernice', 'Tillman'), ('Monte', 'Kshlerin'), ('Ruben', ""O'Reilly"")",select distinct ?t1_first_name ?t1_last_name where { ?t1 a dbo:professionals . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-professional_id ?t1 .  ?t1 dbo:professionals\#first_name ?t1_first_name . ?t1 dbo:professionals\#last_name ?t1_last_name . ?t2 dbo:treatments\#cost_of_treatment ?t2_cost_of_treatment . FILTER(?t2_cost_of_treatment < ?aggregation_t23_cost_of_treatment_105) .       {select (avg( ?t23_cost_of_treatment) as ?aggregation_t23_cost_of_treatment_105 ) where { ?t23 a dbo:treatments . ?t23 dbo:treatments\#cost_of_treatment ?t23_cost_of_treatment .        }    } },"('Domenica', 'Jacobs'), ('Vernice', 'Tillman'), ('Karley', 'Hyatt'), ('Ruben', ""O'Reilly""), ('Monte', 'Kshlerin')",extra,True,1,
481,dog_kennels,"List the date of each treatment, together with the first name of the professional who operated it.","SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","('2018-03-19 04:39:54', 'Monte'), ('2018-03-15 20:25:34', 'Domenica'), ('2018-03-08 05:26:23', 'Vernice'), ('2018-03-01 04:14:46', 'Karley'), ('2018-03-23 13:52:10', 'Sigurd'), ('2018-03-11 04:23:15', 'Vernice'), ('2018-03-10 11:45:58', 'Sigurd'), ('2018-03-24 22:25:58', 'Ruben'), ('2018-03-14 19:10:40', 'Domenica'), ('2018-02-28 17:09:43', 'Velva'), ('2018-03-13 12:22:58', 'Danny'), ('2018-03-16 10:27:36', 'Monte'), ('2018-02-26 09:08:53', 'Karley'), ('2018-03-04 20:33:43', 'Monte'), ('2018-03-15 19:10:02', 'Ruben')",select ?t1_date_of_treatment ?t2_first_name where { ?t1 a dbo:treatments . ?t2 a dbo:professionals . ?t1 dbo:treatments\#ref-professional_id ?t2 .  ?t1 dbo:treatments\#date_of_treatment ?t1_date_of_treatment . ?t2 dbo:professionals\#first_name ?t2_first_name .        },"('2018-03-19 04:39:54', 'Monte'), ('2018-03-15 20:25:34', 'Domenica'), ('2018-03-08 05:26:23', 'Vernice'), ('2018-03-01 04:14:46', 'Karley'), ('2018-03-23 13:52:10', 'Sigurd'), ('2018-03-11 04:23:15', 'Vernice'), ('2018-03-10 11:45:58', 'Sigurd'), ('2018-03-24 22:25:58', 'Ruben'), ('2018-03-14 19:10:40', 'Domenica'), ('2018-02-28 17:09:43', 'Velva'), ('2018-03-13 12:22:58', 'Danny'), ('2018-03-16 10:27:36', 'Monte'), ('2018-02-26 09:08:53', 'Karley'), ('2018-03-04 20:33:43', 'Monte'), ('2018-03-15 19:10:02', 'Ruben')",medium,True,1,
482,dog_kennels,List the cost of each treatment and the corresponding treatment type description.,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","(567.0, 'Take for a Walk'), (147.0, 'Vaccination'), (429.0, 'Physical examination'), (266.0, 'Vaccination'), (668.0, 'Vaccination'), (313.0, 'Physical examination'), (852.0, 'Physical examination'), (407.0, 'Physical examination'), (139.0, 'Take for a Walk'), (681.0, 'Take for a Walk'), (514.0, 'Vaccination'), (428.0, 'Physical examination'), (945.0, 'Vaccination'), (349.0, 'Take for a Walk'), (656.0, 'Take for a Walk')",select ?t1_cost_of_treatment ?t2_treatment_type_description where { ?t1 a dbo:treatments . ?t2 a dbo:treatment_types . ?t1 dbo:treatments\#ref-treatment_type_code ?t2 .  ?t1 dbo:treatments\#cost_of_treatment ?t1_cost_of_treatment . ?t2 dbo:treatment_types\#treatment_type_description ?t2_treatment_type_description .        },"(429.0, 'Physical examination'), (313.0, 'Physical examination'), (852.0, 'Physical examination'), (407.0, 'Physical examination'), (428.0, 'Physical examination'), (147.0, 'Vaccination'), (266.0, 'Vaccination'), (668.0, 'Vaccination'), (514.0, 'Vaccination'), (945.0, 'Vaccination'), (567.0, 'Take for a Walk'), (139.0, 'Take for a Walk'), (681.0, 'Take for a Walk'), (349.0, 'Take for a Walk'), (656.0, 'Take for a Walk')",medium,True,1,
483,dog_kennels,"List each owner's first name, last name, and the size of his for her dog.","SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","('Jaclyn', 'Stoltenberg', 'LGE'), ('Gay', 'Feil', 'LGE'), ('Rachelle', 'Funk', 'LGE'), ('Emelie', 'Mertz', 'MED'), ('Johann', 'Fisher', 'MED'), ('Jaclyn', 'Stoltenberg', 'MED'), ('Rachelle', 'Funk', 'SML'), ('Melisa', 'DuBuque', 'MED'), ('Kade', 'Rippin', 'MED'), ('Cindy', 'Schmitt', 'LGE'), ('Orlando', 'Price', 'MED'), ('Rolando', 'Prohaska', 'SML'), ('Rachelle', 'Funk', 'MED'), ('Lorenz', 'Nicolas', 'MED'), ('Nora', 'Haley', 'MED')",select ?t1_first_name ?t1_last_name ?t2_size_code where { ?t1 a dbo:owners . ?t2 a dbo:dogs . ?t2 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#first_name ?t1_first_name . ?t1 dbo:owners\#last_name ?t1_last_name . ?t2 dbo:dogs\#size_code ?t2_size_code .        },"('Jaclyn', 'Stoltenberg', 'LGE'), ('Gay', 'Feil', 'LGE'), ('Rachelle', 'Funk', 'LGE'), ('Emelie', 'Mertz', 'MED'), ('Johann', 'Fisher', 'MED'), ('Jaclyn', 'Stoltenberg', 'MED'), ('Rachelle', 'Funk', 'SML'), ('Melisa', 'DuBuque', 'MED'), ('Kade', 'Rippin', 'MED'), ('Cindy', 'Schmitt', 'LGE'), ('Orlando', 'Price', 'MED'), ('Rolando', 'Prohaska', 'SML'), ('Rachelle', 'Funk', 'MED'), ('Lorenz', 'Nicolas', 'MED'), ('Nora', 'Haley', 'MED')",medium,True,1,
484,dog_kennels,List pairs of the owner's first name and the dogs's name.,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","('Jaclyn', 'Kacey'), ('Gay', 'Hipolito'), ('Rachelle', 'Houston'), ('Emelie', 'Jeffrey'), ('Johann', 'Merritt'), ('Jaclyn', 'Narciso'), ('Rachelle', 'George'), ('Melisa', 'Bessie'), ('Kade', 'Troy'), ('Cindy', 'Betty'), ('Orlando', 'Holden'), ('Rolando', 'Jesus'), ('Rachelle', 'Lyric'), ('Lorenz', 'Evangeline'), ('Nora', 'Mavis')",select ?t1_first_name ?t2_name where { ?t1 a dbo:owners . ?t2 a dbo:dogs . ?t2 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#first_name ?t1_first_name . ?t2 dbo:dogs\#name ?t2_name .        },"('Jaclyn', 'Kacey'), ('Gay', 'Hipolito'), ('Rachelle', 'Houston'), ('Emelie', 'Jeffrey'), ('Johann', 'Merritt'), ('Jaclyn', 'Narciso'), ('Rachelle', 'George'), ('Melisa', 'Bessie'), ('Kade', 'Troy'), ('Cindy', 'Betty'), ('Orlando', 'Holden'), ('Rolando', 'Jesus'), ('Rachelle', 'Lyric'), ('Lorenz', 'Evangeline'), ('Nora', 'Mavis')",medium,True,1,
485,dog_kennels,List the names of the dogs of the rarest breed and the treatment dates of them.,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","('Lyric', '2018-03-19 04:39:54'), ('Houston', '2018-03-15 20:25:34'), ('Lyric', '2018-03-08 05:26:23'), ('Lyric', '2018-03-14 19:10:40'), ('Kacey', '2018-03-15 19:10:02')",select ?t1_name ?t2_date_of_treatment where { ?t1 a dbo:dogs . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-dog_id ?t1 .  ?t1 dbo:dogs\#name ?t1_name . ?t2 dbo:treatments\#date_of_treatment ?t2_date_of_treatment . ?t1 dbo:dogs\#breed_code ?t1_breed_code . FILTER(?t1_breed_code = ?t23_breed_code) .       {select ?t23_breed_code where { ?t23 a dbo:dogs . ?t23 dbo:dogs\#breed_code ?t23_breed_code .        } group by ?t23_breed_code  order by asc (count(*)) limit 1 } },"('Lyric', '2018-03-19 04:39:54'), ('Houston', '2018-03-15 20:25:34'), ('Lyric', '2018-03-08 05:26:23'), ('Lyric', '2018-03-14 19:10:40'), ('Kacey', '2018-03-15 19:10:02')",extra,True,1,
486,dog_kennels,Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","('Melisa', 'Bessie')",select ?t1_first_name ?t2_name where { ?t1 a dbo:owners . ?t2 a dbo:dogs . ?t2 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#first_name ?t1_first_name . ?t2 dbo:dogs\#name ?t2_name . ?t1 dbo:owners\#state ?t1_state . FILTER(?t1_state = 'Virginia') .        },"('Melisa', 'Bessie')",medium,True,1,
487,dog_kennels,What are the arriving date and the departing date of the dogs who have gone through a treatment?,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-04-20 00:58:55', '2018-03-24 19:12:22')",select distinct ?t1_date_arrived ?t1_date_departed where { ?t1 a dbo:dogs . ?t2 a dbo:treatments . ?t2 dbo:treatments\#ref-dog_id ?t1 .  ?t1 dbo:dogs\#date_arrived ?t1_date_arrived . ?t1 dbo:dogs\#date_departed ?t1_date_departed . ?t1 dbo:dogs\#dog_id ?t1_dog_id .        },"('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-09-08 20:10:13', '2018-03-25 06:58:44')",medium,True,1,
488,dog_kennels,List the last name of the owner owning the youngest dog.,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),"('Fisher',), ('Rippin',), ('Feil',)",select ?t1_last_name where { ?t1 a dbo:owners . ?t2 a dbo:dogs . ?t2 dbo:dogs\#ref-owner_id ?t1 .  ?t1 dbo:owners\#last_name ?t1_last_name . ?t2 dbo:dogs\#age ?t2_age . FILTER(?t2_age = ?aggregation_t23_age_233) .       {select (max( ?t23_age) as ?aggregation_t23_age_233 ) where { ?t23 a dbo:dogs . ?t23 dbo:dogs\#age ?t23_age .        }    } },"('Feil',), ('Fisher',), ('Rippin',)",extra,True,1,
489,dog_kennels,List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.,SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin',"('uboehm@example.org',), ('mekhi.little@example.org',)",select ?t1_email_address where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#email_address ?t1_email_address . ?t1 dbo:professionals\#state ?t1_state . ?t1 dbo:professionals\#state ?t1_state . FILTER(?t1_state = 'Hawaii' || ?t1_state = 'Wisconsin') .        },"('mekhi.little@example.org',), ('uboehm@example.org',)",medium,True,1,
490,dog_kennels,What are the arriving date and the departing date of all the dogs?,"SELECT date_arrived ,  date_departed FROM Dogs","('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-10-25 00:55:34', '2018-03-25 04:50:22'), ('2017-04-15 09:25:31', '2018-03-25 13:07:04'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-10-16 20:06:21', '2018-03-25 02:47:40'), ('2018-01-17 11:44:16', '2018-03-25 06:46:07'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-07-25 15:19:07', '2018-03-25 15:05:16'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-06-25 10:14:05', '2018-03-25 10:25:46')",select ?t1_date_arrived ?t1_date_departed where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#date_arrived ?t1_date_arrived . ?t1 dbo:dogs\#date_departed ?t1_date_departed .        },"('2017-09-08 20:10:13', '2018-03-25 06:58:44'), ('2017-12-22 05:02:02', '2018-03-25 02:11:32'), ('2017-04-20 00:58:55', '2018-03-24 19:12:22'), ('2017-10-25 00:55:34', '2018-03-25 04:50:22'), ('2017-04-15 09:25:31', '2018-03-25 13:07:04'), ('2017-05-06 08:03:52', '2018-03-25 06:29:10'), ('2017-10-16 20:06:21', '2018-03-25 02:47:40'), ('2018-01-17 11:44:16', '2018-03-25 06:46:07'), ('2017-12-29 06:08:26', '2018-03-25 04:42:14'), ('2017-07-25 15:19:07', '2018-03-25 15:05:16'), ('2017-10-24 04:45:13', '2018-03-25 14:15:41'), ('2018-01-02 03:15:29', '2018-03-25 05:07:47'), ('2017-06-18 19:45:38', '2018-03-24 23:48:59'), ('2017-12-29 23:24:13', '2018-03-24 19:36:59'), ('2017-06-25 10:14:05', '2018-03-25 10:25:46')",medium,True,1,
491,dog_kennels,How many dogs went through any treatments?,SELECT count(DISTINCT dog_id) FROM Treatments,"(9,)",select distinct (count(distinct ?t1_dog_id) as ?aggregation_t1_dog_id_223 ) where { ?t1 a dbo:treatments . ?t1 dbo:treatments\#dog_id ?t1_dog_id .        },"(9,)",easy,True,1,
492,dog_kennels,How many professionals have performed any treatment to dogs?,SELECT count(DISTINCT professional_id) FROM Treatments,"(8,)",select distinct (count(distinct ?t1_professional_id) as ?aggregation_t1_professional_id_311 ) where { ?t1 a dbo:treatments . ?t1 dbo:treatments\#professional_id ?t1_professional_id .        },"(8,)",easy,True,1,
493,dog_kennels,"Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.","SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","('Employee', '6915 Oberbrunner Point Suite 491 Gleasonville, LA', 'West Heidi', 'Indiana')","select ?t1_role_code ?t1_street ?t1_city ?t1_state where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#role_code ?t1_role_code . ?t1 dbo:professionals\#street ?t1_street . ?t1 dbo:professionals\#city ?t1_city . ?t1 dbo:professionals\#state ?t1_state . ?t1 dbo:professionals\#city ?t1_city . FILTER(contains (?t1_city, 'West')) .        }","('Employee', '6915 Oberbrunner Point Suite 491 Gleasonville, LA', 'West Heidi', 'Indiana')",medium,True,1,
494,dog_kennels,"Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.","SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","('Johann', 'Fisher', 'zboncak.madonna@example.net'), ('Cindy', 'Schmitt', 'wpfeffer@example.net')","select ?t1_first_name ?t1_last_name ?t1_email_address where { ?t1 a dbo:owners . ?t1 dbo:owners\#first_name ?t1_first_name . ?t1 dbo:owners\#last_name ?t1_last_name . ?t1 dbo:owners\#email_address ?t1_email_address . ?t1 dbo:owners\#state ?t1_state . FILTER(contains (?t1_state, 'North')) .        }","('Johann', 'Fisher', 'zboncak.madonna@example.net'), ('Cindy', 'Schmitt', 'wpfeffer@example.net')",medium,True,1,
495,dog_kennels,How many dogs have an age below the average?,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),"(9,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#age ?t1_age . FILTER(?t1_age < ?aggregation_t22_age_295) .       {select (avg( ?t22_age) as ?aggregation_t22_age_295 ) where { ?t22 a dbo:dogs . ?t22 dbo:dogs\#age ?t22_age .        }    } },"(9,)",hard,True,1,
496,dog_kennels,How much does the most recent treatment cost?,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,"(407.0,)",select ?t1_cost_of_treatment where { ?t1 a dbo:treatments . ?t1 dbo:treatments\#cost_of_treatment ?t1_cost_of_treatment . ?t1 dbo:treatments\#date_of_treatment ?t1_date_of_treatment .        }   order by desc (?t1_date_of_treatment) limit 1,"(407.0,)",medium,True,1,
497,dog_kennels,How many dogs have not gone through any treatment?,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),"(6,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#dog_id ?t1_dog_id .     Filter not exists {{select ?t22_dog_id where { ?t22 a dbo:treatments . ?t22 dbo:treatments\#dog_id ?t22_dog_id .        }    } FILTER (?t1_dog_id in (?t22_dog_id))}  },"(6,)",extra,True,1,
498,dog_kennels,How many owners temporarily do not have any dogs?,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:owners . ?t1 dbo:owners\#owner_id ?t1_owner_id .     Filter not exists {{select ?t22_owner_id where { ?t22 a dbo:dogs . ?t22 dbo:dogs\#owner_id ?t22_owner_id .        }    } FILTER (?t1_owner_id in (?t22_owner_id))}  },"(3,)",extra,True,1,
499,dog_kennels,How many professionals did not operate any treatment on dogs?,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),"(7,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#professional_id ?t1_professional_id .     Filter not exists {{select ?t22_professional_id where { ?t22 a dbo:treatments . ?t22 dbo:treatments\#professional_id ?t22_professional_id .        }    } FILTER (?t1_professional_id in (?t22_professional_id))}  },"(7,)",extra,True,1,
500,dog_kennels,"List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.","SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  '1'","('Kacey', 6, 7.57), ('Lyric', 4, 4.36), ('Evangeline', 1, 4.01)",select ?t1_name ?t1_age ?t1_weight where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#name ?t1_name . ?t1 dbo:dogs\#age ?t1_age . ?t1 dbo:dogs\#weight ?t1_weight . ?t1 dbo:dogs\#abandoned_yn ?t1_abandoned_yn . FILTER(?t1_abandoned_yn = '1') .        },"('Kacey', 6, 7.57), ('Lyric', 4, 4.36), ('Evangeline', 1, 4.01)",medium,True,1,false_negative
501,dog_kennels,What is the average age of all the dogs?,SELECT avg(age) FROM Dogs,"(5.066666666667,)",select (avg( ?t1_age) as ?aggregation_t1_age_428 ) where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#age ?t1_age .        },"(5.066666666667,)",easy,True,1,
502,dog_kennels,What is the age of the oldest dog?,SELECT max(age) FROM Dogs,"(9,)",select (max( ?t1_age) as ?aggregation_t1_age_256 ) where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#age ?t1_age .        },"(9,)",easy,True,1,
503,dog_kennels,How much does each charge type costs? List both charge type and amount.,"SELECT charge_type ,  charge_amount FROM Charges","('Daily Accommodation', 98.0), ('Drugs', 322.0), ('Health Check', 640.0)",select ?t1_charge_type ?t1_charge_amount where { ?t1 a dbo:charges . ?t1 dbo:charges\#charge_type ?t1_charge_type . ?t1 dbo:charges\#charge_amount ?t1_charge_amount .        },"('Daily Accommodation', 98.0), ('Drugs', 322.0), ('Health Check', 640.0)",medium,True,1,
504,dog_kennels,How much does the most expensive charge type costs?,SELECT max(charge_amount) FROM Charges,"(640.0,)",select (max( ?t1_charge_amount) as ?aggregation_t1_charge_amount_499 ) where { ?t1 a dbo:charges . ?t1 dbo:charges\#charge_amount ?t1_charge_amount .        },"(640.0,)",easy,True,1,
505,dog_kennels,"List the email, cell phone and home phone of all the professionals.","SELECT email_address ,  cell_number ,  home_phone FROM professionals","('deanna.schuster@example.com', '(275)939-2435x80863', '+71(6)2898266914'), ('lucile.shanahan@example.org', '889-940-2676', '+02(1)0259033559'), ('uboehm@example.org', '(369)908-7311x065', '325-155-0801x7005'), ('lourdes.lowe@example.net', '00230569697', '312.216.3352'), ('mekhi.little@example.org', '011.193.9081x3186', '1-609-566-2752x25197'), ('jacynthe.mclaughlin@example.net', '139-321-7313', '+43(5)1132733868'), ('lambert62@example.org', '499-434-0215x1628', '022.529.0550x1319'), ('goyette.roosevelt@example.net', '328.842.3792', '891.475.2256'), ('schneider.kathryne@example.org', '962-983-8109x3509', '320-508-6023'), ('jerrod.bahringer@example.org', '461-801-2600', '(230)338-3342x585'), ('west.eula@example.net', '609-405-2990', '(920)304-4499x59146'), ('marquardt.furman@example.org', '1-181-670-9466', '246-951-0080x76716'), ('delphine29@example.com', '880-659-7577x736', '346.594.3739'), ('cole.margarita@example.org', '1-185-137-1945x409', '971.048.3763x9404'), ('jeichmann@example.com', '1-258-285-4707x8020', '1-138-287-3775')",select ?t1_email_address ?t1_cell_number ?t1_home_phone where { ?t1 a dbo:professionals . ?t1 dbo:professionals\#email_address ?t1_email_address . ?t1 dbo:professionals\#cell_number ?t1_cell_number . ?t1 dbo:professionals\#home_phone ?t1_home_phone .        },"('deanna.schuster@example.com', '(275)939-2435x80863', '+71(6)2898266914'), ('lucile.shanahan@example.org', '889-940-2676', '+02(1)0259033559'), ('uboehm@example.org', '(369)908-7311x065', '325-155-0801x7005'), ('lourdes.lowe@example.net', '00230569697', '312.216.3352'), ('mekhi.little@example.org', '011.193.9081x3186', '1-609-566-2752x25197'), ('jacynthe.mclaughlin@example.net', '139-321-7313', '+43(5)1132733868'), ('lambert62@example.org', '499-434-0215x1628', '022.529.0550x1319'), ('goyette.roosevelt@example.net', '328.842.3792', '891.475.2256'), ('schneider.kathryne@example.org', '962-983-8109x3509', '320-508-6023'), ('jerrod.bahringer@example.org', '461-801-2600', '(230)338-3342x585'), ('west.eula@example.net', '609-405-2990', '(920)304-4499x59146'), ('marquardt.furman@example.org', '1-181-670-9466', '246-951-0080x76716'), ('delphine29@example.com', '880-659-7577x736', '346.594.3739'), ('cole.margarita@example.org', '1-185-137-1945x409', '971.048.3763x9404'), ('jeichmann@example.com', '1-258-285-4707x8020', '1-138-287-3775')",medium,True,1,
506,dog_kennels,What are all the possible breed type and size type combinations?,"SELECT DISTINCT breed_code ,  size_code FROM dogs","('ESK', 'MED'), ('HUS', 'SML'), ('BUL', 'LGE'), ('ESK', 'SML'), ('HUS', 'MED'), ('BUL', 'MED'), ('ESK', 'LGE')",select distinct ?t1_breed_code ?t1_size_code where { ?t1 a dbo:dogs . ?t1 dbo:dogs\#breed_code ?t1_breed_code . ?t1 dbo:dogs\#size_code ?t1_size_code .        },"('ESK', 'LGE'), ('BUL', 'LGE'), ('BUL', 'MED'), ('HUS', 'MED'), ('ESK', 'SML'), ('HUS', 'SML'), ('ESK', 'MED')",medium,True,1,
507,dog_kennels,List the first name of all the professionals along with the description of the treatment they have done.,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","('Ruben', 'Physical examination'), ('Karley', 'Vaccination'), ('Danny', 'Vaccination'), ('Sigurd', 'Physical examination'), ('Domenica', 'Vaccination'), ('Ruben', 'Take for a Walk'), ('Domenica', 'Take for a Walk'), ('Monte', 'Take for a Walk'), ('Velva', 'Take for a Walk'), ('Monte', 'Physical examination'), ('Vernice', 'Physical examination'), ('Sigurd', 'Vaccination')",select distinct ?t1_first_name ?t2_treatment_type_description where { ?t1 a dbo:professionals . ?t3 a dbo:treatments . ?t3 dbo:treatments\#ref-professional_id ?t1 .  ?t1 dbo:professionals\#first_name ?t1_first_name . ?t2 dbo:treatment_types\#treatment_type_description ?t2_treatment_type_description . ?t1 dbo:professionals\#professional_id ?t1_professional_id . ?t2 a dbo:treatment_types . ?t3 dbo:treatments\#ref-treatment_type_code ?t2 .  ?t1 dbo:professionals\#first_name ?t1_first_name . ?t2 dbo:treatment_types\#treatment_type_description ?t2_treatment_type_description . ?t1 dbo:professionals\#professional_id ?t1_professional_id .        },"('Vernice', 'Physical examination'), ('Sigurd', 'Physical examination'), ('Ruben', 'Physical examination'), ('Monte', 'Physical examination'), ('Domenica', 'Vaccination'), ('Karley', 'Vaccination'), ('Sigurd', 'Vaccination'), ('Danny', 'Vaccination'), ('Monte', 'Take for a Walk'), ('Domenica', 'Take for a Walk'), ('Velva', 'Take for a Walk'), ('Ruben', 'Take for a Walk')",medium,True,1,
508,singer,How many singers are there?,SELECT count(*) FROM singer,"(8,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:singer .        },"(8,)",easy,True,1,
509,singer,List the name of singers in ascending order of net worth.,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,"('Abigail Johnson',), ('Susanne Klatten',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Alice Walton',), ('Christy Walton',), ('Liliane Bettencourt',)",select ?t1_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#net_worth_millions ?t1_net_worth_millions .        }  order by asc (?t1_net_worth_millions),"('Abigail Johnson',), ('Susanne Klatten',), ('Gina Rinehart',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Alice Walton',), ('Christy Walton',), ('Liliane Bettencourt',)",easy,True,1,
510,singer,What are the birth year and citizenship of singers?,"SELECT Birth_Year ,  Citizenship FROM singer","(1944.0, 'France'), (1948.0, 'United States'), (1949.0, 'United States'), (1942.0, 'Chile'), (1940.0, 'United States'), (1953.0, 'Australia'), (1962.0, 'Germany'), (1961.0, 'United States')",select ?t1_birth_year ?t1_citizenship where { ?t1 a dbo:singer . ?t1 dbo:singer\#birth_year ?t1_birth_year . ?t1 dbo:singer\#citizenship ?t1_citizenship .        },"(1944.0, 'France'), (1948.0, 'United States'), (1949.0, 'United States'), (1942.0, 'Chile'), (1940.0, 'United States'), (1953.0, 'Australia'), (1962.0, 'Germany'), (1961.0, 'United States')",medium,True,1,
511,singer,List the name of singers whose citizenship is not 'France'.,SELECT Name FROM singer WHERE Citizenship != 'France',"('Christy Walton',), ('Alice Walton',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Gina Rinehart',), ('Susanne Klatten',), ('Abigail Johnson',)",select ?t1_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#citizenship ?t1_citizenship . FILTER(?t1_citizenship != 'France') .        },"('Christy Walton',), ('Alice Walton',), ('Iris Fontbona',), ('Jacqueline Mars',), ('Gina Rinehart',), ('Susanne Klatten',), ('Abigail Johnson',)",easy,True,1,
512,singer,Show the name of singers whose birth year is either 1948 or 1949?,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,"('Christy Walton',), ('Alice Walton',)",select ?t1_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#birth_year ?t1_birth_year . ?t1 dbo:singer\#birth_year ?t1_birth_year . FILTER(?t1_birth_year = 1948 || ?t1_birth_year = 1949) .        },"('Christy Walton',), ('Alice Walton',)",medium,True,1,
513,singer,What is the name of the singer with the largest net worth?,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,"('Liliane Bettencourt',)",select ?t1_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#net_worth_millions ?t1_net_worth_millions .        }   order by desc (?t1_net_worth_millions) limit 1,"('Liliane Bettencourt',)",medium,True,1,
514,singer,Show different citizenship of singers and the number of singers of each citizenship.,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship","('Chile', 1), ('Australia', 1), ('United States', 4), ('France', 1), ('Germany', 1)",select ?t1_citizenship (count( *) as ?aggregation_all) where { ?t1 a dbo:singer . ?t1 dbo:singer\#citizenship ?t1_citizenship .        } group by ?t1_citizenship,"('France', 1), ('United States', 4), ('Chile', 1), ('Australia', 1), ('Germany', 1)",medium,True,1,
515,singer,Please show the most common citizenship of singers.,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,"('United States',)",select ?t1_citizenship where { ?t1 a dbo:singer . ?t1 dbo:singer\#citizenship ?t1_citizenship .        } group by ?t1_citizenship  order by desc (count(*)) limit 1,"('United States',)",hard,True,1,false_negative
516,singer,Show different citizenships and the maximum net worth of singers of each citizenship.,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","('Chile', 17.4), ('Australia', 17.0), ('United States', 28.8), ('France', 30.0), ('Germany', 14.3)",select ?t1_citizenship (max( ?t1_net_worth_millions) as ?aggregation_t1_net_worth_millions_263 ) where { ?t1 a dbo:singer . ?t1 dbo:singer\#citizenship ?t1_citizenship . ?t1 dbo:singer\#net_worth_millions ?t1_net_worth_millions .        } group by ?t1_citizenship,"('France', 30.0), ('United States', 28.8), ('Chile', 17.4), ('Australia', 17.0), ('Germany', 14.3)",medium,True,1,
517,singer,Show titles of songs and names of singers.,"SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID","(""Do They Know It's Christmas"", 'Liliane Bettencourt'), (""F**k It (I Don't Want You Back)"", 'Liliane Bettencourt'), ('Cha Cha Slide', 'Christy Walton'), ('Call on Me', 'Iris Fontbona'), ('Yeah', 'Christy Walton'), ('All This Time', 'Gina Rinehart'), ('Left Outside Alone', 'Jacqueline Mars'), ('Mysterious Girl', 'Susanne Klatten')",select ?t1_title ?t2_name where { ?t1 a dbo:song . ?t2 a dbo:singer . ?t1 dbo:song\#ref-singer_id ?t2 .  ?t1 dbo:song\#title ?t1_title . ?t2 dbo:singer\#name ?t2_name .        },"(""Do They Know It's Christmas"", 'Liliane Bettencourt'), (""F**k It (I Don't Want You Back)"", 'Liliane Bettencourt'), ('Cha Cha Slide', 'Christy Walton'), ('Call on Me', 'Iris Fontbona'), ('Yeah', 'Christy Walton'), ('All This Time', 'Gina Rinehart'), ('Left Outside Alone', 'Jacqueline Mars'), ('Mysterious Girl', 'Susanne Klatten')",medium,True,1,
518,singer,Show distinct names of singers that have songs with sales more than 300000.,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,"('Christy Walton',), ('Iris Fontbona',), ('Liliane Bettencourt',)",select distinct ?t1_name where { ?t1 a dbo:singer . ?t2 a dbo:song . ?t2 dbo:song\#ref-singer_id ?t1 .  ?t1 dbo:singer\#name ?t1_name . ?t2 dbo:song\#sales ?t2_sales . FILTER(?t2_sales > 300000) .        },"('Iris Fontbona',), ('Christy Walton',), ('Liliane Bettencourt',)",medium,True,1,
519,singer,Show the names of singers that have more than one song.,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,"('Christy Walton',), ('Liliane Bettencourt',)",select ?t1_name where { ?t1 a dbo:singer . ?t2 a dbo:song . ?t2 dbo:song\#ref-singer_id ?t1 .  ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#singer_id ?t1_singer_id .        } group by ?t1_name   having(count( *)  > 1),"('Liliane Bettencourt',), ('Christy Walton',)",medium,True,1,
520,singer,Show the names of singers and the total sales of their songs.,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","('Iris Fontbona', 335000.0), ('Susanne Klatten', 261000.0), ('Christy Walton', 651421.0), ('Gina Rinehart', 292000.0), ('Jacqueline Mars', 275000.0), ('Liliane Bettencourt', 1646407.0)",select ?t1_name (sum( ?t2_sales) as ?aggregation_t2_sales_35 ) where { ?t1 a dbo:singer . ?t2 a dbo:song . ?t2 dbo:song\#ref-singer_id ?t1 .  ?t1 dbo:singer\#name ?t1_name . ?t2 dbo:song\#sales ?t2_sales .        } group by ?t1_name,"('Liliane Bettencourt', 1646407.0), ('Christy Walton', 651421.0), ('Iris Fontbona', 335000.0), ('Gina Rinehart', 292000.0), ('Jacqueline Mars', 275000.0), ('Susanne Klatten', 261000.0)",medium,True,1,
521,singer,List the name of singers that do not have any song.,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),"('Alice Walton',), ('Abigail Johnson',)",select ?t1_name where { ?t1 a dbo:singer . ?t1 dbo:singer\#name ?t1_name . ?t1 dbo:singer\#singer_id ?t1_singer_id .     Filter not exists {{select ?t22_singer_id where { ?t22 a dbo:song . ?t22 dbo:song\#singer_id ?t22_singer_id .        }    } FILTER (?t1_singer_id in (?t22_singer_id))}  },"('Alice Walton',), ('Abigail Johnson',)",hard,True,1,
522,singer,Show the citizenship shared by singers with birth year before 1945 and after 1955.,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,"('United States',)",select distinct ?t1_citizenship where { ?t1 a dbo:singer . ?t1 dbo:singer\#citizenship ?t1_citizenship . ?t1 dbo:singer\#birth_year ?t1_birth_year . FILTER(?t1_birth_year < 1945) . FILTER (?t1_citizenship in (?t2_citizenship)) .  { ?t2 a dbo:singer . ?t2 dbo:singer\#citizenship ?t2_citizenship . ?t2 dbo:singer\#birth_year ?t2_birth_year .  FILTER(?t2_birth_year > 1955) .     }      },"('United States',)",hard,True,1,
523,real_estate_properties,How many available features are there in total?,SELECT count(*) FROM Other_Available_Features,"(3,)",select (count( *) as ?aggregation_all) where { ?t1 a dbo:other_available_features .        },"(3,)",easy,True,1,
524,real_estate_properties,What is the feature type name of feature AirCon?,SELECT T2.feature_type_name FROM other_available_features AS T1 JOIN reference_feature_types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  'AirCon',"('Amenity, eg Pool.',)",select ?t1_feature_type_name where { ?t1 a dbo:reference_feature_types . ?t2 a dbo:other_available_features . ?t2 dbo:other_available_features\#ref-feature_type_code ?t1 .  ?t1 dbo:reference_feature_types\#feature_type_name ?t1_feature_type_name . ?t2 dbo:other_available_features\#feature_name ?t2_feature_name . FILTER(?t2_feature_name = 'AirCon') .        },"('Amenity, eg Pool.',)",medium,True,1,
525,real_estate_properties,Show the property type descriptions of properties belonging to that code.,SELECT T2.property_type_description FROM properties AS T1 JOIN reference_property_types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T2.property_type_description,"('Shop, Retail Outlet.',), ('Apartment, Flat, Condo, etc.',), ('Field, Meadow.',), ('House, Bungalow, etc.',), ('Other, to be determined.',)",select ?t1_property_type_description where { ?t1 a dbo:reference_property_types . ?t2 a dbo:properties . ?t2 dbo:properties\#ref-property_type_code ?t1 .  ?t1 dbo:reference_property_types\#property_type_description ?t1_property_type_description . ?t1 dbo:reference_property_types\#property_type_code ?t1_property_type_code .        },"('House, Bungalow, etc.',), ('House, Bungalow, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Apartment, Flat, Condo, etc.',), ('Field, Meadow.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Other, to be determined.',), ('Shop, Retail Outlet.',), ('Shop, Retail Outlet.',)",medium,False,0,
526,real_estate_properties,What are the names of properties that are either houses or apartments with more than 1 room?,SELECT property_name FROM Properties WHERE property_type_code  =  'House' UNION SELECT property_name FROM Properties WHERE property_type_code  =  'Apartment' AND room_count  >  1,"('longacre',), ('parc coliseum',), ('parc east',), ('park',), ('renoir',), ('ten tower',), ('the cole',), ('vogue',)",SELECT distinct?col1 WHERE { { select (?t1_property_name as ?col1) where { ?t1 a dbo:properties . ?t1 dbo:properties\#property_name ?t1_property_name . ?t1 dbo:properties\#property_type_code ?t1_property_type_code . FILTER(?t1_property_type_code = 'House') .   }} UNION {select (?t1_property_name as ?col1) where { ?t1 a dbo:properties . ?t1 dbo:properties\#property_name ?t1_property_name . ?t1 dbo:properties\#property_type_code ?t1_property_type_code . ?t1 dbo:properties\#room_count ?t1_room_count . FILTER(?t1_property_type_code = 'Apartment' && ?t1_room_count > 1) .        }      } },"('park',), ('the cole',), ('parc east',), ('vogue',), ('longacre',), ('renoir',), ('ten tower',), ('parc coliseum',)",hard,True,1,
