[
    {
        "kg_name": "concert_singer",
        "question": "How many singers do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :singer .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the total number of singers?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :singer .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "query": "select ?t1_name ?t1_country ?t1_age where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age .        }  order by desc (?t1_age)"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "query": "select ?t1_name ?t1_country ?t1_age where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age .        }  order by desc (?t1_age)"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the average, minimum, and maximum age of all singers from France?",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_25 ) (min( ?t1_age) as ?aggregation_t1_age_52 ) (max( ?t1_age) as ?aggregation_t1_age_136 ) where { ?t1 a :singer . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#country ?t1_country . FILTER(?t1_country = 'France') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the average, minimum, and maximum age for all French singers?",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_25 ) (min( ?t1_age) as ?aggregation_t1_age_52 ) (max( ?t1_age) as ?aggregation_t1_age_136 ) where { ?t1 a :singer . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#age ?t1_age . ?t1 :singer\\#country ?t1_country . FILTER(?t1_country = 'France') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show the name and the release year of the song by the youngest singer.",
        "query": "select ?t1_song_name ?t1_song_release_year where { ?t1 a :singer . ?t1 :singer\\#song_name ?t1_song_name . ?t1 :singer\\#song_release_year ?t1_song_release_year . ?t1 :singer\\#age ?t1_age .        }   order by asc (?t1_age) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "query": "select ?t1_song_name ?t1_song_release_year where { ?t1 a :singer . ?t1 :singer\\#song_name ?t1_song_name . ?t1 :singer\\#song_release_year ?t1_song_release_year . ?t1 :singer\\#age ?t1_age .        }   order by asc (?t1_age) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are all distinct countries where singers above age 20 are from?",
        "query": "select distinct ?t1_country where { ?t1 a :singer . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#age ?t1_age . FILTER(?t1_age > 20) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are  the different countries with singers above age 20?",
        "query": "select distinct ?t1_country where { ?t1 a :singer . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#age ?t1_age . FILTER(?t1_age > 20) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show all countries and the number of singers in each country.",
        "query": "select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t1 :singer\\#country ?t1_country .        } group by ?t1_country"
    },
    {
        "kg_name": "concert_singer",
        "question": "How many singers are from each country?",
        "query": "select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t1 :singer\\#country ?t1_country .        } group by ?t1_country"
    },
    {
        "kg_name": "concert_singer",
        "question": "List all song names by singers above the average age.",
        "query": "select ?t1_song_name where { ?t1 a :singer . ?t1 :singer\\#song_name ?t1_song_name . ?t1 :singer\\#age ?t1_age . FILTER(?t1_age > ?aggregation_t22_age_61) .       {select (avg( ?t22_age) as ?aggregation_t22_age_61 ) where { ?t22 a :singer . ?t22 :singer\\#age ?t22_age .        }    } }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are all the song names by singers who are older than average?",
        "query": "select ?t1_song_name where { ?t1 a :singer . ?t1 :singer\\#song_name ?t1_song_name . ?t1 :singer\\#age ?t1_age . FILTER(?t1_age > ?aggregation_t22_age_61) .       {select (avg( ?t22_age) as ?aggregation_t22_age_61 ) where { ?t22 a :singer . ?t22 :singer\\#age ?t22_age .        }    } }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "query": "select ?t1_location ?t1_name where { ?t1 a :stadium . ?t1 :stadium\\#location ?t1_location . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t1 :stadium\\#capacity ?t1_capacity . FILTER(?t1_capacity >= 5000 && ?t1_capacity <= 10000) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "query": "select ?t1_location ?t1_name where { ?t1 a :stadium . ?t1 :stadium\\#location ?t1_location . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t1 :stadium\\#capacity ?t1_capacity . FILTER(?t1_capacity >= 5000 && ?t1_capacity <= 10000) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the maximum capacity and the average of all stadiums ?",
        "query": "SELECT (max( ?T1_capacity) as ?aggregation_T1_capacity_127 ) ?T1_average WHERE { ?T1 a :stadium . ?T1 :stadium\\#capacity ?T1_capacity . ?T1 :stadium\\#average ?T1_average .        } GROUP BY ?T1_average"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the average and maximum capacities for all stadiums ?",
        "query": "SELECT (max( ?T1_capacity) as ?aggregation_T1_capacity_127 ) ?T1_average WHERE { ?T1 a :stadium . ?T1 :stadium\\#capacity ?T1_capacity . ?T1 :stadium\\#average ?T1_average .        } GROUP BY ?T1_average"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "query": "select ?t1_name ?t1_capacity where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t1 :stadium\\#average ?t1_average .        }   order by desc (?t1_average) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "query": "select ?t1_name ?t1_capacity where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t1 :stadium\\#average ?t1_average .        }   order by desc (?t1_average) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "How many concerts are there in year 2014 or 2015?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t1 :concert\\#year ?t1_year . ?t1 :concert\\#year ?t1_year . FILTER(?t1_year = '2014' || ?t1_year = '2015') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "How many concerts occurred in 2014 or 2015?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t1 :concert\\#year ?t1_year . ?t1 :concert\\#year ?t1_year . FILTER(?t1_year = '2014' || ?t1_year = '2015') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show the stadium name and the number of concerts in each stadium.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :stadium . ?T2 a :concert . ?T2 :concert\\#ref-stadium_id ?T1 .  ?T1 :stadium\\#name ?T1_name .        } GROUP BY ?T1_name"
    },
    {
        "kg_name": "concert_singer",
        "question": "For each stadium, how many concerts play there?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :stadium . ?T2 a :concert . ?T2 :concert\\#ref-stadium_id ?T1 .  ?T1 :stadium\\#name ?T1_name .        } GROUP BY ?T1_name"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "query": "select ?t1_name (count( *) as ?aggregation_all) ?t1_capacity where { ?t1 a :stadium . ?t2 a :concert . ?t2 :concert\\#ref-stadium_id ?t1 .  ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t2 :concert\\#year ?t2_year . FILTER(?t2_year >= '2014') .        } group by ?t1_name ?t1_capacity  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
        "query": "select ?t1_name (count( *) as ?aggregation_all) ?t1_capacity where { ?t1 a :stadium . ?t2 a :concert . ?t2 :concert\\#ref-stadium_id ?t1 .  ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#capacity ?t1_capacity . ?t2 :concert\\#year ?t2_year . FILTER(?t2_year >= '2014') .        } group by ?t1_name ?t1_capacity  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "Which year has most number of concerts?",
        "query": "select ?t1_year (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t1 :concert\\#year ?t1_year .        } group by ?t1_year  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the year that had the most concerts?",
        "query": "select ?t1_year (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t1 :concert\\#year ?t1_year .        } group by ?t1_year  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show the stadium names without any concert.",
        "query": "select ?t1_name where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#stadium_id ?t1_stadium_id .     Filter not exists {{select ?t22_stadium_id where { ?t22 a :concert . ?t22 :concert\\#stadium_id ?t22_stadium_id .        }    } FILTER (?t1_stadium_id in (?t22_stadium_id))}  }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names of the stadiums without any concerts?",
        "query": "select ?t1_name where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#stadium_id ?t1_stadium_id .     Filter not exists {{select ?t22_stadium_id where { ?t22 a :concert . ?t22 :concert\\#stadium_id ?t22_stadium_id .        }    } FILTER (?t1_stadium_id in (?t22_stadium_id))}  }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "query": "select distinct ?t1_country where { ?t1 a :singer . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#age ?t1_age . FILTER(?t1_age > 40) . FILTER (?t1_country in (?t2_country)) .   ?t2 a :singer . ?t2 :singer\\#country ?t2_country . ?t2 :singer\\#age ?t2_age .  FILTER(?t2_age < 30) .             }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_name as ?col1) where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name .   }}  MINUS {select (?t2_name as ?col1) where { ?t2 a :stadium . ?t3 a :concert . ?t3 :concert\\#ref-stadium_id ?t2 .  ?t2 :stadium\\#name ?t2_name . ?t3 :concert\\#year ?t3_year . FILTER(?t3_year = '2014') .        }     } }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names of all stadiums that did not have a concert in 2014?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_name as ?col1) where { ?t1 a :stadium . ?t1 :stadium\\#name ?t1_name .   }}  MINUS {select (?t2_name as ?col1) where { ?t2 a :stadium . ?t3 a :concert . ?t3 :concert\\#ref-stadium_id ?t2 .  ?t2 :stadium\\#name ?t2_name . ?t3 :concert\\#year ?t3_year . FILTER(?t3_year = '2014') .        }     } }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Show the name and theme for all concerts and the number of singers in each concert.",
        "query": "select ?t1_concert_name ?t1_theme (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t13 a :singer_in_concert . ?t13 :singer_in_concert\\#ref-concert_id ?t1 .  ?t1 :concert\\#concert_name ?t1_concert_name . ?t1 :concert\\#theme ?t1_theme .        } group by ?t1_concert_name ?t1_theme"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names , themes , and number of singers for every concert ?",
        "query": "SELECT ?T1_concert_name ?T1_theme (count( *) as ?aggregation_all) WHERE { ?T1 a :concert . ?T13 a :singer_in_concert . ?T13 :singer_in_concert\\#ref-concert_id ?T1 .  ?T1 :concert\\#concert_name ?T1_concert_name . ?T1 :concert\\#theme ?T1_theme .        } GROUP BY ?T1_concert_name ?T1_theme"
    },
    {
        "kg_name": "concert_singer",
        "question": "List singer names and number of concerts for each singer.",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t13 a :singer_in_concert . ?t13 :singer_in_concert\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name .        } group by ?t1_name"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names of the singers and number of concerts for each person?",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t13 a :singer_in_concert . ?t13 :singer_in_concert\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name .        } group by ?t1_name"
    },
    {
        "kg_name": "concert_singer",
        "question": "List all singer names in concerts in year 2014.",
        "query": "select ?t1_name where { ?t1 a :singer . ?t2 a :singer_in_concert . ?t2 :singer_in_concert\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id . ?t3 :concert\\#year ?t3_year . ?t3 a :concert . ?t2 :singer_in_concert\\#ref-concert_id ?t3 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id . ?t3 :concert\\#year ?t3_year . FILTER(?t3_year = '2014') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names of the singers who performed in a concert in 2014?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t2 a :singer_in_concert . ?t2 :singer_in_concert\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id . ?t3 :concert\\#year ?t3_year . ?t3 a :concert . ?t2 :singer_in_concert\\#ref-concert_id ?t3 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id . ?t3 :concert\\#year ?t3_year . FILTER(?t3_year = '2014') .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "query": "select ?t1_name ?t1_country where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#song_name ?t1_song_name . FILTER(contains (?t1_song_name, 'Hey')) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "query": "select ?t1_name ?t1_country where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#country ?t1_country . ?t1 :singer\\#song_name ?t1_song_name . FILTER(contains (?t1_song_name, 'Hey')) .        }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "query": "select distinct ?t1_name ?t1_location where { ?t1 a :stadium . ?t2 a :concert . ?t2 :concert\\#ref-stadium_id ?t1 .  ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#location ?t1_location . ?t2 :concert\\#year ?t2_year . FILTER(?t2_year = '2014') . FILTER (?t1_name in (?t3_name)) . FILTER (?t1_location in (?t3_location)) .   ?t3 a :stadium . ?t4 a :concert . ?t4 :concert\\#ref-stadium_id ?t3 .  ?t3 :stadium\\#name ?t3_name . ?t3 :stadium\\#location ?t3_location . ?t4 :concert\\#year ?t4_year .  FILTER(?t4_year = '2015') .             }"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "query": "select distinct ?t1_name ?t1_location where { ?t1 a :stadium . ?t2 a :concert . ?t2 :concert\\#ref-stadium_id ?t1 .  ?t1 :stadium\\#name ?t1_name . ?t1 :stadium\\#location ?t1_location . ?t2 :concert\\#year ?t2_year . FILTER(?t2_year = '2014') . FILTER (?t1_name in (?t3_name)) . FILTER (?t1_location in (?t3_location)) .   ?t3 a :stadium . ?t4 a :concert . ?t4 :concert\\#ref-stadium_id ?t3 .  ?t3 :stadium\\#name ?t3_name . ?t3 :stadium\\#location ?t3_location . ?t4 :concert\\#year ?t4_year .  FILTER(?t4_year = '2015') .             }"
    },
    {
        "kg_name": "concert_singer",
        "question": "Find the number of concerts happened in the stadium with the highest capacity .",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t2 a :stadium . ?t1 :concert\\#ref-stadium_id ?t2 .  ?t2 :stadium\\#capacity ?t2_capacity .        }   order by desc (?t2_capacity) limit 1"
    },
    {
        "kg_name": "concert_singer",
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :concert . ?t2 a :stadium . ?t1 :concert\\#ref-stadium_id ?t2 .  ?t2 :stadium\\#capacity ?t2_capacity .        }   order by desc (?t2_capacity) limit 1"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the number of pets whose weight is heavier than 10.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . FILTER(?t1_weight > 10) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "How many pets have a greater weight than 10?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . FILTER(?t1_weight > 10) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the weight of the youngest dog.",
        "query": "select ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1"
    },
    {
        "kg_name": "pets_1",
        "question": "How much does the youngest dog weigh?",
        "query": "select ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "query": "select (max( ?t1_weight) as ?aggregation_t1_weight_64 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "List the maximum weight and type for each type of pet.",
        "query": "select (max( ?t1_weight) as ?aggregation_t1_weight_64 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "Find number of pets owned by students who are older than 20.",
        "query": "select (count( *) as ?aggregation_all) where { ?t13 a :has_pet . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#age ?t2_age . FILTER(?t2_age > 20) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "How many pets are owned by students that have an age greater than 20?",
        "query": "select (count( *) as ?aggregation_all) where { ?t13 a :has_pet . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#age ?t2_age . FILTER(?t2_age > 20) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :pets . ?t13 a :has_pet . ?t13 :has_pet\\#ref-petid ?t1 .  ?t2 :student\\#sex ?t2_sex . ?t1 :pets\\#pettype ?t1_pettype . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#sex ?t2_sex . ?t1 :pets\\#pettype ?t1_pettype . FILTER(?t2_sex = 'F' && ?t1_pettype = 'dog') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "How many dog pets are raised by female students?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :pets . ?t13 a :has_pet . ?t13 :has_pet\\#ref-petid ?t1 .  ?t2 :student\\#sex ?t2_sex . ?t1 :pets\\#pettype ?t1_pettype . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#sex ?t2_sex . ?t1 :pets\\#pettype ?t1_pettype . FILTER(?t2_sex = 'F' && ?t1_pettype = 'dog') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the number of distinct type of pets.",
        "query": "select distinct (count(distinct ?t1_pettype) as ?aggregation_t1_pettype_98 ) where { ?t1 a :pets . ?t1 :pets\\#pettype ?t1_pettype .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "How many different types of pet are there?",
        "query": "select distinct (count(distinct ?t1_pettype) as ?aggregation_t1_pettype_98 ) where { ?t1 a :pets . ?t1 :pets\\#pettype ?t1_pettype .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the first name of students who have cat or dog pet.",
        "query": "select distinct ?t1_fname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat' || ?t3_pettype = 'dog') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What are the first names of every student who has a cat or dog as a pet?",
        "query": "select distinct ?t1_fname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat' || ?t3_pettype = 'dog') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the first name of students who have both cat and dog pets .",
        "query": "select distinct ?t1_fname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat' || ?t3_pettype = 'dog') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What are the students' first names who have both cats and dogs as pets?",
        "query": "select distinct ?t1_fname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pettype = 'cat') . FILTER (?t1_fname in (?t4_fname)) .   ?t4 a :student . ?t5 a :has_pet . ?t5 :has_pet\\#ref-stuid ?t4 .  ?t4 :student\\#fname ?t4_fname . ?t4 :student\\#stuid ?t4_stuid . ?t6 :pets\\#pettype ?t6_pettype . ?t6 a :pets . ?t5 :has_pet\\#ref-petid ?t6 .  ?t4 :student\\#fname ?t4_fname . ?t4 :student\\#stuid ?t4_stuid . ?t6 :pets\\#pettype ?t6_pettype .  FILTER(?t6_pettype = 'dog') .             }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the major and age of students who do not have a cat pet.",
        "query": "select ?t1_major ?t1_age where { ?t1 a :student . ?t1 :student\\#major ?t1_major . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a :student . ?t23 a :has_pet . ?t23 :has_pet\\#ref-stuid ?t22 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid . ?t24 :pets\\#pettype ?t24_pettype . ?t24 a :pets . ?t23 :has_pet\\#ref-petid ?t24 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid . ?t24 :pets\\#pettype ?t24_pettype . FILTER(?t24_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t22_stuid))}  }"
    },
    {
        "kg_name": "pets_1",
        "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
        "query": "select ?t1_major ?t1_age where { ?t1 a :student . ?t1 :student\\#major ?t1_major . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a :student . ?t23 a :has_pet . ?t23 :has_pet\\#ref-stuid ?t22 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid . ?t24 :pets\\#pettype ?t24_pettype . ?t24 a :pets . ?t23 :has_pet\\#ref-petid ?t24 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid . ?t24 :pets\\#pettype ?t24_pettype . FILTER(?t24_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t22_stuid))}  }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the id of students who do not have a cat pet.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_stuid as ?col1) where { ?t1 a :student . ?t1 :student\\#stuid ?t1_stuid .   }}  MINUS {select (?t2_stuid as ?col1) where { ?t2 a :student . ?t3 a :has_pet . ?t3 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#stuid ?t2_stuid . ?t2 :student\\#stuid ?t2_stuid . ?t4 :pets\\#pettype ?t4_pettype . ?t4 a :pets . ?t3 :has_pet\\#ref-petid ?t4 .  ?t2 :student\\#stuid ?t2_stuid . ?t2 :student\\#stuid ?t2_stuid . ?t4 :pets\\#pettype ?t4_pettype . FILTER(?t4_pettype = 'cat') .        }     } }"
    },
    {
        "kg_name": "pets_1",
        "question": "What are the ids of the students who do not own cats as pets?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_stuid as ?col1) where { ?t1 a :student . ?t1 :student\\#stuid ?t1_stuid .   }}  MINUS {select (?t2_stuid as ?col1) where { ?t2 a :student . ?t3 a :has_pet . ?t3 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#stuid ?t2_stuid . ?t2 :student\\#stuid ?t2_stuid . ?t4 :pets\\#pettype ?t4_pettype . ?t4 a :pets . ?t3 :has_pet\\#ref-petid ?t4 .  ?t2 :student\\#stuid ?t2_stuid . ?t2 :student\\#stuid ?t2_stuid . ?t4 :pets\\#pettype ?t4_pettype . FILTER(?t4_pettype = 'cat') .        }     } }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "query": "select ?t1_fname ?t1_age where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t1 :student\\#stuid ?t1_stuid . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t1 :student\\#stuid ?t1_stuid . FILTER(?t3_pettype = 'dog') .     Filter not exists {{select ?t24_stuid where { ?t24 a :student . ?t25 a :has_pet . ?t25 :has_pet\\#ref-stuid ?t24 .  ?t24 :student\\#stuid ?t24_stuid . ?t24 :student\\#stuid ?t24_stuid . ?t26 :pets\\#pettype ?t26_pettype . ?t26 a :pets . ?t25 :has_pet\\#ref-petid ?t26 .  ?t24 :student\\#stuid ?t24_stuid . ?t24 :student\\#stuid ?t24_stuid . ?t26 :pets\\#pettype ?t26_pettype . FILTER(?t26_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t24_stuid))}  }"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the first name of every student who has a dog but does not have a cat?",
        "query": "select ?t1_fname ?t1_age where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t1 :student\\#stuid ?t1_stuid . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pettype ?t3_pettype . ?t1 :student\\#stuid ?t1_stuid . FILTER(?t3_pettype = 'dog') .     Filter not exists {{select ?t24_stuid where { ?t24 a :student . ?t25 a :has_pet . ?t25 :has_pet\\#ref-stuid ?t24 .  ?t24 :student\\#stuid ?t24_stuid . ?t24 :student\\#stuid ?t24_stuid . ?t26 :pets\\#pettype ?t26_pettype . ?t26 a :pets . ?t25 :has_pet\\#ref-petid ?t26 .  ?t24 :student\\#stuid ?t24_stuid . ?t24 :student\\#stuid ?t24_stuid . ?t26 :pets\\#pettype ?t26_pettype . FILTER(?t26_pettype = 'cat') .        }    } FILTER (?t1_stuid in (?t24_stuid))}  }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the type and weight of the youngest pet.",
        "query": "select ?t1_pettype ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#pettype ?t1_pettype . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1"
    },
    {
        "kg_name": "pets_1",
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "query": "select ?t1_pettype ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#pettype ?t1_pettype . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age .        }   order by asc (?t1_pet_age) limit 1"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the id and weight of all pets whose age is older than 1.",
        "query": "select ?t1_petid ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#petid ?t1_petid . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age . FILTER(?t1_pet_age > 1) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the id and weight of every pet who is older than 1?",
        "query": "select ?t1_petid ?t1_weight where { ?t1 a :pets . ?t1 :pets\\#petid ?t1_petid . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pet_age ?t1_pet_age . FILTER(?t1_pet_age > 1) .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the average and maximum age for each type of pet.",
        "query": "select (avg( ?t1_pet_age) as ?aggregation_t1_pet_age_2 ) (max( ?t1_pet_age) as ?aggregation_t1_pet_age_13 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#pet_age ?t1_pet_age . ?t1 :pets\\#pet_age ?t1_pet_age . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the average and maximum age for each pet type?",
        "query": "select (avg( ?t1_pet_age) as ?aggregation_t1_pet_age_2 ) (max( ?t1_pet_age) as ?aggregation_t1_pet_age_13 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#pet_age ?t1_pet_age . ?t1 :pets\\#pet_age ?t1_pet_age . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the average weight for each pet type.",
        "query": "select (avg( ?t1_weight) as ?aggregation_t1_weight_83 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the average weight for each type of pet?",
        "query": "select (avg( ?t1_weight) as ?aggregation_t1_weight_83 ) ?t1_pettype where { ?t1 a :pets . ?t1 :pets\\#weight ?t1_weight . ?t1 :pets\\#pettype ?t1_pettype .        } group by ?t1_pettype"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the first name and age of students who have a pet.",
        "query": "select distinct ?t1_fname ?t1_age where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What are the different first names and ages of the students who do have pets?",
        "query": "select distinct ?t1_fname ?t1_age where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the id of the pet owned by student whose last name is \u201a\u00c4\u00f2Smith\u201a\u00c4\u00f4.",
        "query": "select ?t1_petid where { ?t1 a :has_pet . ?t2 a :student . ?t1 :has_pet\\#ref-stuid ?t2 .  ?t1 :has_pet\\#petid ?t1_petid . ?t2 :student\\#lname ?t2_lname . FILTER(?t2_lname = 'Smith') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "query": "select ?t1_petid where { ?t1 a :has_pet . ?t2 a :student . ?t1 :has_pet\\#ref-stuid ?t2 .  ?t1 :has_pet\\#petid ?t1_petid . ?t2 :student\\#lname ?t2_lname . FILTER(?t2_lname = 'Smith') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the number of pets for each student who has any pet and student id.",
        "query": "select (count( *) as ?aggregation_all) ?t2_stuid where { ?t13 a :has_pet . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#stuid ?t2_stuid .        } group by ?t2_stuid"
    },
    {
        "kg_name": "pets_1",
        "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
        "query": "select (count( *) as ?aggregation_all) ?t2_stuid where { ?t13 a :has_pet . ?t2 a :student . ?t13 :has_pet\\#ref-stuid ?t2 .  ?t2 :student\\#stuid ?t2_stuid .        } group by ?t2_stuid"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the first name and gender of student who have more than one pet.",
        "query": "select ?t1_fname ?t1_sex where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#sex ?t1_sex . ?t1 :student\\#stuid ?t1_stuid .        } group by ?t1_fname ?t1_sex   having(count( *)  > 1)"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the first name and gender of the all the students who have more than one pet?",
        "query": "select ?t1_fname ?t1_sex where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#fname ?t1_fname . ?t1 :student\\#sex ?t1_sex . ?t1 :student\\#stuid ?t1_stuid .        } group by ?t1_fname ?t1_sex   having(count( *)  > 1)"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the last name of the student who has a cat that is age 3.",
        "query": "select ?t1_lname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#lname ?t1_lname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pet_age ?t3_pet_age . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#lname ?t1_lname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pet_age ?t3_pet_age . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pet_age = 3 && ?t3_pettype = 'cat') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the last name of the student who has a cat that is 3 years old?",
        "query": "select ?t1_lname where { ?t1 a :student . ?t2 a :has_pet . ?t2 :has_pet\\#ref-stuid ?t1 .  ?t1 :student\\#lname ?t1_lname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pet_age ?t3_pet_age . ?t3 :pets\\#pettype ?t3_pettype . ?t3 a :pets . ?t2 :has_pet\\#ref-petid ?t3 .  ?t1 :student\\#lname ?t1_lname . ?t1 :student\\#stuid ?t1_stuid . ?t3 :pets\\#pet_age ?t3_pet_age . ?t3 :pets\\#pettype ?t3_pettype . FILTER(?t3_pet_age = 3 && ?t3_pettype = 'cat') .        }"
    },
    {
        "kg_name": "pets_1",
        "question": "Find the average age of students who do not have any pet .",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_47 ) where { ?t1 a :student . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a :student . ?t23 a :has_pet . ?t23 :has_pet\\#ref-stuid ?t22 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid .        }    } FILTER (?t1_stuid in (?t22_stuid))}  }"
    },
    {
        "kg_name": "pets_1",
        "question": "What is the average age for all students who do not own any pets ?",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_47 ) where { ?t1 a :student . ?t1 :student\\#age ?t1_age . ?t1 :student\\#stuid ?t1_stuid .     Filter not exists {{select ?t22_stuid where { ?t22 a :student . ?t23 a :has_pet . ?t23 :has_pet\\#ref-stuid ?t22 .  ?t22 :student\\#stuid ?t22_stuid . ?t22 :student\\#stuid ?t22_stuid .        }    } FILTER (?t1_stuid in (?t22_stuid))}  }"
    },
    {
        "kg_name": "car_1",
        "question": "How many continents are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :continents .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of continents?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :continents .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "query": "select ?t1_contid ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a :continents . ?t2 a :countries . ?t2 :countries\\#ref-continent ?t1 .  ?t1 :continents\\#contid ?t1_contid . ?t1 :continents\\#continent ?t1_continent .        } group by ?t1_contid ?t1_continent"
    },
    {
        "kg_name": "car_1",
        "question": "For each continent, list its id, name, and how many countries it has?",
        "query": "select ?t1_contid ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a :continents . ?t2 a :countries . ?t2 :countries\\#ref-continent ?t1 .  ?t1 :continents\\#contid ?t1_contid . ?t1 :continents\\#continent ?t1_continent .        } group by ?t1_contid ?t1_continent"
    },
    {
        "kg_name": "car_1",
        "question": "How many countries are listed?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :countries .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many countries exist?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :countries .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many models does each car maker produce? List maker full name, id and the number.",
        "query": "SELECT ?T1_fullname ?T1_id (count( *) as ?aggregation_all) WHERE { ?T1 a :car_makers . ?T2 a :model_list . ?T2 :model_list\\#ref-maker ?T1 .  ?T1 :car_makers\\#fullname ?T1_fullname . ?T1 :car_makers\\#id ?T1_id .        } GROUP BY ?T1_fullname ?T1_id"
    },
    {
        "kg_name": "car_1",
        "question": "What is the full name of each car maker, along with its id and how many models it produces?",
        "query": "SELECT ?T1_fullname ?T1_id (count( *) as ?aggregation_all) WHERE { ?T1 a :car_makers . ?T2 a :model_list . ?T2 :model_list\\#ref-maker ?T1 .  ?T1 :car_makers\\#fullname ?T1_fullname . ?T1 :car_makers\\#id ?T1_id .        } GROUP BY ?T1_fullname ?T1_id"
    },
    {
        "kg_name": "car_1",
        "question": "Which model of the car has the minimum horsepower?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#horsepower ?t2_horsepower .        }   order by asc (?t2_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the model of the car with the smallest amount of horsepower?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#horsepower ?t2_horsepower .        }   order by asc (?t2_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "Find the model of the car whose weight is below the average weight.",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#weight ?t2_weight . FILTER(?t2_weight < ?aggregation_t23_weight_100) .       {select (avg( ?t23_weight) as ?aggregation_t23_weight_100 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#weight ?t23_weight .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the model for the car with a weight smaller than the average?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#weight ?t2_weight . FILTER(?t2_weight < ?aggregation_t23_weight_100) .       {select (avg( ?t23_weight) as ?aggregation_t23_weight_100 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#weight ?t23_weight .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "Find the name of the makers that produced some cars in the year of 1970?",
        "query": "SELECT DISTINCT ?T1_maker WHERE { ?T1 a :car_makers . ?T13 a :model_list . ?T13 :model_list\\#ref-maker ?T1 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . ?T14 a :car_names . ?T14 :car_names\\#ref-model ?T13 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . ?T2 a :cars_data . ?T2 :cars_data\\#ref-id ?T14 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . FILTER(?T2_year = 1970) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the name of the different car makers who produced a car in 1970?",
        "query": "SELECT DISTINCT ?T1_maker WHERE { ?T1 a :car_makers . ?T13 a :model_list . ?T13 :model_list\\#ref-maker ?T1 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . ?T14 a :car_names . ?T14 :car_names\\#ref-model ?T13 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . ?T2 a :cars_data . ?T2 :cars_data\\#ref-id ?T14 .  ?T1 :car_makers\\#maker ?T1_maker . ?T2 :cars_data\\#year ?T2_year . FILTER(?T2_year = 1970) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "Find the make and production time of the cars that were produced in the earliest year?",
        "query": "select ?t1_make ?t2_year where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#make ?t1_make . ?t2 :cars_data\\#year ?t2_year . ?t2 :cars_data\\#year ?t2_year . FILTER(?t2_year = ?aggregation_t23_year_172) .       {select (min( ?t23_year) as ?aggregation_t23_year_172 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#year ?t23_year .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maker of the carr produced in the earliest year and what year was it?",
        "query": "select ?t1_make ?t2_year where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#make ?t1_make . ?t2 :cars_data\\#year ?t2_year . ?t2 :cars_data\\#year ?t2_year . FILTER(?t2_year = ?aggregation_t23_year_172) .       {select (min( ?t23_year) as ?aggregation_t23_year_172 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#year ?t23_year .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "Which distinct car models are the produced after 1980?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#year ?t3_year . ?t3 a :cars_data . ?t3 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#year ?t3_year . FILTER(?t3_year > 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the different models for the cards produced after 1980?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#year ?t3_year . ?t3 a :cars_data . ?t3 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#year ?t3_year . FILTER(?t3_year > 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many car makers are there in each continents? List the continent name and the count.",
        "query": "select ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a :continents . ?t13 a :countries . ?t13 :countries\\#ref-continent ?t1 .  ?t1 :continents\\#continent ?t1_continent . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t13 .  ?t1 :continents\\#continent ?t1_continent .        } group by ?t1_continent"
    },
    {
        "kg_name": "car_1",
        "question": "What is the name of each continent and how many car makers are there in each one?",
        "query": "select ?t1_continent (count( *) as ?aggregation_all) where { ?t1 a :continents . ?t13 a :countries . ?t13 :countries\\#ref-continent ?t1 .  ?t1 :continents\\#continent ?t1_continent . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t13 .  ?t1 :continents\\#continent ?t1_continent .        } group by ?t1_continent"
    },
    {
        "kg_name": "car_1",
        "question": "Which of the countries has the most car makers? List the country name.",
        "query": "select ?t1_countryname (count( *) as ?aggregation_all) where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid .        } group by ?t1_countryname  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the name of the country with the most car makers?",
        "query": "select ?t1_countryname (count( *) as ?aggregation_all) where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid .        } group by ?t1_countryname  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "How many car models are produced by each maker ? Only list the count and the maker full name .",
        "query": "SELECT (count( *) as ?aggregation_all) ?T2_fullname WHERE { ?T1 a :model_list . ?T2 a :car_makers . ?T1 :model_list\\#ref-maker ?T2 .  ?T2 :car_makers\\#fullname ?T2_fullname .        } GROUP BY ?T2_fullname"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "query": "SELECT (count( *) as ?aggregation_all) ?T2_fullname WHERE { ?T1 a :model_list . ?T2 a :car_makers . ?T1 :model_list\\#ref-maker ?T2 .  ?T2 :car_makers\\#fullname ?T2_fullname .        } GROUP BY ?T2_fullname"
    },
    {
        "kg_name": "car_1",
        "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "query": "select ?t1_accelerate where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t2 :car_names\\#make ?t2_make . FILTER(?t2_make = 'amc hornet sportabout (sw)') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "query": "select ?t1_accelerate where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t2 :car_names\\#make ?t2_make . FILTER(?t2_make = 'amc hornet sportabout (sw)') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many car makers are there in france?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :car_makers . ?t2 a :countries . ?t1 :car_makers\\#ref-country ?t2 .  ?t2 :countries\\#countryname ?t2_countryname . FILTER(?t2_countryname = 'france') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of makers of care in France?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :car_makers . ?t2 a :countries . ?t1 :car_makers\\#ref-country ?t2 .  ?t2 :countries\\#countryname ?t2_countryname . FILTER(?t2_countryname = 'france') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many car models are produced in the usa?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :model_list . ?t2 a :car_makers . ?t1 :model_list\\#ref-maker ?t2 .  ?t1 :model_list\\#maker ?t1_maker . ?t3 :countries\\#countryname ?t3_countryname . ?t3 a :countries . ?t2 :car_makers\\#ref-country ?t3 .  ?t1 :model_list\\#maker ?t1_maker . ?t3 :countries\\#countryname ?t3_countryname . FILTER(?t3_countryname = 'usa') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the count of the car models produced in the United States?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :model_list . ?t2 a :car_makers . ?t1 :model_list\\#ref-maker ?t2 .  ?t1 :model_list\\#maker ?t1_maker . ?t3 :countries\\#countryname ?t3_countryname . ?t3 a :countries . ?t2 :car_makers\\#ref-country ?t3 .  ?t1 :model_list\\#maker ?t1_maker . ?t3 :countries\\#countryname ?t3_countryname . FILTER(?t3_countryname = 'usa') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "query": "select (avg( ?t1_mpg) as ?aggregation_t1_mpg_144 ) where { ?t1 a :cars_data . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 4) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average miles per gallon of all the cards with 4 cylinders?",
        "query": "select (avg( ?t1_mpg) as ?aggregation_t1_mpg_144 ) where { ?t1 a :cars_data . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 4) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
        "query": "select ?t1_weight where { ?t1 a :cars_data . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_cylinders = 4 && ?t1_year = 1974) .        }   order by asc (?t1_weight) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
        "query": "select ?t1_weight where { ?t1 a :cars_data . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_cylinders = 4 && ?t1_year = 1974) .        }   order by asc (?t1_weight) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What are all the makers and models?",
        "query": "select ?t1_maker ?t1_model where { ?t1 a :model_list . ?t1 :model_list\\#maker ?t1_maker . ?t1 :model_list\\#model ?t1_model .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the makers and models?",
        "query": "select ?t1_maker ?t1_model where { ?t1 a :model_list . ?t1 :model_list\\#maker ?t1_maker . ?t1 :model_list\\#model ?t1_model .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the countries having at least one car maker? List name and id.",
        "query": "select ?t1_countryname ?t1_countryid where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid . ?t1 :countries\\#countryid ?t1_countryid .        } group by ?t1_countryname ?t1_countryid   having(count( *)  >= 1)"
    },
    {
        "kg_name": "car_1",
        "question": "What are the names and ids of all countries with at least one car maker?",
        "query": "select ?t1_countryname ?t1_countryid where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid . ?t1 :countries\\#countryid ?t1_countryid .        } group by ?t1_countryname ?t1_countryid   having(count( *)  >= 1)"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of the cars with horsepower more than 150?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . FILTER(?t1_horsepower > 150) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of cars with a horsepower greater than 150?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . FILTER(?t1_horsepower > 150) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average weight of cars each year?",
        "query": "select (avg( ?t1_weight) as ?aggregation_t1_weight_5 ) ?t1_year where { ?t1 a :cars_data . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#year ?t1_year .        } group by ?t1_year"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average weight and year for each year?",
        "query": "select (avg( ?t1_weight) as ?aggregation_t1_weight_5 ) ?t1_year where { ?t1 a :cars_data . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#year ?t1_year .        } group by ?t1_year"
    },
    {
        "kg_name": "car_1",
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "query": "SELECT ?T1_countryname WHERE { ?T1 a :countries . ?T2 a :car_makers . ?T2 :car_makers\\#ref-country ?T1 .  ?T1 :countries\\#countryname ?T1_countryname . ?T1 :countries\\#countryid ?T1_countryid . ?T3 :continents\\#continent ?T3_continent . ?T3 a :continents . ?T1 :countries\\#ref-continent ?T3 .  ?T1 :countries\\#countryname ?T1_countryname . ?T1 :countries\\#countryid ?T1_countryid . ?T3 :continents\\#continent ?T3_continent . FILTER(?T3_continent = 'europe') .        } GROUP BY ?T1_countryname   HAVING(count( *)  >= 3)"
    },
    {
        "kg_name": "car_1",
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "query": "SELECT ?T1_countryname WHERE { ?T1 a :countries . ?T2 a :car_makers . ?T2 :car_makers\\#ref-country ?T1 .  ?T1 :countries\\#countryname ?T1_countryname . ?T1 :countries\\#countryid ?T1_countryid . ?T3 :continents\\#continent ?T3_continent . ?T3 a :continents . ?T1 :countries\\#ref-continent ?T3 .  ?T1 :countries\\#countryname ?T1_countryname . ?T1 :countries\\#countryid ?T1_countryid . ?T3 :continents\\#continent ?T3_continent . FILTER(?T3_continent = 'europe') .        } GROUP BY ?T1_countryname   HAVING(count( *)  >= 3)"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "query": "select ?t1_horsepower ?t2_make where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t2 :car_names\\#make ?t2_make . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 3) .        }   order by desc (?t1_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "query": "select ?t1_horsepower ?t2_make where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t2 :car_names\\#make ?t2_make . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders = 3) .        }   order by desc (?t1_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#mpg ?t2_mpg .        }   order by desc (?t2_mpg) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the car model with the highest mpg ?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#mpg ?t2_mpg .        }   order by desc (?t2_mpg) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average horsepower of the cars before 1980?",
        "query": "select (avg( ?t1_horsepower) as ?aggregation_t1_horsepower_96 ) where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_year < 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average horsepower for all cars produced before 1980 ?",
        "query": "select (avg( ?t1_horsepower) as ?aggregation_t1_horsepower_96 ) where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_year < 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average edispl of the cars of model volvo?",
        "query": "select (avg( ?t1_edispl) as ?aggregation_t1_edispl_65 ) where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#edispl ?t1_edispl . ?t2 :car_names\\#model ?t2_model . FILTER(?t2_model = 'volvo') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the average edispl for all volvos?",
        "query": "select (avg( ?t1_edispl) as ?aggregation_t1_edispl_65 ) where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#edispl ?t1_edispl . ?t2 :car_names\\#model ?t2_model . FILTER(?t2_model = 'volvo') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maximum accelerate for different number of cylinders?",
        "query": "select (max( ?t1_accelerate) as ?aggregation_t1_accelerate_42 ) ?t1_cylinders where { ?t1 a :cars_data . ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t1 :cars_data\\#cylinders ?t1_cylinders .        } group by ?t1_cylinders"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maximum accelerate for all the different cylinders?",
        "query": "select (max( ?t1_accelerate) as ?aggregation_t1_accelerate_42 ) ?t1_cylinders where { ?t1 a :cars_data . ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t1 :cars_data\\#cylinders ?t1_cylinders .        } group by ?t1_cylinders"
    },
    {
        "kg_name": "car_1",
        "question": "Which model has the most version(make) of cars?",
        "query": "select ?t1_model (count( *) as ?aggregation_all) where { ?t1 a :car_names . ?t1 :car_names\\#model ?t1_model .        } group by ?t1_model  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What model has the most different versions?",
        "query": "select ?t1_model (count( *) as ?aggregation_all) where { ?t1 a :car_names . ?t1 :car_names\\#model ?t1_model .        } group by ?t1_model  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "How many cars have more than 4 cylinders?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 4) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of cars with more than 4 cylinders?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 4) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "how many cars were produced in 1980?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_year = 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "In 1980, how many cars were made?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_year = 1980) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "How many car models were produced by the maker with full name American Motor Company?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :model_list . ?t2 a :car_makers . ?t1 :model_list\\#ref-maker ?t2 .  ?t2 :car_makers\\#fullname ?t2_fullname . FILTER(?t2_fullname = 'American Motor Company') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of car models created by the car maker American Motor Company?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :model_list . ?t2 a :car_makers . ?t1 :model_list\\#ref-maker ?t2 .  ?t2 :car_makers\\#fullname ?t2_fullname . FILTER(?t2_fullname = 'American Motor Company') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "Which makers designed more than 3 car models? List full name and the id.",
        "query": "select ?t1_fullname ?t1_id where { ?t1 a :car_makers . ?t2 a :model_list . ?t2 :model_list\\#ref-maker ?t1 .  ?t1 :car_makers\\#fullname ?t1_fullname . ?t1 :car_makers\\#id ?t1_id . ?t1 :car_makers\\#id ?t1_id .        } group by ?t1_fullname ?t1_id   having(count( *)  > 3)"
    },
    {
        "kg_name": "car_1",
        "question": "What are the names and ids of all makers with more than 3 models?",
        "query": "select ?t1_fullname ?t1_id where { ?t1 a :car_makers . ?t2 a :model_list . ?t2 :model_list\\#ref-maker ?t1 .  ?t1 :car_makers\\#fullname ?t1_fullname . ?t1 :car_makers\\#id ?t1_id . ?t1 :car_makers\\#id ?t1_id .        } group by ?t1_fullname ?t1_id   having(count( *)  > 3)"
    },
    {
        "kg_name": "car_1",
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . ?t3 a :car_makers . ?t1 :model_list\\#ref-maker ?t3 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . ?t4 a :cars_data . ?t4 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . FILTER(?t3_fullname = 'General Motors' || ?t4_weight > 3500) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . ?t3 a :car_makers . ?t1 :model_list\\#ref-maker ?t3 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . ?t4 a :cars_data . ?t4 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :car_makers\\#fullname ?t3_fullname . ?t4 :cars_data\\#weight ?t4_weight . FILTER(?t3_fullname = 'General Motors' || ?t4_weight > 3500) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
        "query": "select distinct ?t1_year where { ?t1 a :cars_data . ?t1 :cars_data\\#year ?t1_year . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#weight ?t1_weight . FILTER(?t1_weight > 3000 && ?t1_weight < 4000) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
        "query": "select distinct ?t1_year where { ?t1 a :cars_data . ?t1 :cars_data\\#year ?t1_year . ?t1 :cars_data\\#weight ?t1_weight . ?t1 :cars_data\\#weight ?t1_weight . FILTER(?t1_weight > 3000 && ?t1_weight < 4000) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the horsepower of the car with the largest accelerate?",
        "query": "select ?t1_horsepower where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#accelerate ?t1_accelerate .        }   order by desc (?t1_accelerate) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the horsepower of the car with the greatest accelerate?",
        "query": "select ?t1_horsepower where { ?t1 a :cars_data . ?t1 :cars_data\\#horsepower ?t1_horsepower . ?t1 :cars_data\\#accelerate ?t1_accelerate .        }   order by desc (?t1_accelerate) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "query": "select ?t1_cylinders where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t2 :car_names\\#model ?t2_model . FILTER(?t2_model = 'volvo') .        }   order by asc (?t1_accelerate) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "query": "select ?t1_cylinders where { ?t1 a :cars_data . ?t2 a :car_names . ?t1 :cars_data\\#ref-id ?t2 .  ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#accelerate ?t1_accelerate . ?t2 :car_names\\#model ?t2_model . FILTER(?t2_model = 'volvo') .        }   order by asc (?t1_accelerate) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#accelerate ?t1_accelerate . FILTER(?t1_accelerate > ?t22_accelerate) .       {select ?t22_accelerate where { ?t22 a :cars_data . ?t22 :cars_data\\#accelerate ?t22_accelerate . ?t22 :cars_data\\#horsepower ?t22_horsepower .        }   order by desc (?t22_horsepower) limit 1 } }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#accelerate ?t1_accelerate . FILTER(?t1_accelerate > ?t22_accelerate) .       {select ?t22_accelerate where { ?t22 a :cars_data . ?t22 :cars_data\\#accelerate ?t22_accelerate . ?t22 :cars_data\\#horsepower ?t22_horsepower .        }   order by desc (?t22_horsepower) limit 1 } }"
    },
    {
        "kg_name": "car_1",
        "question": "How many countries has more than 2 car makers ?",
        "query": "select (count(*) as ?aggregation) where { ?t1 a :countries . ?t1 :countries\\#countryid ?t1_countryid .  ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 . } group by ?t1_countryid having (count(*)>2)"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of countries with more than 2 car makers ?",
        "query": "select (count(*) as ?aggregation) where { ?t1 a :countries . ?t1 :countries\\#countryid ?t1_countryid .  ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 . } group by ?t1_countryid having (count(*)>2)"
    },
    {
        "kg_name": "car_1",
        "question": "How many cars has over 6 cylinders?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 6) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the number of carsw ith over 6 cylinders?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cars_data . ?t1 :cars_data\\#cylinders ?t1_cylinders . FILTER(?t1_cylinders > 6) .        }"
    },
    {
        "kg_name": "car_1",
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#horsepower ?t2_horsepower . ?t2 :cars_data\\#cylinders ?t2_cylinders . FILTER(?t2_cylinders = 4) .        }   order by desc (?t2_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "query": "select ?t1_model where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#model ?t1_model . ?t2 :cars_data\\#horsepower ?t2_horsepower . ?t2 :cars_data\\#cylinders ?t2_cylinders . FILTER(?t2_cylinders = 4) .        }   order by desc (?t2_horsepower) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "query": "select ?t1_makeid ?t1_make where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#makeid ?t1_makeid . ?t1 :car_names\\#make ?t1_make . ?t2 :cars_data\\#horsepower ?t2_horsepower . ?t2 :cars_data\\#cylinders ?t2_cylinders . FILTER(?t2_horsepower > ?aggregation_t23_horsepower_8 && ?t2_cylinders <= 3) .       {select (min( ?t23_horsepower) as ?aggregation_t23_horsepower_8 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#horsepower ?t23_horsepower .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
        "query": "select ?t1_makeid ?t1_make where { ?t1 a :car_names . ?t2 a :cars_data . ?t2 :cars_data\\#ref-id ?t1 .  ?t1 :car_names\\#makeid ?t1_makeid . ?t1 :car_names\\#make ?t1_make . ?t2 :cars_data\\#horsepower ?t2_horsepower . ?t2 :cars_data\\#cylinders ?t2_cylinders . FILTER(?t2_horsepower > ?aggregation_t23_horsepower_8 && ?t2_cylinders <= 3) .       {select (min( ?t23_horsepower) as ?aggregation_t23_horsepower_8 ) where { ?t23 a :cars_data . ?t23 :cars_data\\#horsepower ?t23_horsepower .        }    } }"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
        "query": "select ?t1_mpg where { ?t1 a :cars_data . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_cylinders = 8 || ?t1_year < 1980) .        }   order by desc (?t1_mpg) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
        "query": "select ?t1_mpg where { ?t1 a :cars_data . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#mpg ?t1_mpg . ?t1 :cars_data\\#cylinders ?t1_cylinders . ?t1 :cars_data\\#year ?t1_year . FILTER(?t1_cylinders = 8 || ?t1_year < 1980) .        }   order by desc (?t1_mpg) limit 1"
    },
    {
        "kg_name": "car_1",
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . ?t3 a :cars_data . ?t3 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . ?t4 a :car_makers . ?t1 :model_list\\#ref-maker ?t4 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . FILTER(?t3_weight < 3500 && ?t4_fullname != 'Ford Motor Company') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "query": "select distinct ?t1_model where { ?t1 a :model_list . ?t2 a :car_names . ?t2 :car_names\\#ref-model ?t1 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . ?t3 a :cars_data . ?t3 :cars_data\\#ref-id ?t2 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . ?t4 a :car_makers . ?t1 :model_list\\#ref-maker ?t4 .  ?t1 :model_list\\#model ?t1_model . ?t1 :model_list\\#model ?t1_model . ?t3 :cars_data\\#weight ?t3_weight . ?t4 :car_makers\\#fullname ?t4_fullname . FILTER(?t3_weight < 3500 && ?t4_fullname != 'Ford Motor Company') .        }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the name of the countries where there is not a single car maker?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_countryname as ?col1) where { ?t1 a :countries . ?t1 :countries\\#countryname ?t1_countryname .   }}  MINUS {select (?t2_countryname as ?col1) where { ?t2 a :countries . ?t3 a :car_makers . ?t3 :car_makers\\#ref-country ?t2 .  ?t2 :countries\\#countryname ?t2_countryname . ?t2 :countries\\#countryid ?t2_countryid .        }     } }"
    },
    {
        "kg_name": "car_1",
        "question": "What are the names of the countries with no car makers?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_countryname as ?col1) where { ?t1 a :countries . ?t1 :countries\\#countryname ?t1_countryname .   }}  MINUS {select (?t2_countryname as ?col1) where { ?t2 a :countries . ?t3 a :car_makers . ?t3 :car_makers\\#ref-country ?t2 .  ?t2 :countries\\#countryname ?t2_countryname . ?t2 :countries\\#countryid ?t2_countryid .        }     } }"
    },
    {
        "kg_name": "car_1",
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
        "query": "select distinct ?t1_id ?t1_maker where { ?t1 a :car_makers . ?t2 a :model_list . ?t2 :model_list\\#ref-maker ?t1 .  ?t1 :car_makers\\#id ?t1_id . ?t1 :car_makers\\#maker ?t1_maker . ?t1 :car_makers\\#id ?t1_id .\n    ?t3 a :car_makers . ?t4 a :model_list . ?t4 :model_list\\#ref-maker ?t3 .  ?t3 :car_makers\\#id ?t3_id . ?t3 :car_makers\\#maker ?t3_maker . ?t3 :car_makers\\#id ?t3_id .      FILTER (?t1_id in (?t3_id)) . \n    FILTER (?t1_maker in (?t3_maker)) .    } group by ?t1_id ?t1_maker having(count(?t1_id)>=2 && (count(?t3_maker) > 3))"
    },
    {
        "kg_name": "car_1",
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "query": "select distinct ?t1_id ?t1_maker where { ?t1 a :car_makers . ?t2 a :model_list . ?t2 :model_list\\#ref-maker ?t1 .  ?t1 :car_makers\\#id ?t1_id . ?t1 :car_makers\\#maker ?t1_maker . ?t1 :car_makers\\#id ?t1_id .\n    ?t3 a :car_makers . ?t4 a :model_list . ?t4 :model_list\\#ref-maker ?t3 .  ?t3 :car_makers\\#id ?t3_id . ?t3 :car_makers\\#maker ?t3_maker . ?t3 :car_makers\\#id ?t3_id .      FILTER (?t1_id in (?t3_id)) . \n    FILTER (?t1_maker in (?t3_maker)) .    } group by ?t1_id ?t1_maker having(count(?t1_id)>=2 && (count(?t3_maker) > 3))"
    },
    {
        "kg_name": "car_1",
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "query": "SELECT distinct ?col1 ?col2 WHERE { { select (?t1_countryid as ?col1) (?t1_countryname as ?col2) where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryid ?t1_countryid . ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid .   }} UNION {select (?t1_countryid as ?col1) (?t1_countryname as ?col2) where { ?t1 a :countries . ?t2 a :car_makers . ?t2 :car_makers\\#ref-country ?t1 .  ?t1 :countries\\#countryid ?t1_countryid . ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid . ?t3 :model_list\\#model ?t3_model . ?t3 a :model_list . ?t3 :model_list\\#ref-maker ?t2 .  ?t1 :countries\\#countryid ?t1_countryid . ?t1 :countries\\#countryname ?t1_countryname . ?t1 :countries\\#countryid ?t1_countryid . ?t3 :model_list\\#model ?t3_model . FILTER(?t3_model = 'fiat') .        }      } } group by ?col1 ?col2   having(count( *)  > 3)"
    },
    {
        "kg_name": "car_1",
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
        "query": "select ?t1_country where { ?t1 a :airlines . ?t1 :airlines\\#country ?t1_country . ?t1 :airlines\\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which country does Airline 'JetBlue Airways' belong to?",
        "query": "select ?t1_country where { ?t1 a :airlines . ?t1 :airlines\\#country ?t1_country . ?t1 :airlines\\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What country is Jetblue Airways affiliated with?",
        "query": "select ?t1_country where { ?t1 a :airlines . ?t1 :airlines\\#country ?t1_country . ?t1 :airlines\\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the abbreviation of Airline 'JetBlue Airways'?",
        "query": "select ?t1_abbreviation where { ?t1 a :airlines . ?t1 :airlines\\#abbreviation ?t1_abbreviation . ?t1 :airlines\\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "query": "select ?t1_abbreviation where { ?t1 a :airlines . ?t1 :airlines\\#abbreviation ?t1_abbreviation . ?t1 :airlines\\#airline ?t1_airline . FILTER(?t1_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "List all airline names and their abbreviations in 'USA'.",
        "query": "select ?t1_airline ?t1_abbreviation where { ?t1 a :airlines . ?t1 :airlines\\#airline ?t1_airline . ?t1 :airlines\\#abbreviation ?t1_abbreviation . ?t1 :airlines\\#country ?t1_country . FILTER(?t1_country = 'USA') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "query": "select ?t1_airline ?t1_abbreviation where { ?t1 a :airlines . ?t1 :airlines\\#airline ?t1_airline . ?t1 :airlines\\#abbreviation ?t1_abbreviation . ?t1 :airlines\\#country ?t1_country . FILTER(?t1_country = 'USA') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "List the airport code and name in the city of Anthony.",
        "query": "select ?t1_airportcode ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportcode ?t1_airportcode . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#city ?t1_city . FILTER(?t1_city = 'Anthony') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "query": "select ?t1_airportcode ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportcode ?t1_airportcode . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#city ?t1_city . FILTER(?t1_city = 'Anthony') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many airlines do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airlines .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the total number of airlines?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airlines .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many airports do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airports .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of  airports.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airports .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of flights.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airline has abbreviation 'UAL'?",
        "query": "select ?t1_airline where { ?t1 a :airlines . ?t1 :airlines\\#airline ?t1_airline . ?t1 :airlines\\#abbreviation ?t1_abbreviation . FILTER(?t1_abbreviation = 'UAL') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the airline with abbreviation 'UAL'.",
        "query": "select ?t1_airline where { ?t1 a :airlines . ?t1 :airlines\\#airline ?t1_airline . ?t1 :airlines\\#abbreviation ?t1_abbreviation . FILTER(?t1_abbreviation = 'UAL') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many airlines are from USA?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airlines . ?t1 :airlines\\#country ?t1_country . FILTER(?t1_country = 'USA') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of airlines in the USA.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :airlines . ?t1 :airlines\\#country ?t1_country . FILTER(?t1_country = 'USA') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which city and country is the Alton airport at?",
        "query": "select ?t1_city ?t1_country where { ?t1 a :airports . ?t1 :airports\\#city ?t1_city . ?t1 :airports\\#country ?t1_country . ?t1 :airports\\#airportname ?t1_airportname . FILTER(?t1_airportname = 'Alton') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the city and country for the Alton airport.",
        "query": "select ?t1_city ?t1_country where { ?t1 a :airports . ?t1 :airports\\#city ?t1_city . ?t1 :airports\\#country ?t1_country . ?t1 :airports\\#airportname ?t1_airportname . FILTER(?t1_airportname = 'Alton') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the airport name for airport 'AKO'?",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#airportcode ?t1_airportcode . FILTER(?t1_airportcode = 'AKO') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the name of the airport with code 'AKO'.",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#airportcode ?t1_airportcode . FILTER(?t1_airportcode = 'AKO') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are airport names at City 'Aberdeen'?",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#city ?t1_city . FILTER(?t1_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are the names of airports in Aberdeen?",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#city ?t1_city . FILTER(?t1_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights depart from 'APG'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t1 :flights\\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Count the number of flights departing from 'APG'.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t1 :flights\\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights have destination ATO?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t1 :flights\\#destairport ?t1_destairport . FILTER(?t1_destairport = 'ATO') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Count the number of flights into ATO.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t1 :flights\\#destairport ?t1_destairport . FILTER(?t1_destairport = 'ATO') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights depart from City Aberdeen?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of flights departing from Aberdeen.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights arriving in Aberdeen city?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of flights arriving in Aberdeen.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Ashley' && ?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights fly from Aberdeen to Ashley?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Ashley' && ?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :flights . ?T2 a :airlines . ?T2 :airlines\\#ref-uid ?T1 .  ?T2 :airlines\\#airline ?T2_airline . FILTER(?T2_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the number of Jetblue Airways flights.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :flights . ?T2 a :airlines . ?T2 :airlines\\#ref-uid ?T1 .  ?T2 :airlines\\#airline ?T2_airline . FILTER(?T2_airline = 'JetBlue Airways') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#destairport ?T2_destairport . FILTER(?T1_airline = 'United Airlines' && ?T2_destairport = 'ASY') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#destairport ?T2_destairport . FILTER(?T1_airline = 'United Airlines' && ?T2_destairport = 'ASY') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T1_airline = 'United Airlines' && ?T2_sourceairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T1_airline = 'United Airlines' && ?T2_sourceairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T13 a :flights . ?T1 :airlines\\#ref-uid ?T13 .  ?T2 :airports\\#city ?T2_city . ?T1 :airlines\\#airline ?T1_airline . ?T2 a :airports . ?T13 :flights\\#ref-destairport ?T2 .  ?T2 :airports\\#city ?T2_city . ?T1 :airlines\\#airline ?T1_airline . FILTER(?T2_city = 'Aberdeen' && ?T1_airline = 'United Airlines') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T13 a :flights . ?T1 :airlines\\#ref-uid ?T13 .  ?T2 :airports\\#city ?T2_city . ?T1 :airlines\\#airline ?T1_airline . ?T2 a :airports . ?T13 :flights\\#ref-destairport ?T2 .  ?T2 :airports\\#city ?T2_city . ?T1 :airlines\\#airline ?T1_airline . FILTER(?T2_city = 'Aberdeen' && ?T1_airline = 'United Airlines') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which city has most number of arriving flights?",
        "query": "SELECT ?T1_city (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#city ?T1_city . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_city  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Which city has the most frequent destination airport?",
        "query": "SELECT ?T1_city (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#city ?T1_city . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_city  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Which city has most number of departing flights?",
        "query": "SELECT ?T1_city (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#city ?T1_city . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_city  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Which city is the most frequent source airport?",
        "query": "SELECT ?T1_city (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#city ?T1_city . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_city  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the code of airport that has the highest number of flights?",
        "query": "SELECT ?T1_airportcode (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#airportcode ?T1_airportcode . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_airportcode  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the airport code of the airport with the most flights?",
        "query": "SELECT ?T1_airportcode (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#airportcode ?T1_airportcode . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_airportcode  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the code of airport that has fewest number of flights?",
        "query": "SELECT ?T1_airportcode (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#airportcode ?T1_airportcode . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_airportcode  ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the code of the airport with the least flights.",
        "query": "SELECT ?T1_airportcode (count( *) as ?aggregation_all) WHERE { ?T1 a :airports . ?T3 a :flights . ?T3 :flights\\#ref-destairport ?T1 .  ?T1 :airports\\#airportcode ?T1_airportcode . ?T1 :airports\\#airportcode ?T1_airportcode .        } GROUP BY ?T1_airportcode  ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airline has most number of flights?",
        "query": "SELECT ?T1_airline (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T3 a :flights . ?T1 :airlines\\#ref-uid ?T3 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What airline serves the most flights?",
        "query": "SELECT ?T1_airline (count( *) as ?aggregation_all) WHERE { ?T1 a :airlines . ?T3 a :flights . ?T1 :airlines\\#ref-uid ?T3 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "query": "SELECT ?T1_abbreviation (count( *) as ?aggregation_all) ?T1_country WHERE { ?T1 a :airlines . ?T3 a :flights . ?T1 :airlines\\#ref-uid ?T3 .  ?T1 :airlines\\#abbreviation ?T1_abbreviation . ?T1 :airlines\\#country ?T1_country . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_abbreviation ?T1_country  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "query": "SELECT ?T1_abbreviation (count( *) as ?aggregation_all) ?T1_country WHERE { ?T1 a :airlines . ?T3 a :flights . ?T1 :airlines\\#ref-uid ?T3 .  ?T1 :airlines\\#abbreviation ?T1_abbreviation . ?T1 :airlines\\#country ?T1_country . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_abbreviation ?T1_country  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "flight_2",
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have a flight with source airport AHD?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#destairport ?T2_destairport . FILTER(?T2_destairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have a flight with destination airport AHD?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#destairport ?T2_destairport . FILTER(?T2_destairport = 'AHD') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "query": "SELECT DISTINCT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'APG') . FILTER (?T1_airline in (?T3_airline)) .   ?T3 a :airlines . ?T4 a :flights . ?T3 :airlines\\#ref-uid ?T4 .  ?T3 :airlines\\#airline ?T3_airline . ?T4 :flights\\#sourceairport ?T4_sourceairport .  FILTER(?T4_sourceairport = 'CVO') .             }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "query": "SELECT DISTINCT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'APG') . FILTER (?T1_airline in (?T3_airline)) .   ?T3 a :airlines . ?T4 a :flights . ?T3 :airlines\\#ref-uid ?T4 .  ?T3 :airlines\\#airline ?T3_airline . ?T4 :flights\\#sourceairport ?T4_sourceairport .  FILTER(?T4_sourceairport = 'CVO') .             }"
    },
    {
        "kg_name": "flight_2",
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_airline as ?col1) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'CVO') .   }}  MINUS {SELECT (?T3_airline as ?col1) WHERE { ?T3 a :airlines . ?T4 a :flights . ?T3 :airlines\\#ref-uid ?T4 .  ?T3 :airlines\\#airline ?T3_airline . ?T4 :flights\\#sourceairport ?T4_sourceairport . FILTER(?T4_sourceairport = 'APG') .        }     } }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_airline as ?col1) WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T2 :flights\\#sourceairport ?T2_sourceairport . FILTER(?T2_sourceairport = 'CVO') .   }}  MINUS {SELECT (?T3_airline as ?col1) WHERE { ?T3 a :airlines . ?T4 a :flights . ?T3 :airlines\\#ref-uid ?T4 .  ?T3 :airlines\\#airline ?T3_airline . ?T4 :flights\\#sourceairport ?T4_sourceairport . FILTER(?T4_sourceairport = 'APG') .        }     } }"
    },
    {
        "kg_name": "flight_2",
        "question": "Find all airlines that have at least 10 flights.",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline   HAVING(count( *)  > 10)"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have at least 10 flights?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline   HAVING(count( *)  > 10)"
    },
    {
        "kg_name": "flight_2",
        "question": "Find all airlines that have fewer than 200 flights.",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline   HAVING(count( *)  < 200)"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airlines have less than 200 flights?",
        "query": "SELECT ?T1_airline WHERE { ?T1 a :airlines . ?T2 a :flights . ?T1 :airlines\\#ref-uid ?T2 .  ?T1 :airlines\\#airline ?T1_airline . ?T1 :airlines\\#uid ?T1_uid .        } GROUP BY ?T1_airline   HAVING(count( *)  < 200)"
    },
    {
        "kg_name": "flight_2",
        "question": "What are flight numbers of Airline 'United Airlines'?",
        "query": "SELECT ?T1_flightno WHERE { ?T1 a :flights . ?T2 a :airlines . ?T2 :airlines\\#ref-uid ?T1 .  ?T1 :flights\\#flightno ?T1_flightno . ?T2 :airlines\\#airline ?T2_airline . FILTER(?T2_airline = 'United Airlines') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which flight numbers correspond to United Airlines flights?",
        "query": "SELECT ?T1_flightno WHERE { ?T1 a :flights . ?T2 a :airlines . ?T2 :airlines\\#ref-uid ?T1 .  ?T1 :flights\\#flightno ?T1_flightno . ?T2 :airlines\\#airline ?T2_airline . FILTER(?T2_airline = 'United Airlines') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are flight numbers of flights departing from Airport 'APG'?",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t1 :flights\\#flightno ?t1_flightno . ?t1 :flights\\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the flight numbers of flights leaving from APG.",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t1 :flights\\#flightno ?t1_flightno . ?t1 :flights\\#sourceairport ?t1_sourceairport . FILTER(?t1_sourceairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are flight numbers of flights arriving at Airport 'APG'?",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t1 :flights\\#flightno ?t1_flightno . ?t1 :flights\\#destairport ?t1_destairport . FILTER(?t1_destairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the flight numbers of flights landing at APG.",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t1 :flights\\#flightno ?t1_flightno . ?t1 :flights\\#destairport ?t1_destairport . FILTER(?t1_destairport = 'APG') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are flight numbers of flights departing from City 'Aberdeen '?",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t1 :flights\\#flightno ?t1_flightno . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t1 :flights\\#flightno ?t1_flightno . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "What are flight numbers of flights arriving at City 'Aberdeen'?",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t1 :flights\\#flightno ?t1_flightno . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "query": "select ?t1_flightno where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t1 :flights\\#flightno ?t1_flightno . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen' || ?t2_city = 'Abilene') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "How many flights land in Aberdeen or Abilene?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :flights . ?t2 a :airports . ?t1 :flights\\#ref-destairport ?t2 .  ?t2 :airports\\#city ?t2_city . ?t2 :airports\\#city ?t2_city . FILTER(?t2_city = 'Aberdeen' || ?t2_city = 'Abilene') .        }"
    },
    {
        "kg_name": "flight_2",
        "question": "Find the name of airports which do not have any flight in and out.",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#airportcode ?t1_airportcode .     Filter not exists {{select ?t22_sourceairport where { ?t22 a :flights . ?t22 :flights\\#sourceairport ?t22_sourceairport .        }    } FILTER (?t1_airportcode in (?t22_sourceairport))}  }"
    },
    {
        "kg_name": "flight_2",
        "question": "Which airports do not have departing or arriving flights?",
        "query": "select ?t1_airportname where { ?t1 a :airports . ?t1 :airports\\#airportname ?t1_airportname . ?t1 :airports\\#airportcode ?t1_airportcode .     Filter not exists {{select ?t22_sourceairport where { ?t22 a :flights . ?t22 :flights\\#sourceairport ?t22_sourceairport .        }    } FILTER (?t1_airportcode in (?t22_sourceairport))}  }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "How many employees are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :employee .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Count the number of employees",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :employee .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Sort employee names by their age in ascending order.",
        "query": "select ?t1_name where { ?t1 a :employee . ?t1 :employee\\#name ?t1_name . ?t1 :employee\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "List the names of employees and sort in ascending order of age.",
        "query": "select ?t1_name where { ?t1 a :employee . ?t1 :employee\\#name ?t1_name . ?t1 :employee\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What is the number of employees from each city?",
        "query": "select (count( *) as ?aggregation_all) ?t1_city where { ?t1 a :employee . ?t1 :employee\\#city ?t1_city .        } group by ?t1_city"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Count the number of employees for each city.",
        "query": "select (count( *) as ?aggregation_all) ?t1_city where { ?t1 a :employee . ?t1 :employee\\#city ?t1_city .        } group by ?t1_city"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which cities do more than one employee under age 30 come from?",
        "query": "select ?t1_city where { ?t1 a :employee . ?t1 :employee\\#city ?t1_city . ?t1 :employee\\#age ?t1_age . FILTER(?t1_age < 30) .        } group by ?t1_city   having(count( *)  > 1)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the cities that have more than one employee under age 30.",
        "query": "select ?t1_city where { ?t1 a :employee . ?t1 :employee\\#city ?t1_city . ?t1 :employee\\#age ?t1_age . FILTER(?t1_age < 30) .        } group by ?t1_city   having(count( *)  > 1)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the number of shops in each location.",
        "query": "select (count( *) as ?aggregation_all) ?t1_location where { ?t1 a :shop . ?t1 :shop\\#location ?t1_location .        } group by ?t1_location"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "How many shops are there in each location?",
        "query": "select (count( *) as ?aggregation_all) ?t1_location where { ?t1 a :shop . ?t1 :shop\\#location ?t1_location .        } group by ?t1_location"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "query": "select ?t1_manager_name ?t1_district where { ?t1 a :shop . ?t1 :shop\\#manager_name ?t1_manager_name . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products .        }   order by desc (?t1_number_products) limit 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "query": "select ?t1_manager_name ?t1_district where { ?t1 a :shop . ?t1 :shop\\#manager_name ?t1_manager_name . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products .        }   order by desc (?t1_number_products) limit 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "find the minimum and maximum number of products of all stores.",
        "query": "select (min( ?t1_number_products) as ?aggregation_t1_number_products_113 ) (max( ?t1_number_products) as ?aggregation_t1_number_products_116 ) where { ?t1 a :shop . ?t1 :shop\\#number_products ?t1_number_products . ?t1 :shop\\#number_products ?t1_number_products .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What are the minimum and maximum number of products across all the shops?",
        "query": "select (min( ?t1_number_products) as ?aggregation_t1_number_products_113 ) (max( ?t1_number_products) as ?aggregation_t1_number_products_116 ) where { ?t1 a :shop . ?t1 :shop\\#number_products ?t1_number_products . ?t1 :shop\\#number_products ?t1_number_products .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "query": "select ?t1_name ?t1_location ?t1_district where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#location ?t1_location . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products .        }  order by desc (?t1_number_products)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "query": "select ?t1_name ?t1_location ?t1_district where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#location ?t1_location . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products .        }  order by desc (?t1_number_products)"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the names of stores whose number products is more than the average number of products.",
        "query": "select ?t1_name where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#number_products ?t1_number_products . FILTER(?t1_number_products > ?aggregation_t22_number_products_63) .       {select (avg( ?t22_number_products) as ?aggregation_t22_number_products_63 ) where { ?t22 a :shop . ?t22 :shop\\#number_products ?t22_number_products .        }    } }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which shops' number products is above the average? Give me the shop names.",
        "query": "select ?t1_name where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#number_products ?t1_number_products . FILTER(?t1_number_products > ?aggregation_t22_number_products_63) .       {select (avg( ?t22_number_products) as ?aggregation_t22_number_products_63 ) where { ?t22 a :shop . ?t22 :shop\\#number_products ?t22_number_products .        }    } }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :employee . ?T3 a :evaluation . ?T3 :evaluation\\#ref-employee_id ?T1 .  ?T1 :employee\\#name ?T1_name . ?T1 :employee\\#employee_id ?T1_employee_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :employee . ?T3 a :evaluation . ?T3 :evaluation\\#ref-employee_id ?T1 .  ?T1 :employee\\#name ?T1_name . ?T1 :employee\\#employee_id ?T1_employee_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the name of the employee who got the highest one time bonus.",
        "query": "select ?t1_name where { ?t1 a :employee . ?t2 a :evaluation . ?t2 :evaluation\\#ref-employee_id ?t1 .  ?t1 :employee\\#name ?t1_name . ?t2 :evaluation\\#bonus ?t2_bonus .        }   order by desc (?t2_bonus) limit 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "query": "select ?t1_name where { ?t1 a :employee . ?t2 a :evaluation . ?t2 :evaluation\\#ref-employee_id ?t1 .  ?t1 :employee\\#name ?t1_name . ?t2 :evaluation\\#bonus ?t2_bonus .        }   order by desc (?t2_bonus) limit 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the names of employees who never won any award in the evaluation.",
        "query": "select ?t1_name where { ?t1 a :employee . ?t1 :employee\\#name ?t1_name . ?t1 :employee\\#employee_id ?t1_employee_id .     Filter not exists {{select ?t22_employee_id where { ?t22 a :evaluation . ?t22 :evaluation\\#employee_id ?t22_employee_id .        }    } FILTER (?t1_employee_id in (?t22_employee_id))}  }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What are the names of the employees who never received any evaluation?",
        "query": "select ?t1_name where { ?t1 a :employee . ?t1 :employee\\#name ?t1_name . ?t1 :employee\\#employee_id ?t1_employee_id .     Filter not exists {{select ?t22_employee_id where { ?t22 a :evaluation . ?t22 :evaluation\\#employee_id ?t22_employee_id .        }    } FILTER (?t1_employee_id in (?t22_employee_id))}  }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What is the name of the shop that is hiring the largest number of employees?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :shop . ?T3 a :hiring . ?T3 :hiring\\#ref-shop_id ?T1 .  ?T1 :shop\\#name ?T1_name . ?T1 :shop\\#shop_id ?T1_shop_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which shop has the most employees? Give me the shop name.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :shop . ?T3 a :hiring . ?T3 :hiring\\#ref-shop_id ?T1 .  ?T1 :shop\\#name ?T1_name . ?T1 :shop\\#shop_id ?T1_shop_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the name of the shops that do not hire any employee.",
        "query": "select ?t1_name where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#shop_id ?t1_shop_id .     Filter not exists {{select ?t22_shop_id where { ?t22 a :hiring . ?t22 :hiring\\#shop_id ?t22_shop_id .        }    } FILTER (?t1_shop_id in (?t22_shop_id))}  }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which shops run with no employees? Find the shop names",
        "query": "select ?t1_name where { ?t1 a :shop . ?t1 :shop\\#name ?t1_name . ?t1 :shop\\#shop_id ?t1_shop_id .     Filter not exists {{select ?t22_shop_id where { ?t22 a :hiring . ?t22 :hiring\\#shop_id ?t22_shop_id .        }    } FILTER (?t1_shop_id in (?t22_shop_id))}  }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the number of employees hired in each shop; show the shop name as well.",
        "query": "select (count( *) as ?aggregation_all) ?t2_name where { ?t13 a :hiring . ?t2 a :shop . ?t13 :hiring\\#ref-shop_id ?t2 .  ?t2 :shop\\#name ?t2_name .        } group by ?t2_name"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "For each shop, return the number of employees working there and the name of the shop.",
        "query": "select (count( *) as ?aggregation_all) ?t2_name where { ?t13 a :hiring . ?t2 a :shop . ?t13 :hiring\\#ref-shop_id ?t2 .  ?t2 :shop\\#name ?t2_name .        } group by ?t2_name"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What is total bonus given in all evaluations?",
        "query": "select (sum( ?t1_bonus) as ?aggregation_t1_bonus_61 ) where { ?t1 a :evaluation . ?t1 :evaluation\\#bonus ?t1_bonus .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the total amount of bonus given in all the evaluations.",
        "query": "select (sum( ?t1_bonus) as ?aggregation_t1_bonus_61 ) where { ?t1 a :evaluation . ?t1 :evaluation\\#bonus ?t1_bonus .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Give me all the information about hiring.",
        "query": "SELECT * WHERE { ?T1 a :hiring .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "What is all the information about hiring?",
        "query": "SELECT * WHERE { ?T1 a :hiring .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "query": "select distinct ?t1_district where { ?t1 a :shop . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products . FILTER(?t1_number_products < 3000) . FILTER (?t1_district in (?t2_district)) .   ?t2 a :shop . ?t2 :shop\\#district ?t2_district . ?t2 :shop\\#number_products ?t2_number_products .  FILTER(?t2_number_products > 10000) .             }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "query": "select distinct ?t1_district where { ?t1 a :shop . ?t1 :shop\\#district ?t1_district . ?t1 :shop\\#number_products ?t1_number_products . FILTER(?t1_number_products < 3000) . FILTER (?t1_district in (?t2_district)) .   ?t2 a :shop . ?t2 :shop\\#district ?t2_district . ?t2 :shop\\#number_products ?t2_number_products .  FILTER(?t2_number_products > 10000) .             }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "How many different store locations are there?",
        "query": "select distinct (count(distinct ?t1_location) as ?aggregation_t1_location_78 ) where { ?t1 a :shop . ?t1 :shop\\#location ?t1_location .        }"
    },
    {
        "kg_name": "employee_hire_evaluation",
        "question": "Count the number of distinct store locations.",
        "query": "select distinct (count(distinct ?t1_location) as ?aggregation_t1_location_78 ) where { ?t1 a :shop . ?t1 :shop\\#location ?t1_location .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many documents do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :documents .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of documents.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :documents .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "query": "select ?t1_document_id ?t1_document_name ?t1_document_description where { ?t1 a :documents . ?t1 :documents\\#document_id ?t1_document_id . ?t1 :documents\\#document_name ?t1_document_name . ?t1 :documents\\#document_description ?t1_document_description .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids, names, and descriptions for all documents?",
        "query": "select ?t1_document_id ?t1_document_name ?t1_document_description where { ?t1 a :documents . ?t1 :documents\\#document_id ?t1_document_id . ?t1 :documents\\#document_name ?t1_document_name . ?t1 :documents\\#document_description ?t1_document_description .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the document name and template id for document with description with the letter 'w' in it?",
        "query": "select ?t1_document_name ?t1_template_id where { ?t1 a :documents . ?t1 :documents\\#document_name ?t1_document_name . ?t1 :documents\\#template_id ?t1_template_id . ?t1 :documents\\#document_description ?t1_document_description . FILTER(contains (?t1_document_description, 'w')) .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "query": "select ?t1_document_name ?t1_template_id where { ?t1 a :documents . ?t1 :documents\\#document_name ?t1_document_name . ?t1 :documents\\#template_id ?t1_template_id . ?t1 :documents\\#document_description ?t1_document_description . FILTER(contains (?t1_document_description, 'w')) .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the document id, template id and description for document named 'Robbin CV'?",
        "query": "select ?t1_document_id ?t1_template_id ?t1_document_description where { ?t1 a :documents . ?t1 :documents\\#document_id ?t1_document_id . ?t1 :documents\\#template_id ?t1_template_id . ?t1 :documents\\#document_description ?t1_document_description . ?t1 :documents\\#document_name ?t1_document_name . FILTER(?t1_document_name = 'Robbin CV') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "query": "select ?t1_document_id ?t1_template_id ?t1_document_description where { ?t1 a :documents . ?t1 :documents\\#document_id ?t1_document_id . ?t1 :documents\\#template_id ?t1_template_id . ?t1 :documents\\#document_description ?t1_document_description . ?t1 :documents\\#document_name ?t1_document_name . FILTER(?t1_document_name = 'Robbin CV') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many different templates do all document use?",
        "query": "select distinct (count(distinct ?t1_template_id) as ?aggregation_t1_template_id_87 ) where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of different templates used for documents.",
        "query": "select distinct (count(distinct ?t1_template_id) as ?aggregation_t1_template_id_87 ) where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many documents are using the template with type code 'PPT'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :documents . ?t2 a :templates . ?t1 :documents\\#ref-template_id ?t2 .  ?t2 :templates\\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'PPT') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of documents that use the PPT template type.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :documents . ?t2 a :templates . ?t1 :documents\\#ref-template_id ?t2 .  ?t2 :templates\\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'PPT') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template ids and number of documents using each template.",
        "query": "select ?t1_template_id (count( *) as ?aggregation_all) where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        } group by ?t1_template_id"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are all different template ids used for documents, and how many times were each of them used?",
        "query": "select ?t1_template_id (count( *) as ?aggregation_all) where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        } group by ?t1_template_id"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the id and type code for the template used by the most documents?",
        "query": "SELECT ?T1_template_id (count( *) as ?aggregation_all) ?T2_template_type_code WHERE { ?T1 a :documents . ?T2 a :templates . ?T1 :documents\\#ref-template_id ?T2 .  ?T1 :documents\\#template_id ?T1_template_id . ?T2 :templates\\#template_type_code ?T2_template_type_code .        } GROUP BY ?T1_template_id ?T2_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "query": "SELECT ?T1_template_id (count( *) as ?aggregation_all) ?T2_template_type_code WHERE { ?T1 a :documents . ?T2 a :templates . ?T1 :documents\\#ref-template_id ?T2 .  ?T1 :documents\\#template_id ?T1_template_id . ?T2 :templates\\#template_type_code ?T2_template_type_code .        } GROUP BY ?T1_template_id ?T2_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show ids for all templates that are used by more than one document.",
        "query": "select ?t1_template_id where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        } group by ?t1_template_id   having(count( *)  > 1)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the template ids of any templates used in more than a single document?",
        "query": "select ?t1_template_id where { ?t1 a :documents . ?t1 :documents\\#template_id ?t1_template_id .        } group by ?t1_template_id   having(count( *)  > 1)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show ids for all templates not used by any document.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_template_id as ?col1) where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id .   }}  MINUS {select (?t2_template_id as ?col1) where { ?t2 a :documents . ?t2 :documents\\#template_id ?t2_template_id .        }     } }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids for templates that are not used in any documents?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_template_id as ?col1) where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id .   }}  MINUS {select (?t2_template_id as ?col1) where { ?t2 a :documents . ?t2 :documents\\#template_id ?t2_template_id .        }     } }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many templates do we have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :templates .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of templates.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :templates .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "query": "select ?t1_template_id ?t1_version_number ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id . ?t1 :templates\\#version_number ?t1_version_number . ?t1 :templates\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids, version numbers, and type codes for each template?",
        "query": "select ?t1_template_id ?t1_version_number ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id . ?t1 :templates\\#version_number ?t1_version_number . ?t1 :templates\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all distinct template type codes for all templates.",
        "query": "select distinct ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the different template type codes?",
        "query": "select distinct ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids of templates with template type code PP or PPT?",
        "query": "select ?t1_template_id where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id . ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t1 :templates\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'PP' || ?t1_template_type_code = 'PPT') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the ids of templates that have the code PP or PPT.",
        "query": "select ?t1_template_id where { ?t1 a :templates . ?t1 :templates\\#template_id ?t1_template_id . ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t1 :templates\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'PP' || ?t1_template_type_code = 'PPT') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many templates have template type code CV?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'CV') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of templates of the type CV.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'CV') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "query": "select ?t1_version_number ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#version_number ?t1_version_number . ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t1 :templates\\#version_number ?t1_version_number . FILTER(?t1_version_number > 5) .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "query": "select ?t1_version_number ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#version_number ?t1_version_number . ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t1 :templates\\#version_number ?t1_version_number . FILTER(?t1_version_number > 5) .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes and number of templates for each.",
        "query": "select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the different template type codes, and how many templates correspond to each?",
        "query": "select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Which template type code has most number of templates?",
        "query": "SELECT ?T1_template_type_code (count( *) as ?aggregation_all) WHERE { ?T1 a :templates . ?T1 :templates\\#template_type_code ?T1_template_type_code .        } GROUP BY ?T1_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the type code of the template type that the most templates belong to.",
        "query": "SELECT ?T1_template_type_code (count( *) as ?aggregation_all) WHERE { ?T1 a :templates . ?T1 :templates\\#template_type_code ?T1_template_type_code .        } GROUP BY ?T1_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes with less than three templates.",
        "query": "select ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code   having(count( *)  < 3)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the codes of template types that have fewer than 3 templates?",
        "query": "select ?t1_template_type_code where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code   having(count( *)  < 3)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What the smallest version number and its template type code?",
        "query": "SELECT (min( ?T1_version_number) as ?aggregation_T1_version_number_55 ) ?T1_template_type_code WHERE { ?T1 a :templates . ?T1 :templates\\#version_number ?T1_version_number . ?T1 :templates\\#template_type_code ?T1_template_type_code .        } GROUP BY ?T1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "query": "SELECT (min( ?T1_version_number) as ?aggregation_T1_version_number_55 ) ?T1_template_type_code WHERE { ?T1 a :templates . ?T1 :templates\\#version_number ?T1_version_number . ?T1 :templates\\#template_type_code ?T1_template_type_code .        } GROUP BY ?T1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the template type code of the template used by document with the name 'Data base'?",
        "query": "select ?t1_template_type_code where { ?t1 a :templates . ?t2 a :documents . ?t2 :documents\\#ref-template_id ?t1 .  ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Data base') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "query": "select ?t1_template_type_code where { ?t1 a :templates . ?t2 a :documents . ?t2 :documents\\#ref-template_id ?t1 .  ?t1 :templates\\#template_type_code ?t1_template_type_code . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Data base') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all document names using templates with template type code BK.",
        "query": "select ?t1_document_name where { ?t1 a :documents . ?t2 a :templates . ?t1 :documents\\#ref-template_id ?t2 .  ?t1 :documents\\#document_name ?t1_document_name . ?t2 :templates\\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'BK') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the names of documents that use templates with the code BK?",
        "query": "select ?t1_document_name where { ?t1 a :documents . ?t2 a :templates . ?t1 :documents\\#ref-template_id ?t2 .  ?t1 :documents\\#document_name ?t1_document_name . ?t2 :templates\\#template_type_code ?t2_template_type_code . FILTER(?t2_template_type_code = 'BK') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes and the number of documents using each type.",
        "query": "select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t2 a :documents . ?t2 :documents\\#ref-template_id ?t1 .  ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the different template type codes, and how many documents use each type?",
        "query": "select ?t1_template_type_code (count( *) as ?aggregation_all) where { ?t1 a :templates . ?t2 a :documents . ?t2 :documents\\#ref-template_id ?t1 .  ?t1 :templates\\#template_type_code ?t1_template_type_code .        } group by ?t1_template_type_code"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Which template type code is used by most number of documents?",
        "query": "SELECT ?T1_template_type_code (count( *) as ?aggregation_all) WHERE { ?T1 a :templates . ?T3 a :documents . ?T3 :documents\\#ref-template_id ?T1 .  ?T1 :templates\\#template_type_code ?T1_template_type_code . ?T1 :templates\\#template_id ?T1_template_id .        } GROUP BY ?T1_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the code of the template type that is most commonly used in documents.",
        "query": "SELECT ?T1_template_type_code (count( *) as ?aggregation_all) WHERE { ?T1 a :templates . ?T3 a :documents . ?T3 :documents\\#ref-template_id ?T1 .  ?T1 :templates\\#template_type_code ?T1_template_type_code . ?T1 :templates\\#template_id ?T1_template_id .        } GROUP BY ?T1_template_type_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes that are not used by any document.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_template_type_code as ?col1) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .   }}  MINUS {select (?t2_template_type_code as ?col1) where { ?t2 a :templates . ?t3 a :documents . ?t3 :documents\\#ref-template_id ?t2 .  ?t2 :templates\\#template_type_code ?t2_template_type_code . ?t2 :templates\\#template_id ?t2_template_id .        }     } }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the codes of template types that are not used for any document?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_template_type_code as ?col1) where { ?t1 a :templates . ?t1 :templates\\#template_type_code ?t1_template_type_code .   }}  MINUS {select (?t2_template_type_code as ?col1) where { ?t2 a :templates . ?t3 a :documents . ?t3 :documents\\#ref-template_id ?t2 .  ?t2 :templates\\#template_type_code ?t2_template_type_code . ?t2 :templates\\#template_id ?t2_template_id .        }     } }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all template type codes and descriptions.",
        "query": "select ?t1_template_type_code ?t1_template_type_description where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the type codes and descriptions for all template types?",
        "query": "select ?t1_template_type_code ?t1_template_type_description where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the template type descriptions for template type code 'AD'.",
        "query": "select ?t1_template_type_description where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'AD') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the template type description of the template type with the code AD.",
        "query": "select ?t1_template_type_description where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . FILTER(?t1_template_type_code = 'AD') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the template type code for template type description 'Book'.",
        "query": "select ?t1_template_type_code where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . FILTER(?t1_template_type_description = 'Book') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the type code of the template type with the description 'Book'.",
        "query": "select ?t1_template_type_code where { ?t1 a :reference_template_types . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code . ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . FILTER(?t1_template_type_description = 'Book') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "query": "select distinct ?t1_template_type_description where { ?t1 a :reference_template_types . ?t2 a :templates . ?t2 :templates\\#ref-template_type_code ?t1 .  ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the different descriptions for templates that have been used in a document.",
        "query": "select distinct ?t1_template_type_description where { ?t1 a :reference_template_types . ?t2 a :templates . ?t2 :templates\\#ref-template_type_code ?t1 .  ?t1 :reference_template_types\\#template_type_description ?t1_template_type_description . ?t1 :reference_template_types\\#template_type_code ?t1_template_type_code .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the template ids with template type description 'Presentation'.",
        "query": "select ?t1_template_id where { ?t1 a :templates . ?t2 a :reference_template_types . ?t1 :templates\\#ref-template_type_code ?t2 .  ?t1 :templates\\#template_id ?t1_template_id . ?t2 :reference_template_types\\#template_type_description ?t2_template_type_description . FILTER(?t2_template_type_description = 'Presentation') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "query": "select ?t1_template_id where { ?t1 a :templates . ?t2 a :reference_template_types . ?t1 :templates\\#ref-template_type_code ?t2 .  ?t1 :templates\\#template_id ?t1_template_id . ?t2 :reference_template_types\\#template_type_description ?t2_template_type_description . FILTER(?t2_template_type_description = 'Presentation') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many paragraphs in total?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :paragraphs .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of paragraphs.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :paragraphs .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Summer Show') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Summer Show') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show paragraph details for paragraph with text 'Korea ' .",
        "query": "select ?t1_other_details where { ?t1 a :paragraphs . ?t1 :paragraphs\\#other_details ?t1_other_details . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Korea') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the details for the paragraph that includes the text 'Korea' ?",
        "query": "select ?t1_other_details where { ?t1 a :paragraphs . ?t1 :paragraphs\\#other_details ?t1_other_details . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Korea') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "query": "select ?t1_paragraph_id ?t1_paragraph_text where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t1 :paragraphs\\#paragraph_id ?t1_paragraph_id . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Welcome to NY') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "query": "select ?t1_paragraph_id ?t1_paragraph_text where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t1 :paragraphs\\#paragraph_id ?t1_paragraph_id . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Welcome to NY') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all paragraph texts for the document 'Customer reviews'.",
        "query": "select ?t1_paragraph_text where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Customer reviews') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "query": "select ?t1_paragraph_text where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . ?t2 :documents\\#document_name ?t2_document_name . FILTER(?t2_document_name = 'Customer reviews') .        }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "query": "select ?t1_document_id (count( *) as ?aggregation_all) where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id order by asc (?t1_document_id)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "query": "select ?t1_document_id (count( *) as ?aggregation_all) where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id order by asc (?t1_document_id)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "query": "select ?t1_document_id ?t2_document_name (count( *) as ?aggregation_all) where { ?t1 a :paragraphs . ?t2 a :documents . ?t1 :paragraphs\\#ref-document_id ?t2 .  ?t1 :paragraphs\\#document_id ?t1_document_id . ?t2 :documents\\#document_name ?t2_document_name .        } group by ?t1_document_id ?t2_document_name"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "query": "SELECT ?T1_document_id ?T2_document_name (count( *) as ?aggregation_all) WHERE { ?T1 a :paragraphs . ?T2 a :documents . ?T1 :paragraphs\\#ref-document_id ?T2 .  ?T1 :paragraphs\\#document_id ?T1_document_id . ?T2 :documents\\#document_name ?T2_document_name .        } GROUP BY ?T1_document_id ?T2_document_name"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "List all document ids with at least two paragraphs.",
        "query": "select ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 2)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids of documents that have 2 or more paragraphs?",
        "query": "select ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 2)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the document id and name with greatest number of paragraphs?",
        "query": "SELECT ?T1_document_id (count( *) as ?aggregation_all) ?T2_document_name WHERE { ?T1 a :paragraphs . ?T2 a :documents . ?T1 :paragraphs\\#ref-document_id ?T2 .  ?T1 :paragraphs\\#document_id ?T1_document_id . ?T2 :documents\\#document_name ?T2_document_name .        } GROUP BY ?T1_document_id ?T2_document_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the id and name of the document with the most paragraphs.",
        "query": "SELECT ?T1_document_id (count( *) as ?aggregation_all) ?T2_document_name WHERE { ?T1 a :paragraphs . ?T2 a :documents . ?T1 :paragraphs\\#ref-document_id ?T2 .  ?T1 :paragraphs\\#document_id ?T1_document_id . ?T2 :documents\\#document_name ?T2_document_name .        } GROUP BY ?T1_document_id ?T2_document_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the document id with least number of paragraphs?",
        "query": "SELECT ?T1_document_id (count( *) as ?aggregation_all) WHERE { ?T1 a :paragraphs . ?T1 :paragraphs\\#document_id ?T1_document_id .        } GROUP BY ?T1_document_id  ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Return the id of the document with the fewest paragraphs.",
        "query": "SELECT ?T1_document_id (count( *) as ?aggregation_all) WHERE { ?T1 a :paragraphs . ?T1 :paragraphs\\#document_id ?T1_document_id .        } GROUP BY ?T1_document_id  ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What is the document id with 1 to 2 paragraphs?",
        "query": "select ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 1)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "query": "select ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id .        } group by ?t1_document_id   having(count( *)  >= 1)"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "query": "select distinct ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Brazil') . FILTER (?t1_document_id in (?t2_document_id)) .   ?t2 a :paragraphs . ?t2 :paragraphs\\#document_id ?t2_document_id . ?t2 :paragraphs\\#paragraph_text ?t2_paragraph_text .  FILTER(?t2_paragraph_text = 'Ireland') .             }"
    },
    {
        "kg_name": "cre_Doc_Template_Mgt",
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "query": "select distinct ?t1_document_id where { ?t1 a :paragraphs . ?t1 :paragraphs\\#document_id ?t1_document_id . ?t1 :paragraphs\\#paragraph_text ?t1_paragraph_text . FILTER(?t1_paragraph_text = 'Brazil') . FILTER (?t1_document_id in (?t2_document_id)) .   ?t2 a :paragraphs . ?t2 :paragraphs\\#document_id ?t2_document_id . ?t2 :paragraphs\\#paragraph_text ?t2_paragraph_text .  FILTER(?t2_paragraph_text = 'Ireland') .             }"
    },
    {
        "kg_name": "course_teach",
        "question": "How many teachers are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :teacher .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What is the total count of teachers?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :teacher .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "List the names of teachers in ascending order of age.",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers ordered by ascending age?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the age and hometown of teachers?",
        "query": "select ?t1_age ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#age ?t1_age . ?t1 :teacher\\#hometown ?t1_hometown .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What is the age and hometown of every teacher?",
        "query": "select ?t1_age ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#age ?t1_age . ?t1 :teacher\\#hometown ?t1_hometown .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#hometown ?t1_hometown . FILTER(?t1_hometown != 'Little Lever Urban District') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#hometown ?t1_hometown . FILTER(?t1_hometown != 'Little Lever Urban District') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "Show the name of teachers aged either 32 or 33?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#age ?t1_age . ?t1 :teacher\\#age ?t1_age . FILTER(?t1_age = '32' || ?t1_age = '33') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers who are aged either 32 or 33?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#age ?t1_age . ?t1 :teacher\\#age ?t1_age . FILTER(?t1_age = '32' || ?t1_age = '33') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What is the hometown of the youngest teacher?",
        "query": "select ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown . ?t1 :teacher\\#age ?t1_age .        }   order by asc (?t1_age) limit 1"
    },
    {
        "kg_name": "course_teach",
        "question": "Where is the youngest teacher from?",
        "query": "select ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown . ?t1 :teacher\\#age ?t1_age .        }   order by asc (?t1_age) limit 1"
    },
    {
        "kg_name": "course_teach",
        "question": "Show different hometown of teachers and the number of teachers from each hometown.",
        "query": "select ?t1_hometown (count( *) as ?aggregation_all) where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown .        } group by ?t1_hometown"
    },
    {
        "kg_name": "course_teach",
        "question": "For each hometown, how many teachers are there?",
        "query": "select ?t1_hometown (count( *) as ?aggregation_all) where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown .        } group by ?t1_hometown"
    },
    {
        "kg_name": "course_teach",
        "question": "List the most common hometown of teachers.",
        "query": "SELECT ?T1_hometown (count( *) as ?aggregation_all) WHERE { ?T1 a :teacher . ?T1 :teacher\\#hometown ?T1_hometown .        } GROUP BY ?T1_hometown  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "course_teach",
        "question": "What is the most commmon hometowns for teachers?",
        "query": "SELECT ?T1_hometown (count( *) as ?aggregation_all) WHERE { ?T1 a :teacher . ?T1 :teacher\\#hometown ?T1_hometown .        } GROUP BY ?T1_hometown  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "course_teach",
        "question": "Show the hometowns shared by at least two teachers.",
        "query": "select ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown .        } group by ?t1_hometown   having(count( *)  >= 2)"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the towns from which at least two teachers come from?",
        "query": "select ?t1_hometown where { ?t1 a :teacher . ?t1 :teacher\\#hometown ?t1_hometown .        } group by ?t1_hometown   having(count( *)  >= 2)"
    },
    {
        "kg_name": "course_teach",
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "query": "select ?t1_name ?t2_course where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t2 :course\\#course_id ?t2_course_id . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t2 :course\\#course_id ?t2_course_id .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What is the name of each teacher and what course they teach?",
        "query": "select ?t1_name ?t2_course where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t2 :course\\#course_id ?t2_course_id . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t2 :course\\#course_id ?t2_course_id .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "query": "select ?t1_name ?t2_course where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id .        }  order by asc (?t1_name)"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "query": "select ?t1_name ?t2_course where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course ?t2_course . ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id .        }  order by asc (?t1_name)"
    },
    {
        "kg_name": "course_teach",
        "question": "Show the name of the teacher for the math course.",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 :course\\#course ?t2_course . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 :course\\#course ?t2_course . FILTER(?t2_course = 'Math') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the people who teach math courses?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t3 a :course_arrange . ?t3 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 :course\\#course ?t2_course . ?t2 a :course . ?t3 :course_arrange\\#ref-course_id ?t2 .  ?t1 :teacher\\#name ?t1_name . ?t2 :course\\#course_id ?t2_course_id . ?t2 :course\\#course ?t2_course . FILTER(?t2_course = 'Math') .        }"
    },
    {
        "kg_name": "course_teach",
        "question": "Show names of teachers and the number of courses they teach.",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :teacher . ?t13 a :course_arrange . ?t13 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name .        } group by ?t1_name"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers and how many courses do they teach?",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :teacher . ?t13 a :course_arrange . ?t13 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name .        } group by ?t1_name"
    },
    {
        "kg_name": "course_teach",
        "question": "Show names of teachers that teach at least two courses.",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t2 a :course_arrange . ?t2 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#teacher_id ?t1_teacher_id .        } group by ?t1_name   having(count( *)  >= 2)"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers who teach at least two courses?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t2 a :course_arrange . ?t2 :course_arrange\\#ref-teacher_id ?t1 .  ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#teacher_id ?t1_teacher_id .        } group by ?t1_name   having(count( *)  >= 2)"
    },
    {
        "kg_name": "course_teach",
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#teacher_id ?t1_teacher_id .     Filter not exists {{select ?t22_teacher_id where { ?t22 a :course_arrange . ?t22 :course_arrange\\#teacher_id ?t22_teacher_id .        }    } FILTER (?t1_teacher_id in (?t22_teacher_id))}  }"
    },
    {
        "kg_name": "course_teach",
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "query": "select ?t1_name where { ?t1 a :teacher . ?t1 :teacher\\#name ?t1_name . ?t1 :teacher\\#teacher_id ?t1_teacher_id .     Filter not exists {{select ?t22_teacher_id where { ?t22 a :course_arrange . ?t22 :course_arrange\\#teacher_id ?t22_teacher_id .        }    } FILTER (?t1_teacher_id in (?t22_teacher_id))}  }"
    },
    {
        "kg_name": "museum_visit",
        "question": "How many visitors below age 30 are there?",
        "query": "select (count(?visitor) as ?count) WHERE {   ?visitor a :visitor .   ?visitor :visitor\\#age ?age .   FILTER(?age < 30) . }"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "query": "select ?T1_name WHERE { ?T1 a :visitor . ?T1 :visitor\\#name ?T1_name . ?T1 :visitor\\#level_of_membership ?T1_level_of_membership . FILTER(?T1_level_of_membership > 4) . } ORDER BY DESC (?T1_level_of_membership)"
    },
    {
        "kg_name": "museum_visit",
        "question": "What is the average age of the visitors whose membership level is not higher than 4?",
        "query": "select (avg(?T1_age) as ?average_age) WHERE { ?T1 a :visitor . ?T1 :visitor\\#age ?T1_age . ?T1 :visitor\\#level_of_membership ?T1_level_of_membership . FILTER(?T1_level_of_membership <= 4) . }"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "query": "select ?T1_name ?T1_level_of_membership WHERE { ?T1 a :visitor . ?T1 :visitor\\#name ?T1_name . ?T1 :visitor\\#level_of_membership ?T1_level_of_membership . FILTER(?T1_level_of_membership > 4) . } ORDER BY DESC (?T1_age)"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the id and name of the museum that has the most staff members?",
        "query": "select ?t1_museum_id ?t1_name where { ?t1 a :museum . ?t1 :museum\\#museum_id ?t1_museum_id . ?t1 :museum\\#name ?t1_name . ?t1 :museum\\#num_of_staff ?t1_num_of_staff .        }   order by desc (?t1_num_of_staff) limit 1"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the average number of staff working for the museums that were open before 2009.",
        "query": "select (avg( ?t1_num_of_staff) as ?aggregation_t1_num_of_staff_169 ) where { ?t1 a :museum . ?t1 :museum\\#num_of_staff ?t1_num_of_staff . ?t1 :museum\\#open_year ?t1_open_year . FILTER(?t1_open_year < 2009) .        }"
    },
    {
        "kg_name": "museum_visit",
        "question": "What are the opening year and staff number of the museum named Plaza Museum?",
        "query": "select ?t1_num_of_staff ?t1_open_year where { ?t1 a :museum . ?t1 :museum\\#num_of_staff ?t1_num_of_staff . ?t1 :museum\\#open_year ?t1_open_year . ?t1 :museum\\#name ?t1_name . FILTER(?t1_name = 'Plaza Museum') .        }"
    },
    {
        "kg_name": "museum_visit",
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "query": "SELECT ?T1_name WHERE { ?T1 a :museum . ?T1 :museum\\#name ?T1_name . ?T1 :museum\\#num_of_staff ?T1_num_of_staff . FILTER(?T1_num_of_staff > ?aggregation_T22_num_of_staff_182) .       {SELECT (min( ?T22_num_of_staff) as ?aggregation_T22_num_of_staff_182 ) WHERE { ?T22 a :museum . ?T22 :museum\\#num_of_staff ?T22_num_of_staff . ?T22 :museum\\#open_year ?T22_open_year . FILTER(?T22_open_year > '2010') .        }    } }"
    },
    {
        "kg_name": "museum_visit",
        "question": "find the id, name and age for visitors who visited some museums more than once.",
        "query": "select ?t1_id ?t1_name ?t1_age where { ?t1 a :visitor . ?t2 a :visit . ?t2 :visit\\#ref-visitor_id ?t1 .  ?t1 :visitor\\#id ?t1_id . ?t1 :visitor\\#name ?t1_name . ?t1 :visitor\\#age ?t1_age . ?t1 :visitor\\#id ?t1_id .        } group by ?t1_id ?t1_name ?t1_age   having(count( *)  > 1)"
    },
    {
        "kg_name": "museum_visit",
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :museum . ?T1 :museum\\#name ?T1_name . ?T1 :museum\\#num_of_staff ?T1_num_of_staff . FILTER(?T1_num_of_staff > ?aggregation_T22_num_of_staff_182) .       {SELECT (min( ?T22_num_of_staff) as ?aggregation_T22_num_of_staff_182 ) WHERE { ?T22 a :museum . ?T22 :museum\\#num_of_staff ?T22_num_of_staff . ?T22 :museum\\#open_year ?T22_open_year . FILTER(?T22_open_year > '2010') .        }    } }"
    },
    {
        "kg_name": "museum_visit",
        "question": "What are the id and name of the museum visited most times?",
        "query": "SELECT ?T1_museum_id (count( *) as ?aggregation_all) ?T2_name WHERE { ?T1 a :visit . ?T2 a :museum . ?T1 :visit\\#ref-museum_id ?T2 .  ?T1 :visit\\#museum_id ?T1_museum_id . ?T2 :museum\\#name ?T2_name .        } GROUP BY ?T1_museum_id ?T2_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "museum_visit",
        "question": "What is the name of the museum that had no visitor yet?",
        "query": "select ?t1_name where { ?t1 a :museum . ?t1 :museum\\#name ?t1_name . ?t1 :museum\\#museum_id ?t1_museum_id .     Filter not exists {{select ?t22_museum_id where { ?t22 a :visit . ?t22 :visit\\#museum_id ?t22_museum_id .        }    } FILTER (?t1_museum_id in (?t22_museum_id))}  }"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the name and age of the visitor who bought the most tickets at once.",
        "query": "select ?t1_name ?t1_age where { ?t1 a :visitor . ?t2 a :visit . ?t2 :visit\\#ref-visitor_id ?t1 .  ?t1 :visitor\\#name ?t1_name . ?t1 :visitor\\#age ?t1_age . ?t2 :visit\\#num_of_ticket ?t2_num_of_ticket .        }   order by desc (?t2_num_of_ticket) limit 1"
    },
    {
        "kg_name": "museum_visit",
        "question": "What are the average and maximum number of tickets bought in all visits?",
        "query": "select (avg( ?t1_num_of_ticket) as ?aggregation_t1_num_of_ticket_174 ) (max( ?t1_num_of_ticket) as ?aggregation_t1_num_of_ticket_183 ) where { ?t1 a :visit . ?t1 :visit\\#num_of_ticket ?t1_num_of_ticket . ?t1 :visit\\#num_of_ticket ?t1_num_of_ticket .        }"
    },
    {
        "kg_name": "museum_visit",
        "question": "What is the total ticket expense of the visitors whose membership level is 1?",
        "query": "select (sum( ?t1_total_spent) as ?aggregation_t1_total_spent_166 ) where { ?t1 a :visit . ?t2 a :visitor . ?t1 :visit\\#ref-visitor_id ?t2 .  ?t1 :visit\\#total_spent ?t1_total_spent . ?t2 :visitor\\#level_of_membership ?t2_level_of_membership . FILTER(?t2_level_of_membership = 1) .        }"
    },
    {
        "kg_name": "museum_visit",
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "query": "select distinct ?t1_name where { ?t1 a :visitor . ?t2 a :visit . ?t2 :visit\\#ref-visitor_id ?t1 .  ?t1 :visitor\\#name ?t1_name . ?t1 :visitor\\#id ?t1_id . ?t3 :museum\\#open_year ?t3_open_year . ?t3 a :museum . ?t2 :visit\\#ref-museum_id ?t3 .  ?t1 :visitor\\#name ?t1_name . ?t1 :visitor\\#id ?t1_id . ?t3 :museum\\#open_year ?t3_open_year . FILTER(?t3_open_year < '2009') . FILTER (?t1_name in (?t4_name)) .   ?t4 a :visitor . ?t5 a :visit . ?t5 :visit\\#ref-visitor_id ?t4 .  ?t4 :visitor\\#name ?t4_name . ?t4 :visitor\\#id ?t4_id . ?t6 :museum\\#open_year ?t6_open_year . ?t6 a :museum . ?t5 :visit\\#ref-museum_id ?t6 .  ?t4 :visitor\\#name ?t4_name . ?t4 :visitor\\#id ?t4_id . ?t6 :museum\\#open_year ?t6_open_year .  FILTER(?t6_open_year > '2011') .             }"
    },
    {
        "kg_name": "museum_visit",
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :visitor . ?t1 :visitor\\#id ?t1_id .     Filter not exists {{select ?t22_visitor_id where { ?t22 a :visit . ?t23 a :museum . ?t22 :visit\\#ref-museum_id ?t23 .  ?t22 :visit\\#visitor_id ?t22_visitor_id . ?t23 :museum\\#open_year ?t23_open_year . FILTER(?t23_open_year > '2010') .        }    } FILTER (?t1_id in (?t22_visitor_id))}  }"
    },
    {
        "kg_name": "museum_visit",
        "question": "How many museums were opened after 2013 or before 2008?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :museum . ?t1 :museum\\#open_year ?t1_open_year . ?t1 :museum\\#open_year ?t1_open_year . FILTER(?t1_open_year > '2013' || ?t1_open_year < '2008') .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the total number of players.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :players .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "How many players are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :players .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the total number of matches.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :matches .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Count the number of matches.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :matches .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "List the first name and birth date of all players from the country with code USA.",
        "query": "SELECT ?T1_first_name ?T1_birth_date WHERE {?T1 a :players . \n?T1 :players\\#country_code \"USA\" . \n?T1 :players\\#first_name ?T1_first_name . \n?T1 :players\\#birth_date ?T1_birth_date .}"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the first names and birth dates of players from the USA?",
        "query": "SELECT ?T1_first_name ?T1_birth_date WHERE {?T1 a :players . \n?T1 :players\\#country_code \"USA\" . \n?T1 :players\\#first_name ?T1_first_name . \n?T1 :players\\#birth_date ?T1_birth_date .}"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the average age of losers and winners of all matches.",
        "query": "select (avg( ?t1_loser_age) as ?aggregation_t1_loser_age_71 ) (avg( ?t1_winner_age) as ?aggregation_t1_winner_age_178 ) where { ?t1 a :matches . ?t1 :matches\\#loser_age ?t1_loser_age . ?t1 :matches\\#winner_age ?t1_winner_age .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the average ages of losers and winners across matches?",
        "query": "select (avg( ?t1_loser_age) as ?aggregation_t1_loser_age_71 ) (avg( ?t1_winner_age) as ?aggregation_t1_winner_age_178 ) where { ?t1 a :matches . ?t1 :matches\\#loser_age ?t1_loser_age . ?t1 :matches\\#winner_age ?t1_winner_age .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the average rank of winners in all matches.",
        "query": "select (avg( ?t1_winner_rank) as ?aggregation_t1_winner_rank_52 ) where { ?t1 a :matches . ?t1 :matches\\#winner_rank ?t1_winner_rank .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the average rank for winners in all matches?",
        "query": "select (avg( ?t1_winner_rank) as ?aggregation_t1_winner_rank_52 ) where { ?t1 a :matches . ?t1 :matches\\#winner_rank ?t1_winner_rank .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the highest rank of losers in all matches.",
        "query": "select (min( ?t1_loser_rank) as ?aggregation_t1_loser_rank_88 ) where { ?t1 a :matches . ?t1 :matches\\#loser_rank ?t1_loser_rank .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the best rank of losers across all matches?",
        "query": "select (min( ?t1_loser_rank) as ?aggregation_t1_loser_rank_88 ) where { ?t1 a :matches . ?t1 :matches\\#loser_rank ?t1_loser_rank .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "find the number of distinct country codes of all players.",
        "query": "select distinct (count(distinct ?t1_country_code) as ?aggregation_t1_country_code_32 ) where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "How many distinct countries do players come from?",
        "query": "select distinct (count(distinct ?t1_country_code) as ?aggregation_t1_country_code_32 ) where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the number of distinct name of losers.",
        "query": "select distinct (count(distinct ?t1_loser_name) as ?aggregation_t1_loser_name_87 ) where { ?t1 a :matches . ?t1 :matches\\#loser_name ?t1_loser_name .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "How many different loser names are there?",
        "query": "select distinct (count(distinct ?t1_loser_name) as ?aggregation_t1_loser_name_87 ) where { ?t1 a :matches . ?t1 :matches\\#loser_name ?t1_loser_name .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the name of tourney that has more than 10 matches.",
        "query": "select ?t1_tourney_name where { ?t1 a :matches . ?t1 :matches\\#tourney_name ?t1_tourney_name .        } group by ?t1_tourney_name   having(count( *)  > 10)"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the names of tournaments that have more than 10 matches?",
        "query": "select ?t1_tourney_name where { ?t1 a :matches . ?t1 :matches\\#tourney_name ?t1_tourney_name .        } group by ?t1_tourney_name   having(count( *)  > 10)"
    },
    {
        "kg_name": "wta_1",
        "question": "List the names of all winners who played in both 2013 and 2016.",
        "query": "select distinct ?t1_winner_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#year ?t1_year . FILTER(?t1_year = 2013) . FILTER (?t1_winner_name in (?t2_winner_name)) .   ?t2 a :matches . ?t2 :matches\\#winner_name ?t2_winner_name . ?t2 :matches\\#year ?t2_year .  FILTER(?t2_year = 2016) .             }"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the names of players who won in both 2013 and 2016?",
        "query": "select distinct ?t1_winner_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#year ?t1_year . FILTER(?t1_year = 2013) . FILTER (?t1_winner_name in (?t2_winner_name)) .   ?t2 a :matches . ?t2 :matches\\#winner_name ?t2_winner_name . ?t2 :matches\\#year ?t2_year .  FILTER(?t2_year = 2016) .             }"
    },
    {
        "kg_name": "wta_1",
        "question": "List the number of all matches who played in years of 2013 or 2016.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :matches . ?t1 :matches\\#year ?t1_year . ?t1 :matches\\#year ?t1_year . FILTER(?t1_year = 2013 || ?t1_year = 2016) .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "How many matches were played in 2013 or 2016?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :matches . ?t1 :matches\\#year ?t1_year . ?t1 :matches\\#year ?t1_year . FILTER(?t1_year = 2013 || ?t1_year = 2016) .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "query": "select distinct ?t1_country_code ?t1_first_name where { ?t1 a :players . ?t2 a :matches . ?t2 :matches\\#ref-winner_id ?t1 .  ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#first_name ?t1_first_name . ?t2 :matches\\#tourney_name ?t2_tourney_name . FILTER(?t2_tourney_name = 'WTA Championships') . FILTER (?t1_country_code in (?t3_country_code)) . FILTER (?t1_first_name in (?t3_first_name)) .   ?t3 a :players . ?t4 a :matches . ?t4 :matches\\#ref-winner_id ?t3 .  ?t3 :players\\#country_code ?t3_country_code . ?t3 :players\\#first_name ?t3_first_name . ?t4 :matches\\#tourney_name ?t4_tourney_name .  FILTER(?t4_tourney_name = 'Australian Open') .             }"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "query": "select distinct ?t1_country_code ?t1_first_name where { ?t1 a :players . ?t2 a :matches . ?t2 :matches\\#ref-winner_id ?t1 .  ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#first_name ?t1_first_name . ?t2 :matches\\#tourney_name ?t2_tourney_name . FILTER(?t2_tourney_name = 'WTA Championships') . FILTER (?t1_country_code in (?t3_country_code)) . FILTER (?t1_first_name in (?t3_first_name)) .   ?t3 a :players . ?t4 a :matches . ?t4 :matches\\#ref-winner_id ?t3 .  ?t3 :players\\#country_code ?t3_country_code . ?t3 :players\\#first_name ?t3_first_name . ?t4 :matches\\#tourney_name ?t4_tourney_name .  FILTER(?t4_tourney_name = 'Australian Open') .             }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the first name and country code of the oldest player.",
        "query": "select ?t1_first_name ?t1_country_code where { ?t1 a :players . ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#birth_date ?t1_birth_date .        }   order by asc (?t1_birth_date) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the first name and country code of the oldest player?",
        "query": "select ?t1_first_name ?t1_country_code where { ?t1 a :players . ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#birth_date ?t1_birth_date .        }   order by asc (?t1_birth_date) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "List the first and last name of all players in the order of birth date.",
        "query": "SELECT ?T1_first_name ?T1_last_name WHERE {?T1 a :players .  \n?T1 :players\\#first_name ?T1_first_name . \n    ?T1 :players\\#last_name ?T1_last_name .\n?T1 :players\\#birth_date ?T1_birth_date .} ORDER BY ?T1_birth_date"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the full names of all players, sorted by birth date?",
        "query": "SELECT ?T1_first_name ?T1_last_name WHERE {?T1 a :players .  \n?T1 :players\\#first_name ?T1_first_name . \n    ?T1 :players\\#last_name ?T1_last_name .\n?T1 :players\\#birth_date ?T1_birth_date .} ORDER BY ?T1_birth_date"
    },
    {
        "kg_name": "wta_1",
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "query": "select ?t1_first_name ?t1_last_name where { ?t1 a :players . ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#last_name ?t1_last_name . ?t1 :players\\#birth_date ?t1_birth_date . ?t1 :players\\#hand ?t1_hand . FILTER(?t1_hand = 'L') .        }  order by asc (?t1_birth_date)"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the full names of all left handed players, in order of birth date?",
        "query": "select ?t1_first_name ?t1_last_name where { ?t1 a :players . ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#last_name ?t1_last_name . ?t1 :players\\#birth_date ?t1_birth_date . ?t1 :players\\#hand ?t1_hand . FILTER(?t1_hand = 'L') .        }  order by asc (?t1_birth_date)"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the first name and country code of the player who did the most number of tours.",
        "query": "SELECT ?T1_country_code ?T1_first_name WHERE { ?T1 a :players . ?T2 a :rankings . ?T2 :rankings\\#ref-player_id ?T1 .  ?T1 :players\\#country_code ?T1_country_code . ?T1 :players\\#first_name ?T1_first_name . ?T2 :rankings\\#tours ?T2_tours .        }   ORDER BY DESC (?T2_tours) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the first name and country code of the player with the most tours?",
        "query": "SELECT ?T1_country_code ?T1_first_name WHERE { ?T1 a :players . ?T2 a :rankings . ?T2 :rankings\\#ref-player_id ?T1 .  ?T1 :players\\#country_code ?T1_country_code . ?T1 :players\\#first_name ?T1_first_name . ?T2 :rankings\\#tours ?T2_tours .        }   ORDER BY DESC (?T2_tours) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the year that has the most number of matches.",
        "query": "SELECT ?T1_year (count( *) as ?aggregation_all) WHERE { ?T1 a :matches . ?T1 :matches\\#year ?T1_year .        } GROUP BY ?T1_year  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Which year had the most matches?",
        "query": "SELECT ?T1_year (count( *) as ?aggregation_all) WHERE { ?T1 a :matches . ?T1 :matches\\#year ?T1_year .        } GROUP BY ?T1_year  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the name and rank points of the winner who won the most times.",
        "query": "SELECT ?T1_winner_name (count( *) as ?aggregation_all) ?T1_winner_rank_points WHERE { ?T1 a :matches . ?T1 :matches\\#winner_name ?T1_winner_name . ?T1 :matches\\#winner_rank_points ?T1_winner_rank_points .        } GROUP BY ?T1_winner_name  ?T1_winner_rank_points  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "query": "SELECT ?T1_winner_name (count( *) as ?aggregation_all) ?T1_winner_rank_points WHERE { ?T1 a :matches . ?T1 :matches\\#winner_name ?T1_winner_name . ?T1 :matches\\#winner_rank_points ?T1_winner_rank_points .        } GROUP BY ?T1_winner_name  ?T1_winner_rank_points  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "query": "select ?t1_winner_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#winner_rank_points ?t1_winner_rank_points . ?t1 :matches\\#tourney_name ?t1_tourney_name . FILTER(?t1_tourney_name = 'Australian Open') .        }   order by desc (?t1_winner_rank_points) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "query": "select ?t1_winner_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#winner_rank_points ?t1_winner_rank_points . ?t1 :matches\\#tourney_name ?t1_tourney_name . FILTER(?t1_tourney_name = 'Australian Open') .        }   order by desc (?t1_winner_rank_points) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
        "query": "select ?t1_winner_name ?t1_loser_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#loser_name ?t1_loser_name . ?t1 :matches\\#minutes ?t1_minutes .        }   order by desc (?t1_minutes) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the names of the winner and loser who played in the longest match?",
        "query": "select ?t1_winner_name ?t1_loser_name where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#loser_name ?t1_loser_name . ?t1 :matches\\#minutes ?t1_minutes .        }   order by desc (?t1_minutes) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the average ranking for each player and their first name.",
        "query": "SELECT ?T1_first_name (AVG (?T2_ranking) as ?agg ) WHERE {?T1 a :players .  \n?T1 :players\\#first_name ?T1_first_name . \n?T2 a :rankings . \n    ?T2 :rankings\\#ranking ?T2_ranking .\n?T2 :rankings\\#ref-player_id ?T1} GROUP BY ?T1_first_name"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the first names of all players, and their average rankings?",
        "query": "SELECT ?T1_first_name (AVG (?T2_ranking) as ?agg ) WHERE {?T1 a :players .  \n?T1 :players\\#first_name ?T1_first_name . \n?T2 a :rankings . \n    ?T2 :rankings\\#ranking ?T2_ranking .\n?T2 :rankings\\#ref-player_id ?T1} GROUP BY ?T1_first_name"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the total ranking points for each player and their first name.",
        "query": "SELECT (sum( ?T1_ranking_points) as ?aggregation_T1_ranking_points_61 ) ?T2_first_name WHERE { ?T1 a :rankings . ?T2 a :players . ?T1 :rankings\\#ref-player_id ?T2 .  ?T1 :rankings\\#ranking_points ?T1_ranking_points . ?T2 :players\\#first_name ?T2_first_name .        } GROUP BY ?T2_first_name"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the first names of all players, and their total ranking points?",
        "query": "SELECT (sum( ?T1_ranking_points) as ?aggregation_T1_ranking_points_61 ) ?T2_first_name WHERE { ?T1 a :rankings . ?T2 a :players . ?T1 :rankings\\#ref-player_id ?T2 .  ?T1 :rankings\\#ranking_points ?T1_ranking_points . ?T2 :players\\#first_name ?T2_first_name .        } GROUP BY ?T2_first_name"
    },
    {
        "kg_name": "wta_1",
        "question": "find the number of players for each country.",
        "query": "select (count( *) as ?aggregation_all) ?t1_country_code where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        } group by ?t1_country_code"
    },
    {
        "kg_name": "wta_1",
        "question": "How many players are from each country?",
        "query": "select (count( *) as ?aggregation_all) ?t1_country_code where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        } group by ?t1_country_code"
    },
    {
        "kg_name": "wta_1",
        "question": "find the code of the country where has the greatest number of players.",
        "query": "SELECT ?T1_country_code (count( *) as ?aggregation_all) WHERE { ?T1 a :players . ?T1 :players\\#country_code ?T1_country_code .        } GROUP BY ?T1_country_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the code of the country with the most players?",
        "query": "SELECT ?T1_country_code (count( *) as ?aggregation_all) WHERE { ?T1 a :players . ?T1 :players\\#country_code ?T1_country_code .        } GROUP BY ?T1_country_code  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the codes of countries that have more than 50 players.",
        "query": "select ?t1_country_code where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        } group by ?t1_country_code   having(count( *)  > 50)"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the codes of countries with more than 50 players?",
        "query": "select ?t1_country_code where { ?t1 a :players . ?t1 :players\\#country_code ?t1_country_code .        } group by ?t1_country_code   having(count( *)  > 50)"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the total number of tours for each ranking date.",
        "query": "SELECT (sum( ?T1_tours) as ?aggregation_T1_tours_181 ) ?T1_ranking_date WHERE { ?T1 a :rankings . ?T1 :rankings\\#tours ?T1_tours . ?T1 :rankings\\#ranking_date ?T1_ranking_date .        } GROUP BY ?T1_ranking_date"
    },
    {
        "kg_name": "wta_1",
        "question": "How many total tours were there for each ranking date?",
        "query": "SELECT (sum( ?T1_tours) as ?aggregation_T1_tours_181 ) ?T1_ranking_date WHERE { ?T1 a :rankings . ?T1 :rankings\\#tours ?T1_tours . ?T1 :rankings\\#ranking_date ?T1_ranking_date .        } GROUP BY ?T1_ranking_date"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the number of matches happened in each year.",
        "query": "select (count( *) as ?aggregation_all) ?t1_year where { ?t1 a :matches . ?t1 :matches\\#year ?t1_year .        } group by ?t1_year"
    },
    {
        "kg_name": "wta_1",
        "question": "How many matches were played in each year?",
        "query": "select (count( *) as ?aggregation_all) ?t1_year where { ?t1 a :matches . ?t1 :matches\\#year ?t1_year .        } group by ?t1_year"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the name and rank of the 3 youngest winners across all matches.",
        "query": "SELECT DISTINCT ?T1_winner_name ?T1_winner_rank ?T1_winner_age WHERE { ?T1 a :matches . ?T1 :matches\\#winner_name ?T1_winner_name . ?T1 :matches\\#winner_rank ?T1_winner_rank . ?T1 :matches\\#winner_age ?T1_winner_age . ?T1 :matches\\#winner_age ?T1_winner_age .        }   ORDER BY ASC (?T1_winner_age) LIMIT 3"
    },
    {
        "kg_name": "wta_1",
        "question": "What are the names and ranks of the three youngest winners across all matches?",
        "query": "SELECT DISTINCT ?T1_winner_name ?T1_winner_rank ?T1_winner_age WHERE { ?T1 a :matches . ?T1 :matches\\#winner_name ?T1_winner_name . ?T1 :matches\\#winner_rank ?T1_winner_rank . ?T1 :matches\\#winner_age ?T1_winner_age . ?T1 :matches\\#winner_age ?T1_winner_age .        }   ORDER BY ASC (?T1_winner_age) LIMIT 3"
    },
    {
        "kg_name": "wta_1",
        "question": "How many different winners both participated in the WTA Championships and were left handed?",
        "query": "select distinct (count(distinct ?t1_winner_name) as ?aggregation_t1_winner_name_89 ) where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#tourney_name ?t1_tourney_name . ?t1 :matches\\#winner_hand ?t1_winner_hand . FILTER(?t1_tourney_name = 'WTA Championships' && ?t1_winner_hand = 'L') .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the number of left handed winners who participated in the WTA Championships.",
        "query": "select distinct (count(distinct ?t1_winner_name) as ?aggregation_t1_winner_name_89 ) where { ?t1 a :matches . ?t1 :matches\\#winner_name ?t1_winner_name . ?t1 :matches\\#tourney_name ?t1_tourney_name . ?t1 :matches\\#winner_hand ?t1_winner_hand . FILTER(?t1_tourney_name = 'WTA Championships' && ?t1_winner_hand = 'L') .        }"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "query": "select ?t1_first_name ?t1_country_code ?t1_birth_date where { ?t1 a :players . ?t2 a :matches . ?t2 :matches\\#ref-winner_id ?t1 .  ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#birth_date ?t1_birth_date . ?t2 :matches\\#winner_rank_points ?t2_winner_rank_points .        }   order by desc (?t2_winner_rank_points) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "query": "select ?t1_first_name ?t1_country_code ?t1_birth_date where { ?t1 a :players . ?t2 a :matches . ?t2 :matches\\#ref-winner_id ?t1 .  ?t1 :players\\#first_name ?t1_first_name . ?t1 :players\\#country_code ?t1_country_code . ?t1 :players\\#birth_date ?t1_birth_date . ?t2 :matches\\#winner_rank_points ?t2_winner_rank_points .        }   order by desc (?t2_winner_rank_points) limit 1"
    },
    {
        "kg_name": "wta_1",
        "question": "Find the number of players for each hand type.",
        "query": "SELECT (count( *) as ?aggregation_all) ?T1_hand WHERE { ?T1 a :players . ?T1 :players\\#hand ?T1_hand .        } GROUP BY ?T1_hand"
    },
    {
        "kg_name": "wta_1",
        "question": "How many players are there for each hand type?",
        "query": "SELECT (count( *) as ?aggregation_all) ?T1_hand WHERE { ?T1 a :players . ?T1 :players\\#hand ?T1_hand .        } GROUP BY ?T1_hand"
    },
    {
        "kg_name": "battle_death",
        "question": "How many ships ended up being 'Captured'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :ship . ?t1 :ship\\#disposition_of_ship ?t1_disposition_of_ship . FILTER(?t1_disposition_of_ship = 'Captured') .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "query": "select ?t1_name ?t1_tonnage where { ?t1 a :ship . ?t1 :ship\\#name ?t1_name . ?t1 :ship\\#tonnage ?t1_tonnage . ?t1 :ship\\#name ?t1_name .        }  order by desc (?t1_name)"
    },
    {
        "kg_name": "battle_death",
        "question": "List the name, date and result of each battle.",
        "query": "select ?t1_name ?t1_date where { ?t1 a :battle . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#date ?t1_date .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What is maximum and minimum death toll caused each time?",
        "query": "select (max( ?t1_killed) as ?aggregation_t1_killed_150 ) (min( ?t1_killed) as ?aggregation_t1_killed_146 ) where { ?t1 a :death . ?t1 :death\\#killed ?t1_killed . ?t1 :death\\#killed ?t1_killed .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What is the average number of injuries caused each time?",
        "query": "select (avg( ?t1_injured) as ?aggregation_t1_injured_63 ) where { ?t1 a :death . ?t1 :death\\#injured ?t1_injured .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "query": "select ?t1_killed ?t1_injured where { ?t1 a :death . ?t2 a :ship . ?t1 :death\\#ref-caused_by_ship_id ?t2 .  ?t1 :death\\#killed ?t1_killed . ?t1 :death\\#injured ?t1_injured . ?t2 :ship\\#tonnage ?t2_tonnage . FILTER(?t2_tonnage = 't') .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "query": "select ?t1_name ?t1_result where { ?t1 a :battle . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#result ?t1_result . ?t1 :battle\\#bulgarian_commander ?t1_bulgarian_commander . FILTER(?t1_bulgarian_commander != 'Boril') .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "query": "select distinct ?t1_id ?t1_name where { ?t1 a :battle . ?t2 a :ship . ?t2 :ship\\#ref-lost_in_battle ?t1 .  ?t1 :battle\\#id ?t1_id . ?t1 :battle\\#name ?t1_name . ?t2 :ship\\#ship_type ?t2_ship_type . FILTER(?t2_ship_type = 'Brig') .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "query": "select ?t1_id ?t1_name where { ?t1 a :battle . ?t2 a :ship . ?t2 :ship\\#ref-lost_in_battle ?t1 .  ?t1 :battle\\#id ?t1_id . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#id ?t1_id . ?t3 :death\\#killed ?t3_killed . ?t3 a :death . ?t3 :death\\#ref-caused_by_ship_id ?t2 .  ?t1 :battle\\#id ?t1_id . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#id ?t1_id . ?t3 :death\\#killed ?t3_killed .        } group by ?t1_id ?t1_name   having(sum( ?t3_killed)  > 10)"
    },
    {
        "kg_name": "battle_death",
        "question": "What is the ship id and name that caused most total injuries?",
        "query": "SELECT ?T1_id (count( *) as ?aggregation_all) ?T1_name WHERE { ?T1 a :ship . ?T2 a :death . ?T2 :death\\#ref-caused_by_ship_id ?T1 .  ?T1 :ship\\#id ?T1_id . ?T1 :ship\\#name ?T1_name . ?T1 :ship\\#id ?T1_id .        } GROUP BY ?T1_id ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "query": "select ?t1_name where { ?t1 a :battle . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#bulgarian_commander ?t1_bulgarian_commander . ?t1 :battle\\#latin_commander ?t1_latin_commander . FILTER(?t1_bulgarian_commander = 'Kaloyan' && ?t1_latin_commander = 'Baldwin I') .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "How many different results are there for the battles?",
        "query": "select distinct (count(distinct ?t1_result) as ?aggregation_t1_result_63 ) where { ?t1 a :battle . ?t1 :battle\\#result ?t1_result .        }"
    },
    {
        "kg_name": "battle_death",
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :battle . ?t1 :battle\\#id ?t1_id .     Filter not exists {{select ?t22_lost_in_battle where { ?t22 a :ship . ?t22 :ship\\#lost_in_battle ?t22_lost_in_battle . ?t22 :ship\\#tonnage ?t22_tonnage . FILTER(?t22_tonnage = '225') .        }    } FILTER (?t1_id in (?t22_lost_in_battle))}  }"
    },
    {
        "kg_name": "battle_death",
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "query": "select distinct ?t1_name ?t1_date where { ?t1 a :battle . ?t2 a :ship . ?t2 :ship\\#ref-lost_in_battle ?t1 .  ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#date ?t1_date . ?t2 :ship\\#name ?t2_name . FILTER(?t2_name = 'Lettice') . FILTER (?t1_name in (?t3_name)) . FILTER (?t1_date in (?t3_date)) .   ?t3 a :battle . ?t4 a :ship . ?t4 :ship\\#ref-lost_in_battle ?t3 .  ?t3 :battle\\#name ?t3_name . ?t3 :battle\\#date ?t3_date . ?t4 :ship\\#name ?t4_name .  FILTER(?t4_name = 'HMS Atalanta') .             }"
    },
    {
        "kg_name": "battle_death",
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "query": "SELECT distinct?col1?col2?col3 WHERE { { select (?t1_name as ?col1) (?t1_result as ?col2) (?t1_bulgarian_commander as ?col3) where { ?t1 a :battle . ?t1 :battle\\#name ?t1_name . ?t1 :battle\\#result ?t1_result . ?t1 :battle\\#bulgarian_commander ?t1_bulgarian_commander .   }}  MINUS {select (?t2_name as ?col1) (?t2_result as ?col2) (?t2_bulgarian_commander as ?col3) where { ?t2 a :battle . ?t3 a :ship . ?t3 :ship\\#ref-lost_in_battle ?t2 .  ?t2 :battle\\#name ?t2_name . ?t2 :battle\\#result ?t2_result . ?t2 :battle\\#bulgarian_commander ?t2_bulgarian_commander . ?t3 :ship\\#location ?t3_location . FILTER(?t3_location = 'English Channel') .        }     } }"
    },
    {
        "kg_name": "battle_death",
        "question": "What are the notes of the death events which has substring 'East'?",
        "query": "select ?t1_note where { ?t1 a :death . ?t1 :death\\#note ?t1_note . ?t1 :death\\#note ?t1_note . FILTER(contains (?t1_note, 'East')) .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "what are all the addresses including line 1 and line 2?",
        "query": "select ?t1_line_1 ?t1_line_2 where { ?t1 a :addresses . ?t1 :addresses\\#line_1 ?t1_line_1 . ?t1 :addresses\\#line_2 ?t1_line_2 .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the first and second line for all addresses?",
        "query": "select ?t1_line_1 ?t1_line_2 where { ?t1 a :addresses . ?t1 :addresses\\#line_1 ?t1_line_1 . ?t1 :addresses\\#line_2 ?t1_line_2 .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many courses in total are listed?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :courses .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many courses are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :courses .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How is the math course described?",
        "query": "select ?t1_course_description where { ?t1 a :courses . ?t1 :courses\\#course_description ?t1_course_description . ?t1 :courses\\#course_name ?t1_course_name . FILTER(?t1_course_name = 'math') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the descriptions for all the math courses?",
        "query": "select ?t1_course_description where { ?t1 a :courses . ?t1 :courses\\#course_description ?t1_course_description . ?t1 :courses\\#course_name ?t1_course_name . FILTER(?t1_course_name = 'math') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "query": "select ?t1_zip_postcode where { ?t1 a :addresses . ?t1 :addresses\\#zip_postcode ?t1_zip_postcode . ?t1 :addresses\\#city ?t1_city . FILTER(?t1_city = 'Port Chelsea') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the zip code for Port Chelsea?",
        "query": "select ?t1_zip_postcode where { ?t1 a :addresses . ?t1 :addresses\\#zip_postcode ?t1_zip_postcode . ?t1 :addresses\\#city ?t1_city . FILTER(?t1_city = 'Port Chelsea') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Which department offers the most number of degrees? List department name and id.",
        "query": "SELECT ?T1_department_name (count( *) as ?aggregation_all) ?T2_department_id WHERE { ?T1 a :departments . ?T2 a :degree_programs . ?T2 :degree_programs\\#ref-department_id ?T1 .  ?T1 :departments\\#department_name ?T1_department_name . ?T2 :degree_programs\\#department_id ?T2_department_id .        } GROUP BY ?T1_department_name ?T2_department_id  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the name and id of the department with the most number of degrees ?",
        "query": "SELECT ?T1_department_name (count( *) as ?aggregation_all) ?T2_department_id WHERE { ?T1 a :departments . ?T2 a :degree_programs . ?T2 :degree_programs\\#ref-department_id ?T1 .  ?T1 :departments\\#department_name ?T1_department_name . ?T2 :degree_programs\\#department_id ?T2_department_id .        } GROUP BY ?T1_department_name ?T2_department_id  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many departments offer any degree?",
        "query": "select distinct (count(distinct ?t1_department_id) as ?aggregation_t1_department_id_61 ) where { ?t1 a :degree_programs . ?t1 :degree_programs\\#department_id ?t1_department_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many different departments offer degrees?",
        "query": "select distinct (count(distinct ?t1_department_id) as ?aggregation_t1_department_id_61 ) where { ?t1 a :degree_programs . ?t1 :degree_programs\\#department_id ?t1_department_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many different degree names are offered?",
        "query": "select distinct (count(distinct ?t1_degree_summary_name) as ?aggregation_t1_degree_summary_name_44 ) where { ?t1 a :degree_programs . ?t1 :degree_programs\\#degree_summary_name ?t1_degree_summary_name .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many different degrees are offered?",
        "query": "select distinct (count(distinct ?t1_degree_summary_name) as ?aggregation_t1_degree_summary_name_44 ) where { ?t1 a :degree_programs . ?t1 :degree_programs\\#degree_summary_name ?t1_degree_summary_name .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many degrees does the engineering department offer?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :degree_programs . ?t2 a :departments . ?t1 :degree_programs\\#ref-department_id ?t2 .  ?t2 :departments\\#department_name ?t2_department_name . FILTER(?t2_department_name = 'engineer') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many degrees does the engineering department have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :degree_programs . ?t2 a :departments . ?t1 :degree_programs\\#ref-department_id ?t2 .  ?t2 :departments\\#department_name ?t2_department_name . FILTER(?t2_department_name = 'engineer') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names and descriptions of all the sections?",
        "query": "select ?t1_section_name ?t1_section_description where { ?t1 a :sections . ?t1 :sections\\#section_name ?t1_section_name . ?t1 :sections\\#section_description ?t1_section_description .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names and descriptions for all the sections?",
        "query": "select ?t1_section_name ?t1_section_description where { ?t1 a :sections . ?t1 :sections\\#section_name ?t1_section_name . ?t1 :sections\\#section_description ?t1_section_description .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names and id of courses having at most 2 sections?",
        "query": "select ?t1_course_name ?t1_course_id where { ?t1 a :courses . ?t2 a :sections . ?t2 :sections\\#ref-course_id ?t1 .  ?t1 :courses\\#course_name ?t1_course_name . ?t1 :courses\\#course_id ?t1_course_id . ?t1 :courses\\#course_id ?t1_course_id .        } group by ?t1_course_name ?t1_course_id   having(count( *)  <= 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names and ids of every course with less than 2 sections?",
        "query": "select ?t1_course_name ?t1_course_id where { ?t1 a :courses . ?t2 a :sections . ?t2 :sections\\#ref-course_id ?t1 .  ?t1 :courses\\#course_name ?t1_course_name . ?t1 :courses\\#course_id ?t1_course_id . ?t1 :courses\\#course_id ?t1_course_id .        } group by ?t1_course_name ?t1_course_id   having(count( *)  <= 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "List the section_name in reversed lexicographical order.",
        "query": "select ?t1_section_name where { ?t1 a :sections . ?t1 :sections\\#section_name ?t1_section_name . ?t1 :sections\\#section_name ?t1_section_name .        }  order by desc (?t1_section_name)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names of the sections in reverse alphabetical order?",
        "query": "select ?t1_section_name where { ?t1 a :sections . ?t1 :sections\\#section_name ?t1_section_name . ?t1 :sections\\#section_name ?t1_section_name .        }  order by desc (?t1_section_name)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "query": "SELECT ?T1_semester_name (count( *) as ?aggregation_all) ?T1_semester_id WHERE { ?T1 a :semesters . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-semester_id ?T1 .  ?T1 :semesters\\#semester_name ?T1_semester_name . ?T1 :semesters\\#semester_id ?T1_semester_id . ?T1 :semesters\\#semester_id ?T1_semester_id .        } GROUP BY ?T1_semester_name ?T1_semester_id  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "query": "SELECT ?T1_semester_name (count( *) as ?aggregation_all) ?T1_semester_id WHERE { ?T1 a :semesters . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-semester_id ?T1 .  ?T1 :semesters\\#semester_name ?T1_semester_name . ?T1 :semesters\\#semester_id ?T1_semester_id . ?T1 :semesters\\#semester_id ?T1_semester_id .        } GROUP BY ?T1_semester_name ?T1_semester_id  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the description of the department whose name has the substring the computer?",
        "query": "select ?t1_department_description where { ?t1 a :departments . ?t1 :departments\\#department_description ?t1_department_description . ?t1 :departments\\#department_name ?t1_department_name . FILTER(contains (?t1_department_name, 'computer')) .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the department description for the one whose name has the word computer?",
        "query": "select ?t1_department_description where { ?t1 a :departments . ?t1 :departments\\#department_description ?t1_department_description . ?t1 :departments\\#department_name ?t1_department_name . FILTER(contains (?t1_department_name, 'computer')) .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id where { ?t1 a :students . ?t2 a :student_enrolment . ?t2 :student_enrolment\\#ref-student_id ?t1 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t1 :students\\#student_id ?t1_student_id . ?t3 a :degree_programs . ?t2 :student_enrolment\\#ref-degree_program_id ?t3 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t1 :students\\#student_id ?t1_student_id .        } group by ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id   having(count( *)  = 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id where { ?t1 a :students . ?t2 a :student_enrolment . ?t2 :student_enrolment\\#ref-student_id ?t1 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t1 :students\\#student_id ?t1_student_id . ?t3 a :degree_programs . ?t2 :student_enrolment\\#ref-degree_program_id ?t3 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t1 :students\\#student_id ?t1_student_id .        } group by ?t1_first_name ?t1_middle_name ?t1_last_name ?t1_student_id   having(count( *)  = 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "query": "select distinct ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t2 a :student_enrolment . ?t2 :student_enrolment\\#ref-student_id ?t1 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t3 :degree_programs\\#degree_summary_name ?t3_degree_summary_name . ?t3 a :degree_programs . ?t2 :student_enrolment\\#ref-degree_program_id ?t3 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t3 :degree_programs\\#degree_summary_name ?t3_degree_summary_name . FILTER(?t3_degree_summary_name = 'Bachelor') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "query": "select distinct ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t2 a :student_enrolment . ?t2 :student_enrolment\\#ref-student_id ?t1 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t3 :degree_programs\\#degree_summary_name ?t3_degree_summary_name . ?t3 a :degree_programs . ?t2 :student_enrolment\\#ref-degree_program_id ?t3 .  ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#student_id ?t1_student_id . ?t3 :degree_programs\\#degree_summary_name ?t3_degree_summary_name . FILTER(?t3_degree_summary_name = 'Bachelor') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Find the kind of program which most number of students are enrolled in?",
        "query": "SELECT ?T1_degree_summary_name (count( *) as ?aggregation_all) WHERE { ?T1 a :degree_programs . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-degree_program_id ?T1 .  ?T1 :degree_programs\\#degree_summary_name ?T1_degree_summary_name . ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id .        } GROUP BY ?T1_degree_summary_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "query": "SELECT ?T1_degree_summary_name (count( *) as ?aggregation_all) WHERE { ?T1 a :degree_programs . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-degree_program_id ?T1 .  ?T1 :degree_programs\\#degree_summary_name ?T1_degree_summary_name . ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id .        } GROUP BY ?T1_degree_summary_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "query": "SELECT ?T1_degree_program_id (count( *) as ?aggregation_all) ?T1_degree_summary_name WHERE { ?T1 a :degree_programs . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-degree_program_id ?T1 .  ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id . ?T1 :degree_programs\\#degree_summary_name ?T1_degree_summary_name . ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id .        } GROUP BY ?T1_degree_program_id ?T1_degree_summary_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "query": "SELECT ?T1_degree_program_id (count( *) as ?aggregation_all) ?T1_degree_summary_name WHERE { ?T1 a :degree_programs . ?T3 a :student_enrolment . ?T3 :student_enrolment\\#ref-degree_program_id ?T1 .  ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id . ?T1 :degree_programs\\#degree_summary_name ?T1_degree_summary_name . ?T1 :degree_programs\\#degree_program_id ?T1_degree_program_id .        } GROUP BY ?T1_degree_program_id ?T1_degree_summary_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id",
        "query": "SELECT ?T1_student_id ?T1_first_name ?T1_middle_name ?T1_last_name (count(*) as ?agg) ?T2_student_enrolment_id WHERE {\n    ?T1 a :students .\n    ?T2 a :student_enrolment .\n    ?T2 :student_enrolment\\#ref-student_id ?T1 .\n    ?T1 :students\\#student_id ?T1_student_id .\n    ?T1 :students\\#first_name ?T1_first_name .\n    ?T1 :students\\#middle_name ?T1_middle_name .\n    ?T1 :students\\#last_name ?T1_last_name .\n    ?T2 :student_enrolment\\#student_enrolment_id ?T2_student_enrolment_id .\n}GROUP BY ?T1_student_id ?T1_first_name ?T1_middle_name ?T1_last_name ?T2_student_enrolment_id ORDER BY DESC (?agg)  LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "query": "SELECT ?T1_student_id ?T1_first_name ?T1_middle_name ?T1_last_name (count(*) as ?agg) ?T2_student_enrolment_id WHERE {\n    ?T1 a :students .\n    ?T2 a :student_enrolment .\n    ?T2 :student_enrolment\\#ref-student_id ?T1 .\n    ?T1 :students\\#student_id ?T1_student_id .\n    ?T1 :students\\#first_name ?T1_first_name .\n    ?T1 :students\\#middle_name ?T1_middle_name .\n    ?T1 :students\\#last_name ?T1_last_name .\n    ?T2 :student_enrolment\\#student_enrolment_id ?T2_student_enrolment_id .\n}GROUP BY ?T1_student_id ?T1_first_name ?T1_middle_name ?T1_last_name ?T2_student_enrolment_id ORDER BY DESC (?agg)  LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "query": "select ?t1_semester_name where { ?t1 a :semesters . ?t1 :semesters\\#semester_name ?t1_semester_name . ?t1 :semesters\\#semester_id ?t1_semester_id .     Filter not exists {{select ?t22_semester_id where { ?t22 a :student_enrolment . ?t22 :student_enrolment\\#semester_id ?t22_semester_id .        }    } FILTER (?t1_semester_id in (?t22_semester_id))}  }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the name of the semester with no students enrolled?",
        "query": "select ?t1_semester_name where { ?t1 a :semesters . ?t1 :semesters\\#semester_name ?t1_semester_name . ?t1 :semesters\\#semester_id ?t1_semester_id .     Filter not exists {{select ?t22_semester_id where { ?t22 a :student_enrolment . ?t22 :student_enrolment\\#semester_id ?t22_semester_id .        }    } FILTER (?t1_semester_id in (?t22_semester_id))}  }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "query": "select distinct ?t1_course_name where { ?t1 a :courses . ?t2 a :student_enrolment_courses . ?t2 :student_enrolment_courses\\#ref-course_id ?t1 .  ?t1 :courses\\#course_name ?t1_course_name . ?t1 :courses\\#course_id ?t1_course_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the names of all courses that have some students enrolled?",
        "query": "select distinct ?t1_course_name where { ?t1 a :courses . ?t2 a :student_enrolment_courses . ?t2 :student_enrolment_courses\\#ref-course_id ?t1 .  ?t1 :courses\\#course_name ?t1_course_name . ?t1 :courses\\#course_id ?t1_course_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What's the name of the course with most number of enrollments?",
        "query": "SELECT ?T1_course_name (count( *) as ?aggregation_all) WHERE { ?T1 a :courses . ?T2 a :student_enrolment_courses . ?T2 :student_enrolment_courses\\#ref-course_id ?T1 .  ?T1 :courses\\#course_name ?T1_course_name . ?T1 :courses\\#course_id ?T1_course_id .        } GROUP BY ?T1_course_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the name of the course with the most students enrolled?",
        "query": "SELECT ?T1_course_name (count( *) as ?aggregation_all) WHERE { ?T1 a :courses . ?T2 a :student_enrolment_courses . ?T2 :student_enrolment_courses\\#ref-course_id ?T1 .  ?T1 :courses\\#course_name ?T1_course_name . ?T1 :courses\\#course_id ?T1_course_id .        } GROUP BY ?T1_course_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_last_name as ?col1) where { ?t1 a :students . ?t2 a :addresses . ?t1 :students\\#ref-permanent_address_id ?t2 .  ?t1 :students\\#last_name ?t1_last_name . ?t2 :addresses\\#state_province_county ?t2_state_province_county . FILTER(?t2_state_province_county = 'NorthCarolina') .   }}  MINUS {select distinct (?t3_last_name as ?col1) where { ?t3 a :students . ?t4 a :student_enrolment . ?t4 :student_enrolment\\#ref-student_id ?t3 .  ?t3 :students\\#last_name ?t3_last_name . ?t3 :students\\#student_id ?t3_student_id .        }     } }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_last_name as ?col1) where { ?t1 a :students . ?t2 a :addresses . ?t1 :students\\#ref-permanent_address_id ?t2 .  ?t1 :students\\#last_name ?t1_last_name . ?t2 :addresses\\#state_province_county ?t2_state_province_county . FILTER(?t2_state_province_county = 'NorthCarolina') .   }}  MINUS {select distinct (?t3_last_name as ?col1) where { ?t3 a :students . ?t4 a :student_enrolment . ?t4 :student_enrolment\\#ref-student_id ?t3 .  ?t3 :students\\#last_name ?t3_last_name . ?t3 :students\\#student_id ?t3_student_id .        }     } }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Show the date and id of the transcript with at least 2 course results.",
        "query": "SELECT ?T1_transcript_date ?T2_transcript_id WHERE { ?T1 a :transcripts . ?T2 a :transcript_contents . ?T2 :transcript_contents\\#ref-transcript_id ?T1 .  ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T2 :transcript_contents\\#transcript_id ?T2_transcript_id .        } GROUP BY ?T1_transcript_date ?T2_transcript_id   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the date and id of the transcript with at least 2 courses listed?",
        "query": "SELECT ?T1_transcript_date ?T2_transcript_id WHERE { ?T1 a :transcripts . ?T2 a :transcript_contents . ?T2 :transcript_contents\\#ref-transcript_id ?T1 .  ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T2 :transcript_contents\\#transcript_id ?T2_transcript_id .        } GROUP BY ?T1_transcript_date ?T2_transcript_id   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "query": "select ?t1_cell_mobile_number where { ?t1 a :students . ?t1 :students\\#cell_mobile_number ?t1_cell_mobile_number . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#last_name ?t1_last_name . FILTER(?t1_first_name = 'Timmothy' && ?t1_last_name = 'Ward') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the mobile phone number of the student named Timmothy Ward ?",
        "query": "select ?t1_cell_mobile_number where { ?t1 a :students . ?t1 :students\\#cell_mobile_number ?t1_cell_mobile_number . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#last_name ?t1_last_name . FILTER(?t1_first_name = 'Timmothy' && ?t1_last_name = 'Ward') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#date_first_registered ?t1_date_first_registered .        }   order by asc (?t1_date_first_registered) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the first, middle, and last name of the first student to register?",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#date_first_registered ?t1_date_first_registered .        }   order by asc (?t1_date_first_registered) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#date_left ?t1_date_left .        }   order by asc (?t1_date_left) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the first, middle, and last name of the earliest school graduate?",
        "query": "select ?t1_first_name ?t1_middle_name ?t1_last_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#middle_name ?t1_middle_name . ?t1 :students\\#last_name ?t1_last_name . ?t1 :students\\#date_left ?t1_date_left .        }   order by asc (?t1_date_left) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "query": "select ?t1_first_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#current_address_id ?t1_current_address_id . ?t1 :students\\#permanent_address_id ?t1_permanent_address_id . FILTER(?t1_current_address_id !=?t1_permanent_address_id) .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "query": "select ?t1_first_name where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#current_address_id ?t1_current_address_id . ?t1 :students\\#permanent_address_id ?t1_permanent_address_id . FILTER(?t1_current_address_id !=?t1_permanent_address_id) .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "query": "SELECT ?T1_address_id (count( *) as ?aggregation_all) ?T1_line_1 ?T1_line_2 WHERE { ?T1 a :addresses . ?T3 a :students . ?T3 :students\\#ref-permanent_address_id ?T1 .  ?T1 :addresses\\#address_id ?T1_address_id . ?T1 :addresses\\#line_1 ?T1_line_1 . ?T1 :addresses\\#line_2 ?T1_line_2 . ?T1 :addresses\\#address_id ?T1_address_id .        } GROUP BY ?T1_address_id ?T1_line_1 ?T1_line_2  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "query": "SELECT ?T1_address_id (count( *) as ?aggregation_all) ?T1_line_1 ?T1_line_2 WHERE { ?T1 a :addresses . ?T3 a :students . ?T3 :students\\#ref-permanent_address_id ?T1 .  ?T1 :addresses\\#address_id ?T1_address_id . ?T1 :addresses\\#line_1 ?T1_line_1 . ?T1 :addresses\\#line_2 ?T1_line_2 . ?T1 :addresses\\#address_id ?T1_address_id .        } GROUP BY ?T1_address_id ?T1_line_1 ?T1_line_2  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "When was the earliest transcript printed?",
        "query": "SELECT (min( ?T1_transcript_date) as ?aggregation_T1_transcript_date_117 ) WHERE { ?T1 a :transcripts . ?T1 :transcripts\\#transcript_date ?T1_transcript_date .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the date of the earliest transcript issued ?",
        "query": "SELECT (min( ?T1_transcript_date) as ?aggregation_T1_transcript_date_117 ) WHERE { ?T1 a :transcripts . ?T1 :transcripts\\#transcript_date ?T1_transcript_date .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "When is the first transcript released? List the date and details.",
        "query": "SELECT ?T1_transcript_date ?T1_other_details WHERE { ?T1 a :transcripts . ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T1 :transcripts\\#other_details ?T1_other_details . ?T1 :transcripts\\#transcript_date ?T1_transcript_date .        }   ORDER BY ASC (?T1_transcript_date) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "query": "SELECT ?T1_transcript_date ?T1_other_details WHERE { ?T1 a :transcripts . ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T1 :transcripts\\#other_details ?T1_other_details . ?T1 :transcripts\\#transcript_date ?T1_transcript_date .        }   ORDER BY ASC (?T1_transcript_date) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many transcripts are released?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :transcripts .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many transcripts are listed?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :transcripts .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the last transcript release date?",
        "query": "select ?t1_transcript_date where { ?t1 a :transcripts . ?t1 :transcripts\\#transcript_date ?t1_transcript_date . ?t1 :transcripts\\#transcript_date ?t1_transcript_date .        }   order by desc (?t1_transcript_date) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "When was the last transcript released?",
        "query": "select ?t1_transcript_date where { ?t1 a :transcripts . ?t1 :transcripts\\#transcript_date ?t1_transcript_date . ?t1 :transcripts\\#transcript_date ?t1_transcript_date .        }   order by desc (?t1_transcript_date) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "query": "select (count( *) as ?aggregation_all) ?t1_student_course_id where { ?t1 a :transcript_contents . ?t1 :transcript_contents\\#student_course_id ?t1_student_course_id .        } group by ?t1_student_course_id  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "query": "select (count( *) as ?aggregation_all) ?t1_student_course_id where { ?t1 a :transcript_contents . ?t1 :transcript_contents\\#student_course_id ?t1_student_course_id .        } group by ?t1_student_course_id  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Show the date of the transcript which shows the least number of results, also list the id.",
        "query": "SELECT ?T1_transcript_date (count( *) as ?aggregation_all) ?T2_transcript_id WHERE { ?T1 a :transcripts . ?T2 a :transcript_contents . ?T2 :transcript_contents\\#ref-transcript_id ?T1 .  ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T2 :transcript_contents\\#transcript_id ?T2_transcript_id .        } GROUP BY ?T2_transcript_id ?T1_transcript_date ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the date and id of the transcript with the least number of results?",
        "query": "SELECT ?T1_transcript_date (count( *) as ?aggregation_all) ?T2_transcript_id WHERE { ?T1 a :transcripts . ?T2 a :transcript_contents . ?T2 :transcript_contents\\#ref-transcript_id ?T1 .  ?T1 :transcripts\\#transcript_date ?T1_transcript_date . ?T2 :transcript_contents\\#transcript_id ?T2_transcript_id .        } GROUP BY ?T2_transcript_id ?T1_transcript_date ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "query": "select distinct ?t1_semester_id where { \n    ?t1 a :student_enrolment . \n    ?t2 a :degree_programs . \n    ?t1 :student_enrolment\\#ref-degree_program_id ?t2 . \n    ?t1 :student_enrolment\\#semester_id ?t1_semester_id . \n    ?t2 :degree_programs\\#degree_summary_name ?t2_degree_summary_name . \n    FILTER(?t2_degree_summary_name = 'Master') . \n    FILTER (?t1_semester_id in (?t3_semester_id)) .  \n     ?t3 a :student_enrolment . ?t4 a :degree_programs . ?t3 :student_enrolment\\#ref-degree_program_id ?t4 .  ?t3 :student_enrolment\\#semester_id ?t3_semester_id . ?t4 :degree_programs\\#degree_summary_name ?t4_degree_summary_name . FILTER(?t4_degree_summary_name = 'Bachelor') .        } "
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "query": "select distinct ?t1_semester_id where { \n    ?t1 a :student_enrolment . \n    ?t2 a :degree_programs . \n    ?t1 :student_enrolment\\#ref-degree_program_id ?t2 . \n    ?t1 :student_enrolment\\#semester_id ?t1_semester_id . \n    ?t2 :degree_programs\\#degree_summary_name ?t2_degree_summary_name . \n    FILTER(?t2_degree_summary_name = 'Master') . \n    FILTER (?t1_semester_id in (?t3_semester_id)) .  \n     ?t3 a :student_enrolment . ?t4 a :degree_programs . ?t3 :student_enrolment\\#ref-degree_program_id ?t4 .  ?t3 :student_enrolment\\#semester_id ?t3_semester_id . ?t4 :degree_programs\\#degree_summary_name ?t4_degree_summary_name . FILTER(?t4_degree_summary_name = 'Bachelor') .        } "
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "How many different addresses do the students currently live?",
        "query": "select distinct (count(distinct ?t1_current_address_id) as ?aggregation_t1_current_address_id_150 ) where { ?t1 a :students . ?t1 :students\\#current_address_id ?t1_current_address_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the different addresses that have students living there?",
        "query": "select distinct (count(distinct ?t1_current_address_id) as ?aggregation_t1_current_address_id_150 ) where { ?t1 a :students . ?t1 :students\\#current_address_id ?t1_current_address_id .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "List all the student details in reversed lexicographical order.",
        "query": "select ?t1_other_student_details where { ?t1 a :students . ?t1 :students\\#other_student_details ?t1_other_student_details . ?t1 :students\\#other_student_details ?t1_other_student_details .        }  order by desc (?t1_other_student_details)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What other details can you tell me about students in reverse alphabetical order?",
        "query": "select ?t1_other_student_details where { ?t1 a :students . ?t1 :students\\#other_student_details ?t1_other_student_details . ?t1 :students\\#other_student_details ?t1_other_student_details .        }  order by desc (?t1_other_student_details)"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Describe the section h.",
        "query": "select ?t1_section_description where { ?t1 a :sections . ?t1 :sections\\#section_description ?t1_section_description . ?t1 :sections\\#section_name ?t1_section_name . FILTER(?t1_section_name = 'h') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What is the description for the section named h?",
        "query": "select ?t1_section_description where { ?t1 a :sections . ?t1 :sections\\#section_description ?t1_section_description . ?t1 :sections\\#section_name ?t1_section_name . FILTER(?t1_section_name = 'h') .        }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a :students . ?t2 a :addresses . ?t1 :students\\#ref-permanent_address_id ?t2 .  ?t1 :students\\#first_name ?t1_first_name . ?t2 :addresses\\#country ?t2_country . FILTER(?t2_country = 'Haiti') .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#cell_mobile_number ?t1_cell_mobile_number . FILTER(?t1_cell_mobile_number = '09700166582') .        }      } }"
    },
    {
        "kg_name": "student_transcripts_tracking",
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a :students . ?t2 a :addresses . ?t1 :students\\#ref-permanent_address_id ?t2 .  ?t1 :students\\#first_name ?t1_first_name . ?t2 :addresses\\#country ?t2_country . FILTER(?t2_country = 'Haiti') .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a :students . ?t1 :students\\#first_name ?t1_first_name . ?t1 :students\\#cell_mobile_number ?t1_cell_mobile_number . FILTER(?t1_cell_mobile_number = '09700166582') .        }      } }"
    },
    {
        "kg_name": "tvshow",
        "question": "List the title of all cartoons in alphabetical order.",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#title ?t1_title .        }  order by asc (?t1_title)"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the titles of the cartoons sorted alphabetically?",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#title ?t1_title .        }  order by asc (?t1_title)"
    },
    {
        "kg_name": "tvshow",
        "question": "List all cartoon directed by 'Ben Jones'.",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "How many cartoons were written by 'Joseph Kuhr'?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cartoon . ?t1 :cartoon\\#written_by ?t1_written_by . FILTER(?t1_written_by = 'Joseph Kuhr') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :cartoon . ?t1 :cartoon\\#written_by ?t1_written_by . FILTER(?t1_written_by = 'Joseph Kuhr') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "list all cartoon titles and their directors ordered by their air date",
        "query": "select ?t1_title ?t1_directed_by where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . ?t1 :cartoon\\#original_air_date ?t1_original_air_date .        }  order by asc (?t1_original_air_date)"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "query": "select ?t1_title ?t1_directed_by where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . ?t1 :cartoon\\#original_air_date ?t1_original_air_date .        }  order by asc (?t1_original_air_date)"
    },
    {
        "kg_name": "tvshow",
        "question": "List the title of all cartoon directed by 'Ben Jones' or 'Brandon Vietti'.",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . ?t1 :cartoon\\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones' || ?t1_directed_by = 'Brandon Vietti') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t1 :cartoon\\#title ?t1_title . ?t1 :cartoon\\#directed_by ?t1_directed_by . ?t1 :cartoon\\#directed_by ?t1_directed_by . FILTER(?t1_directed_by = 'Ben Jones' || ?t1_directed_by = 'Brandon Vietti') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "query": "select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#country ?t1_country .        } group by ?t1_country  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "query": "select ?t1_country (count( *) as ?aggregation_all) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#country ?t1_country .        } group by ?t1_country  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "List the number of different series names and contents in the TV Channel table.",
        "query": "select distinct (count(distinct ?t1_series_name) as ?aggregation_t1_series_name_136 ) (count(distinct ?t1_content) as ?aggregation_t1_content_102 ) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#content ?t1_content .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "How many different series and contents are listed in the TV Channel table?",
        "query": "select distinct (count(distinct ?t1_series_name) as ?aggregation_t1_series_name_136 ) (count(distinct ?t1_content) as ?aggregation_t1_content_102 ) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#content ?t1_content .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the content of TV Channel with serial name 'Sky Radio'?",
        "query": "select ?t1_content where { ?t1 a :tv_channel . ?t1 :tv_channel\\#content ?t1_content . ?t1 :tv_channel\\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the content of the series Sky Radio?",
        "query": "select ?t1_content where { ?t1 a :tv_channel . ?t1 :tv_channel\\#content ?t1_content . ?t1 :tv_channel\\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the Package Option of TV Channel with serial name 'Sky Radio'?",
        "query": "select ?t1_package_option where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "query": "select ?t1_package_option where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#series_name ?t1_series_name . FILTER(?t1_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "How many TV Channel using language English?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#language ?t1_language . FILTER(?t1_language = 'English') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "How many TV Channels use the English language?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#language ?t1_language . FILTER(?t1_language = 'English') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "query": "select ?t1_language (count( *) as ?aggregation_all)  where { ?t1 a :tv_channel . ?t1 :tv_channel\\#language ?t1_language .        } group by ?t1_language  order by asc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "query": "select ?t1_language (count( *) as ?aggregation_all) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#language ?t1_language .        } group by ?t1_language  order by asc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "List each language and the number of TV Channels using it.",
        "query": "SELECT ?T1_language (count( *) as ?aggregation_all) WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#language ?T1_language .        } GROUP BY ?T1_language"
    },
    {
        "kg_name": "tvshow",
        "question": "For each language, list the number of TV Channels that use it.",
        "query": "SELECT ?T1_language (count( *) as ?aggregation_all) WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#language ?T1_language .        } GROUP BY ?T1_language"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the TV Channel that shows the cartoon 'The Rise of the Blue Beetle!'? List the TV Channel's series name.",
        "query": "select ?t1_series_name where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t2 :cartoon\\#title ?t2_title . FILTER(?t2_title = 'The Rise of the Blue Beetle!') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the series name of the TV Channel that shows the cartoon 'The Rise of the Blue Beetle'?",
        "query": "select ?t1_series_name where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t2 :cartoon\\#title ?t2_title . FILTER(?t2_title = 'The Rise of the Blue Beetle!') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "List the title of all  Cartoons showed on TV Channel with series name 'Sky Radio'.",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t2 a :tv_channel . ?t1 :cartoon\\#ref-channel ?t2 .  ?t1 :cartoon\\#title ?t1_title . ?t2 :tv_channel\\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the title of all the cartools that are on the TV Channel with the series name 'Sky Radio'?",
        "query": "select ?t1_title where { ?t1 a :cartoon . ?t2 a :tv_channel . ?t1 :cartoon\\#ref-channel ?t2 .  ?t1 :cartoon\\#title ?t1_title . ?t2 :tv_channel\\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "List the Episode of all TV series sorted by rating.",
        "query": "select ?t1_episode where { ?t1 a :tv_series . ?t1 :tv_series\\#episode ?t1_episode . ?t1 :tv_series\\#rating ?t1_rating .        }  order by asc (?t1_rating)"
    },
    {
        "kg_name": "tvshow",
        "question": "What are all of the episodes ordered by ratings?",
        "query": "select ?t1_episode where { ?t1 a :tv_series . ?t1 :tv_series\\#episode ?t1_episode . ?t1 :tv_series\\#rating ?t1_rating .        }  order by asc (?t1_rating)"
    },
    {
        "kg_name": "tvshow",
        "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
        "query": "select ?t1_episode ?t1_rating where { ?t1 a :tv_series . ?t1 :tv_series\\#episode ?t1_episode . ?t1 :tv_series\\#rating ?t1_rating . ?t1 :tv_series\\#rating ?t1_rating .        }   order by desc (?t1_rating) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "query": "select ?t1_episode ?t1_rating where { ?t1 a :tv_series . ?t1 :tv_series\\#episode ?t1_episode . ?t1 :tv_series\\#rating ?t1_rating . ?t1 :tv_series\\#rating ?t1_rating .        }   order by desc (?t1_rating) limit 1"
    },
    {
        "kg_name": "tvshow",
        "question": "What is minimum and maximum share of TV series?",
        "query": "select (max( ?t1_share) as ?aggregation_t1_share_61 ) (min( ?t1_share) as ?aggregation_t1_share_112 ) where { ?t1 a :tv_series . ?t1 :tv_series\\#share ?t1_share . ?t1 :tv_series\\#share ?t1_share .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the maximum and minimum share for the TV series?",
        "query": "select (max( ?t1_share) as ?aggregation_t1_share_61 ) (min( ?t1_share) as ?aggregation_t1_share_112 ) where { ?t1 a :tv_series . ?t1 :tv_series\\#share ?t1_share . ?t1 :tv_series\\#share ?t1_share .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the air date of TV series with Episode 'A Love of a Lifetime'?",
        "query": "select ?t1_air_date where { ?t1 a :tv_series . ?t1 :tv_series\\#air_date ?t1_air_date . ?t1 :tv_series\\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "When did the episode 'A Love of a Lifetime' air?",
        "query": "select ?t1_air_date where { ?t1 a :tv_series . ?t1 :tv_series\\#air_date ?t1_air_date . ?t1 :tv_series\\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is Weekly Rank of TV series with Episode 'A Love of a Lifetime'?",
        "query": "select ?t1_weekly_rank where { ?t1 a :tv_series . ?t1 :tv_series\\#weekly_rank ?t1_weekly_rank . ?t1 :tv_series\\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the weekly rank for the episode 'A Love of a Lifetime'?",
        "query": "select ?t1_weekly_rank where { ?t1 a :tv_series . ?t1 :tv_series\\#weekly_rank ?t1_weekly_rank . ?t1 :tv_series\\#episode ?t1_episode . FILTER(?t1_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the TV Channel of TV series with Episode 'A Love of a Lifetime'? List the TV Channel's series name.",
        "query": "select ?t1_series_name where { ?t1 a :tv_channel . ?t2 a :tv_series . ?t2 :tv_series\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t2 :tv_series\\#episode ?t2_episode . FILTER(?t2_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the name of the series that has the episode 'A Love of a Lifetime'?",
        "query": "select ?t1_series_name where { ?t1 a :tv_channel . ?t2 a :tv_series . ?t2 :tv_series\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t2 :tv_series\\#episode ?t2_episode . FILTER(?t2_episode = 'A Love of a Lifetime') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "List the Episode of all  TV series showed on TV Channel with series name 'Sky Radio'.",
        "query": "select ?t1_episode where { ?t1 a :tv_series . ?t2 a :tv_channel . ?t1 :tv_series\\#ref-channel ?t2 .  ?t1 :tv_series\\#episode ?t1_episode . ?t2 :tv_channel\\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the episode for the TV series named 'Sky Radio'?",
        "query": "select ?t1_episode where { ?t1 a :tv_series . ?t2 a :tv_channel . ?t1 :tv_series\\#ref-channel ?t2 .  ?t1 :tv_series\\#episode ?t1_episode . ?t2 :tv_channel\\#series_name ?t2_series_name . FILTER(?t2_series_name = 'Sky Radio') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "query": "select (count( *) as ?aggregation_all) ?t1_directed_by where { ?t1 a :cartoon . ?t1 :cartoon\\#directed_by ?t1_directed_by .        } group by ?t1_directed_by"
    },
    {
        "kg_name": "tvshow",
        "question": "How many cartoons did each director create?",
        "query": "select (count( *) as ?aggregation_all) ?t1_directed_by where { ?t1 a :cartoon . ?t1 :cartoon\\#directed_by ?t1_directed_by .        } group by ?t1_directed_by"
    },
    {
        "kg_name": "tvshow",
        "question": "Find the production code and channel of the most recently aired cartoon .",
        "query": "SELECT ?T1_production_code ?T1_channel WHERE { ?T1 a :cartoon . ?T1 :cartoon\\#production_code ?T1_production_code . ?T1 :cartoon\\#channel ?T1_channel . ?T1 :cartoon\\#original_air_date ?T1_original_air_date .        }   ORDER BY DESC (?T1_original_air_date) LIMIT 1"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the produdction code and channel of the most recent cartoon ?",
        "query": "SELECT ?T1_production_code ?T1_channel WHERE { ?T1 a :cartoon . ?T1 :cartoon\\#production_code ?T1_production_code . ?T1 :cartoon\\#channel ?T1_channel . ?T1 :cartoon\\#original_air_date ?T1_original_air_date .        }   ORDER BY DESC (?T1_original_air_date) LIMIT 1"
    },
    {
        "kg_name": "tvshow",
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "query": "select ?t1_package_option ?t1_series_name where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#high_definition_tv ?t1_high_definition_tv . FILTER(?t1_high_definition_tv = 'yes') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "query": "select ?t1_package_option ?t1_series_name where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#high_definition_tv ?t1_high_definition_tv . FILTER(?t1_high_definition_tv = 'yes') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "query": "select ?t1_country where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#country ?t1_country . ?t2 :cartoon\\#written_by ?t2_written_by . FILTER(?t2_written_by = 'Todd Casey') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "query": "select ?t1_country where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#country ?t1_country . ?t2 :cartoon\\#written_by ?t2_written_by . FILTER(?t2_written_by = 'Todd Casey') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_country as ?col1) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#country ?t1_country .   }}  MINUS {select (?t2_country as ?col1) where { ?t2 a :tv_channel . ?t3 a :cartoon . ?t3 :cartoon\\#ref-channel ?t2 .  ?t2 :tv_channel\\#country ?t2_country . ?t3 :cartoon\\#written_by ?t3_written_by . FILTER(?t3_written_by = 'Todd Casey') .        }     } }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_country as ?col1) where { ?t1 a :tv_channel . ?t1 :tv_channel\\#country ?t1_country .   }}  MINUS {select (?t2_country as ?col1) where { ?t2 a :tv_channel . ?t3 a :cartoon . ?t3 :cartoon\\#ref-channel ?t2 .  ?t2 :tv_channel\\#country ?t2_country . ?t3 :cartoon\\#written_by ?t3_written_by . FILTER(?t3_written_by = 'Todd Casey') .        }     } }"
    },
    {
        "kg_name": "tvshow",
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "query": "select distinct ?t1_series_name ?t1_country where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#country ?t1_country . ?t2 :cartoon\\#directed_by ?t2_directed_by . FILTER(?t2_directed_by = 'Michael Chang') . FILTER (?t1_series_name in (?t3_series_name)) . FILTER (?t1_country in (?t3_country)) .   ?t3 a :tv_channel . ?t4 a :cartoon . ?t4 :cartoon\\#ref-channel ?t3 .  ?t3 :tv_channel\\#series_name ?t3_series_name . ?t3 :tv_channel\\#country ?t3_country . ?t4 :cartoon\\#directed_by ?t4_directed_by .  FILTER(?t4_directed_by = 'Ben Jones') .             }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "query": "select distinct ?t1_series_name ?t1_country where { ?t1 a :tv_channel . ?t2 a :cartoon . ?t2 :cartoon\\#ref-channel ?t1 .  ?t1 :tv_channel\\#series_name ?t1_series_name . ?t1 :tv_channel\\#country ?t1_country . ?t2 :cartoon\\#directed_by ?t2_directed_by . FILTER(?t2_directed_by = 'Michael Chang') . FILTER (?t1_series_name in (?t3_series_name)) . FILTER (?t1_country in (?t3_country)) .   ?t3 a :tv_channel . ?t4 a :cartoon . ?t4 :cartoon\\#ref-channel ?t3 .  ?t3 :tv_channel\\#series_name ?t3_series_name . ?t3 :tv_channel\\#country ?t3_country . ?t4 :cartoon\\#directed_by ?t4_directed_by .  FILTER(?t4_directed_by = 'Ben Jones') .             }"
    },
    {
        "kg_name": "tvshow",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "query": "select ?t1_pixel_aspect_ratio_par ?t1_country where { ?t1 a :tv_channel . ?t1 :tv_channel\\#pixel_aspect_ratio_par ?t1_pixel_aspect_ratio_par . ?t1 :tv_channel\\#country ?t1_country . ?t1 :tv_channel\\#language ?t1_language . FILTER(?t1_language != 'English') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "query": "select ?t1_pixel_aspect_ratio_par ?t1_country where { ?t1 a :tv_channel . ?t1 :tv_channel\\#pixel_aspect_ratio_par ?t1_pixel_aspect_ratio_par . ?t1 :tv_channel\\#country ?t1_country . ?t1 :tv_channel\\#language ?t1_language . FILTER(?t1_language != 'English') .        }"
    },
    {
        "kg_name": "tvshow",
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "query": "SELECT ?T1_id WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#id ?T1_id .        } GROUP BY ?T1_id   HAVING(count( *)  > 2)"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "query": "SELECT ?T1_id WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#id ?T1_id .        } GROUP BY ?T1_id   HAVING(count( *)  > 2)"
    },
    {
        "kg_name": "tvshow",
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_id as ?col1) WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#id ?T1_id .   }}  MINUS {SELECT (?T2_channel as ?col1) WHERE { ?T2 a :cartoon . ?T2 :cartoon\\#channel ?T2_channel . ?T2 :cartoon\\#directed_by ?T2_directed_by . FILTER(?T2_directed_by = 'Ben Jones') .        }     } }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_id as ?col1) WHERE { ?T1 a :tv_channel . ?T1 :tv_channel\\#id ?T1_id .   }}  MINUS {SELECT (?T2_channel as ?col1) WHERE { ?T2 a :cartoon . ?T2 :cartoon\\#channel ?T2_channel . ?T2 :cartoon\\#directed_by ?T2_directed_by . FILTER(?T2_directed_by = 'Ben Jones') .        }     } }"
    },
    {
        "kg_name": "tvshow",
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "query": "select ?t1_package_option where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#id ?t1_id .     Filter not exists {{select ?t22_channel where { ?t22 a :cartoon . ?t22 :cartoon\\#channel ?t22_channel . ?t22 :cartoon\\#directed_by ?t22_directed_by . FILTER(?t22_directed_by = 'Ben Jones') .        }    } FILTER (?t1_id in (?t22_channel))}  }"
    },
    {
        "kg_name": "tvshow",
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "query": "select ?t1_package_option where { ?t1 a :tv_channel . ?t1 :tv_channel\\#package_option ?t1_package_option . ?t1 :tv_channel\\#id ?t1_id .     Filter not exists {{select ?t22_channel where { ?t22 a :cartoon . ?t22 :cartoon\\#channel ?t22_channel . ?t22 :cartoon\\#directed_by ?t22_directed_by . FILTER(?t22_directed_by = 'Ben Jones') .        }    } FILTER (?t1_id in (?t22_channel))}  }"
    },
    {
        "kg_name": "poker_player",
        "question": "How many poker players are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :poker_player .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Count the number of poker players.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :poker_player .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "List the earnings of poker players in descending order.",
        "query": "select ?t1_earnings where { ?t1 a :poker_player . ?t1 :poker_player\\#earnings ?t1_earnings . ?t1 :poker_player\\#earnings ?t1_earnings .        }  order by desc (?t1_earnings)"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the earnings of poker players, ordered descending by value?",
        "query": "select ?t1_earnings where { ?t1 a :poker_player . ?t1 :poker_player\\#earnings ?t1_earnings . ?t1 :poker_player\\#earnings ?t1_earnings .        }  order by desc (?t1_earnings)"
    },
    {
        "kg_name": "poker_player",
        "question": "List the final tables made and the best finishes of poker players.",
        "query": "select ?t1_final_table_made ?t1_best_finish where { ?t1 a :poker_player . ?t1 :poker_player\\#final_table_made ?t1_final_table_made . ?t1 :poker_player\\#best_finish ?t1_best_finish .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the final tables made and best finishes for all poker players?",
        "query": "select ?t1_final_table_made ?t1_best_finish where { ?t1 a :poker_player . ?t1 :poker_player\\#final_table_made ?t1_final_table_made . ?t1 :poker_player\\#best_finish ?t1_best_finish .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the average earnings of poker players?",
        "query": "select (avg( ?t1_earnings) as ?aggregation_t1_earnings_73 ) where { ?t1 a :poker_player . ?t1 :poker_player\\#earnings ?t1_earnings .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the average earnings across all poker players.",
        "query": "select (avg( ?t1_earnings) as ?aggregation_t1_earnings_73 ) where { ?t1 a :poker_player . ?t1 :poker_player\\#earnings ?t1_earnings .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the money rank of the poker player with the highest earnings?",
        "query": "select ?t1_money_rank where { ?t1 a :poker_player . ?t1 :poker_player\\#money_rank ?t1_money_rank . ?t1 :poker_player\\#earnings ?t1_earnings .        }   order by desc (?t1_earnings) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the money rank of the player with the greatest earnings.",
        "query": "select ?t1_money_rank where { ?t1 a :poker_player . ?t1 :poker_player\\#money_rank ?t1_money_rank . ?t1 :poker_player\\#earnings ?t1_earnings .        }   order by desc (?t1_earnings) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "query": "select (max( ?t1_final_table_made) as ?aggregation_t1_final_table_made_10 ) where { ?t1 a :poker_player . ?t1 :poker_player\\#final_table_made ?t1_final_table_made . ?t1 :poker_player\\#earnings ?t1_earnings . FILTER(?t1_earnings < 200000) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "query": "select (max( ?t1_final_table_made) as ?aggregation_t1_final_table_made_10 ) where { ?t1 a :poker_player . ?t1 :poker_player\\#final_table_made ?t1_final_table_made . ?t1 :poker_player\\#earnings ?t1_earnings . FILTER(?t1_earnings < 200000) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of poker players?",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t1 :people\\#people_id ?t1_people_id .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the names of all the poker players.",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t1 :people\\#people_id ?t1_people_id .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#earnings ?t2_earnings . FILTER(?t2_earnings > 300000) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Give the names of poker players who have earnings above 300000.",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#earnings ?t2_earnings . FILTER(?t2_earnings > 300000) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#final_table_made ?t2_final_table_made .        }  order by asc (?t2_final_table_made)"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#final_table_made ?t2_final_table_made .        }  order by asc (?t2_final_table_made)"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "query": "select ?t1_birth_date where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#birth_date ?t1_birth_date . ?t2 :poker_player\\#earnings ?t2_earnings .        }   order by asc (?t2_earnings) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "query": "select ?t1_birth_date where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#birth_date ?t1_birth_date . ?t2 :poker_player\\#earnings ?t2_earnings .        }   order by asc (?t2_earnings) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the money rank of the tallest poker player?",
        "query": "select ?t1_money_rank where { ?t1 a :poker_player . ?t2 a :people . ?t1 :poker_player\\#ref-people_id ?t2 .  ?t1 :poker_player\\#money_rank ?t1_money_rank . ?t2 :people\\#height ?t2_height .        }   order by desc (?t2_height) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the money rank of the poker player with the greatest height.",
        "query": "select ?t1_money_rank where { ?t1 a :poker_player . ?t2 a :people . ?t1 :poker_player\\#ref-people_id ?t2 .  ?t1 :poker_player\\#money_rank ?t1_money_rank . ?t2 :people\\#height ?t2_height .        }   order by desc (?t2_height) limit 1"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the average earnings of poker players with height higher than 200?",
        "query": "select (avg( ?t1_earnings) as ?aggregation_t1_earnings_12 ) where { ?t1 a :poker_player . ?t2 a :people . ?t1 :poker_player\\#ref-people_id ?t2 .  ?t1 :poker_player\\#earnings ?t1_earnings . ?t2 :people\\#height ?t2_height . FILTER(?t2_height > 200) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Give average earnings of poker players who are taller than 200.",
        "query": "select (avg( ?t1_earnings) as ?aggregation_t1_earnings_12 ) where { ?t1 a :poker_player . ?t2 a :people . ?t1 :poker_player\\#ref-people_id ?t2 .  ?t1 :poker_player\\#earnings ?t1_earnings . ?t2 :people\\#height ?t2_height . FILTER(?t2_height > 200) .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of poker players in descending order of earnings?",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#earnings ?t2_earnings .        }  order by desc (?t2_earnings)"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the names of poker players sorted by their earnings descending.",
        "query": "select ?t1_name where { ?t1 a :people . ?t2 a :poker_player . ?t2 :poker_player\\#ref-people_id ?t1 .  ?t1 :people\\#name ?t1_name . ?t2 :poker_player\\#earnings ?t2_earnings .        }  order by desc (?t2_earnings)"
    },
    {
        "kg_name": "poker_player",
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "query": "select ?t1_nationality (count( *) as ?aggregation_all) where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        } group by ?t1_nationality"
    },
    {
        "kg_name": "poker_player",
        "question": "How many people are there of each nationality?",
        "query": "select ?t1_nationality (count( *) as ?aggregation_all) where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        } group by ?t1_nationality"
    },
    {
        "kg_name": "poker_player",
        "question": "What is the most common nationality of people?",
        "query": "SELECT ?T1_nationality (count( *) as ?aggregation_all) WHERE { ?T1 a :people . ?T1 :people\\#nationality ?T1_nationality .        } GROUP BY ?T1_nationality  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "poker_player",
        "question": "Give the nationality that is most common across all people.",
        "query": "SELECT ?T1_nationality (count( *) as ?aggregation_all) WHERE { ?T1 a :people . ?T1 :people\\#nationality ?T1_nationality .        } GROUP BY ?T1_nationality  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the nationalities that are shared by at least two people?",
        "query": "select ?t1_nationality where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        } group by ?t1_nationality   having(count( *)  >= 2)"
    },
    {
        "kg_name": "poker_player",
        "question": "Return the nationalities for which there are two or more people.",
        "query": "select ?t1_nationality where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        } group by ?t1_nationality   having(count( *)  >= 2)"
    },
    {
        "kg_name": "poker_player",
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "query": "select ?t1_name ?t1_birth_date where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#birth_date ?t1_birth_date . ?t1 :people\\#name ?t1_name .        }  order by asc (?t1_name)"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "query": "select ?t1_name ?t1_birth_date where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#birth_date ?t1_birth_date . ?t1 :people\\#name ?t1_name .        }  order by asc (?t1_name)"
    },
    {
        "kg_name": "poker_player",
        "question": "Show names of people whose nationality is not 'Russia'.",
        "query": "select ?t1_name where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#nationality ?t1_nationality . FILTER(?t1_nationality != 'Russia') .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of people who are not from Russia?",
        "query": "select ?t1_name where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#nationality ?t1_nationality . FILTER(?t1_nationality != 'Russia') .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "List the names of people that are not poker players.",
        "query": "select ?t1_name where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#people_id ?t1_people_id .     Filter not exists {{select ?t22_people_id where { ?t22 a :poker_player . ?t22 :poker_player\\#people_id ?t22_people_id .        }    } FILTER (?t1_people_id in (?t22_people_id))}  }"
    },
    {
        "kg_name": "poker_player",
        "question": "What are the names of people who do not play poker?",
        "query": "select ?t1_name where { ?t1 a :people . ?t1 :people\\#name ?t1_name . ?t1 :people\\#people_id ?t1_people_id .     Filter not exists {{select ?t22_people_id where { ?t22 a :poker_player . ?t22 :poker_player\\#people_id ?t22_people_id .        }    } FILTER (?t1_people_id in (?t22_people_id))}  }"
    },
    {
        "kg_name": "poker_player",
        "question": "How many distinct nationalities are there?",
        "query": "select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_43 ) where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        }"
    },
    {
        "kg_name": "poker_player",
        "question": "Count the number of different nationalities.",
        "query": "select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_43 ) where { ?t1 a :people . ?t1 :people\\#nationality ?t1_nationality .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "How many states are there?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :area_code_state .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "query": "SELECT ?T1_contestant_number ?T1_contestant_name WHERE { ?T1 a :contestants . ?T1 :contestants\\#contestant_number ?T1_contestant_number . ?T1 :contestants\\#contestant_name ?T1_contestant_name . ?T1 :contestants\\#contestant_name ?T1_contestant_name .        }  ORDER BY DESC (?T1_contestant_name)"
    },
    {
        "kg_name": "voter_1",
        "question": "List the vote ids, phone numbers and states of all votes.",
        "query":"SELECT ?T1_vote_id ?T1_phone_number ?T1_state WHERE { ?T1 a :votes . ?T1 :votes\\#vote_id ?T1_vote_id . ?T1 :votes\\#phone_number ?T1_phone_number . ?T1 :votes\\#state ?T1_state .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the maximum and minimum values of area codes?",
        "query": "SELECT (max( ?T1_area_code) as ?aggregation_T1_area_code_50 ) (min( ?T1_area_code) as ?aggregation_T1_area_code_29 ) WHERE { ?T1 a :area_code_state . ?T1 :area_code_state\\#area_code ?T1_area_code . ?T1 :area_code_state\\#area_code ?T1_area_code .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "What is last date created of votes from the state 'CA'?",
        "query": "SELECT (max( ?T1_created) as ?aggregation_T1_created_28 ) WHERE { ?T1 a :votes . ?T1 :votes\\#created ?T1_created . ?T1 :votes\\#state ?T1_state . FILTER(?T1_state = 'CA') .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "query": "SELECT ?T1_contestant_name WHERE { ?T1 a :contestants . ?T1 :contestants\\#contestant_name ?T1_contestant_name . ?T1 :contestants\\#contestant_name ?T1_contestant_name . FILTER(?T1_contestant_name != 'Jessie Alloway') .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the distinct states and create time of all votes?",
        "query": "SELECT DISTINCT ?T1_state ?T1_created WHERE { ?T1 a :votes . ?T1 :votes\\#state ?T1_state . ?T1 :votes\\#created ?T1_created .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "query": "SELECT ?T1_contestant_number ?T1_contestant_name WHERE { ?T1 a :contestants . ?T2 a :votes . ?T2 :votes\\#ref-contestant_number ?T1 .  ?T1 :contestants\\#contestant_number ?T1_contestant_number . ?T1 :contestants\\#contestant_name ?T1_contestant_name . ?T1 :contestants\\#contestant_number ?T1_contestant_number .        } GROUP BY ?T1_contestant_number ?T1_contestant_name   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "voter_1",
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "query":"SELECT ?T1_contestant_number (count( *) as ?aggregation_all) ?T1_contestant_name WHERE { ?T1 a :contestants . ?T3 a :votes . ?T3 :votes\\#ref-contestant_number ?T1 .  ?T1 :contestants\\#contestant_number ?T1_contestant_number . ?T1 :contestants\\#contestant_name ?T1_contestant_name . ?T1 :contestants\\#contestant_number ?T1_contestant_number .        } GROUP BY ?T1_contestant_number ?T1_contestant_name  ORDER BY ASC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :votes . ?T1 :votes\\#state ?T1_state . ?T1 :votes\\#state ?T1_state . FILTER(?T1_state = 'NY' || ?T1_state = 'CA') .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "How many contestants did not get voted?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :contestants . ?T1 :contestants\\#contestant_number ?T1_contestant_number .   FILTER NOT EXISTS {{SELECT ?T22_contestant_number WHERE { ?T22 a :votes . ?T22 :votes\\#contestant_number ?T22_contestant_number .        }  }  FILTER(?T1_contestant_number in (?T22_contestant_number)) . } }"
    },
    {
        "kg_name": "voter_1",
        "question": "What is the area code in which the most voters voted?",
        "query": "SELECT ?T1_area_code WHERE { ?T1 a :area_code_state . ?T2 a :votes . ?T2 :votes\\#state ?state . ?T1 :area_code_state\\#state ?state .  ?T1 :area_code_state\\#area_code ?T1_area_code . } GROUP BY ?T1_area_code  ORDER BY DESC (count(*)) LIMIT 1"
    },
    {
        "kg_name": "voter_1",
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "query": "SELECT ?T1_created ?T1_state ?T1_phone_number WHERE { ?T1 a :votes . ?T2 a :contestants . ?T1 :votes\\#ref-contestant_number ?T2 .  ?T1 :votes\\#created ?T1_created . ?T1 :votes\\#state ?T1_state . ?T1 :votes\\#phone_number ?T1_phone_number . ?T2 :contestants\\#contestant_name ?T2_contestant_name . FILTER(?T2_contestant_name = 'Tabatha Gehling') .        }"
    },
    {
        "kg_name": "voter_1",
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "query": "SELECT DISTINCT ?T1_area_code WHERE { ?T1 a :area_code_state . ?T13 a :votes . ?T13 :votes\\#ref-state ?T1 .  ?T1 :area_code_state\\#area_code ?T1_area_code . ?T2 :contestants\\#contestant_name ?T2_contestant_name . ?T2 a :contestants . ?T13 :votes\\#ref-contestant_number ?T2 .  ?T1 :area_code_state\\#area_code ?T1_area_code . ?T2 :contestants\\#contestant_name ?T2_contestant_name . FILTER(?T2_contestant_name = 'Tabatha Gehling') . FILTER (?T1_area_code in (?T3_area_code)) .   ?T3 a :area_code_state . ?T15 a :votes . ?T15 :votes\\#ref-state ?T3 .  ?T3 :area_code_state\\#area_code ?T3_area_code . ?T4 :contestants\\#contestant_name ?T4_contestant_name . ?T4 a :contestants . ?T15 :votes\\#ref-contestant_number ?T4 .  ?T3 :area_code_state\\#area_code ?T3_area_code . ?T4 :contestants\\#contestant_name ?T4_contestant_name .  FILTER(?T4_contestant_name = 'Kelly Clauss') .             }"
    },
    {
        "kg_name": "voter_1",
        "question": "Return the names of the contestants whose names contain the substring 'Al' .",
        "query": "SELECT ?T1_contestant_name WHERE { ?T1 a :contestants . ?T1 :contestants\\#contestant_name ?T1_contestant_name . ?T1 :contestants\\#contestant_name ?T1_contestant_name . FILTER(contains (?T1_contestant_name, 'al')) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of all the countries that became independent after 1950?",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#indepyear ?t1_indepyear . FILTER(?t1_indepyear > 1950) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the names of the nations that were founded after 1950.",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#indepyear ?t1_indepyear . FILTER(?t1_indepyear > 1950) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many countries have a republic as their form of government?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'Republic') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many countries have governments that are republics?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'Republic') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total surface area of the countries in the Caribbean region?",
        "query": "select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_49 ) where { ?t1 a :country . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#region ?t1_region . FILTER(?t1_region = 'Caribbean') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How much surface area do the countires in the Carribean cover together?",
        "query": "select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_49 ) where { ?t1 a :country . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#region ?t1_region . FILTER(?t1_region = 'Caribbean') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Which continent is Anguilla in?",
        "query": "select ?t1_continent where { ?t1 a :country . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Anguilla') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the continent name which Anguilla belongs to?",
        "query": "select ?t1_continent where { ?t1 a :country . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Anguilla') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Which region is the city Kabul located in?",
        "query": "select ?t1_region where { ?t1 a :country . ?t2 a :city . ?t2 :city\\#ref-countrycode ?t1 .  ?t1 :country\\#region ?t1_region . ?t2 :city\\#name ?t2_name . FILTER(?t2_name = 'Kabul') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What region is Kabul in?",
        "query": "select ?t1_region where { ?t1 a :country . ?t2 a :city . ?t2 :city\\#ref-countrycode ?t1 .  ?t1 :country\\#region ?t1_region . ?t2 :city\\#name ?t2_name . FILTER(?t2_name = 'Kabul') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Which language is the most popular in Aruba?",
        "query": "select ?t1_language where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t1 :countrylanguage\\#percentage ?t1_percentage . ?t2 :country\\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        }   order by desc (?t1_percentage) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What language is predominantly spoken in Aruba?",
        "query": "select ?t1_language where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t1 :countrylanguage\\#percentage ?t1_percentage . ?t2 :country\\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        }   order by desc (?t1_percentage) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What are the population and life expectancies in Brazil?",
        "query": "select ?t1_population ?t1_lifeexpectancy where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Brazil') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give me Brazil\u201a\u00c4\u00f4s population and life expectancies.",
        "query": "select ?t1_population ?t1_lifeexpectancy where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Brazil') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the region and population of Angola?",
        "query": "select ?t1_population ?t1_region where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#region ?t1_region . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Angola') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What region does Angola belong to and what is its population?",
        "query": "select ?t1_population ?t1_region where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#region ?t1_region . ?t1 :country\\#name ?t1_name . FILTER(?t1_name = 'Angola') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_163 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#region ?t1_region . FILTER(?t1_region = 'Central Africa') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How long is the people\u201a\u00c4\u00f4s average life expectancy in Central Africa?",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_163 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#region ?t1_region . FILTER(?t1_region = 'Central Africa') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by asc (?t1_lifeexpectancy) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by asc (?t1_lifeexpectancy) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total population and maximum GNP in Asia?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_200 ) (max( ?t1_gnp) as ?aggregation_t1_gnp_6 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#gnp ?t1_gnp . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_200 ) (max( ?t1_gnp) as ?aggregation_t1_gnp_6 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#gnp ?t1_gnp . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the average life expectancy in African countries that are republics?",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_151 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_continent = 'Africa' && ?t1_governmentform = 'Republic') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_151 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_continent = 'Africa' && ?t1_governmentform = 'Republic') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total surface area of the continents Asia and Europe?",
        "query": "select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_107 ) where { ?t1 a :country . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia' || ?t1_continent = 'Europe') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "query": "select (sum( ?t1_surfacearea) as ?aggregation_t1_surfacearea_107 ) where { ?t1 a :country . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia' || ?t1_continent = 'Europe') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many people live in Gelderland district?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_150 ) where { ?t1 a :city . ?t1 :city\\#population ?t1_population . ?t1 :city\\#district ?t1_district . FILTER(?t1_district = 'Gelderland') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total population of Gelderland district?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_150 ) where { ?t1 a :city . ?t1 :city\\#population ?t1_population . ?t1 :city\\#district ?t1_district . FILTER(?t1_district = 'Gelderland') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "query": "select (avg( ?t1_gnp) as ?aggregation_t1_gnp_158 ) (sum( ?t1_population) as ?aggregation_t1_population_168 ) where { ?t1 a :country . ?t1 :country\\#gnp ?t1_gnp . ?t1 :country\\#population ?t1_population . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'US Territory') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "query": "select (avg( ?t1_gnp) as ?aggregation_t1_gnp_158 ) (sum( ?t1_population) as ?aggregation_t1_population_168 ) where { ?t1 a :country . ?t1 :country\\#gnp ?t1_gnp . ?t1 :country\\#population ?t1_population . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform = 'US Territory') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many unique languages are spoken in the world?",
        "query": "select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_142 ) where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#language ?t1_language .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the number of distinct languages used around the world?",
        "query": "select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_142 ) where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#language ?t1_language .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many type of governments are in Africa?",
        "query": "select distinct (count(distinct ?t1_governmentform) as ?aggregation_t1_governmentform_124 ) where { ?t1 a :country . ?t1 :country\\#governmentform ?t1_governmentform . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Africa') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many different forms of governments are there in Africa?",
        "query": "select distinct (count(distinct ?t1_governmentform) as ?aggregation_t1_governmentform_124 ) where { ?t1 a :country . ?t1 :country\\#governmentform ?t1_governmentform . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Africa') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total number of languages used in Aruba?",
        "query": "select (count( ?t1_language) as ?aggregation_t1_language_100 ) where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many languages are spoken in Aruba?",
        "query": "select (count( ?t1_language) as ?aggregation_t1_language_100 ) where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#name ?t2_name . FILTER(?t2_name = 'Aruba') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many official languages does Afghanistan have?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . FILTER(?t1_name = 'Afghanistan' && ?t2_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many official languages are spoken in Afghanistan?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . FILTER(?t1_name = 'Afghanistan' && ?t2_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is name of the country that speaks the largest number of languages?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T1 :country\\#code ?T1_code .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "Give the name of the nation that uses the greatest amount of languages.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T1 :country\\#code ?T1_code .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "Which continent has the most diverse languages?",
        "query": "SELECT ?T1_continent (count( *) as ?aggregation_all) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#code ?T1_code .        } GROUP BY ?T1_continent  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "Which continent speaks the most languages?",
        "query": "SELECT ?T1_continent (count( *) as ?aggregation_all) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#code ?T1_code .        } GROUP BY ?T1_continent  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "How many countries speak both English and Dutch?",
        "query": "SELECT (count(*) as ?aggregation_all) WHERE {{SELECT ?t1_name WHERE{?t1 a :country . ?t1 :country\\#name ?t1_name . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#countrycode ?id .?t1:country\\#code ?id . FILTER(?t2_language ='English')} }{SELECT ?t1_name WHERE{?t1 a :country . ?t1 :country\\#name ?t1_name . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#countrycode ?id .?t1:country\\#code ?id . FILTER(?t2_language ='Dutch')}}}"
    },
    {
        "kg_name": "world_1",
        "question": "What is the number of nations that use English and Dutch?",
        "query": "SELECT (count(*) as ?aggregation_all) WHERE {{SELECT ?t1_name WHERE{?t1 a :country . ?t1 :country\\#name ?t1_name . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#countrycode ?id .?t1:country\\#code ?id . FILTER(?t2_language ='English')} }{SELECT ?t1_name WHERE{?t1 a :country . ?t1 :country\\#name ?t1_name . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#countrycode ?id .?t1:country\\#code ?id . FILTER(?t2_language ='Dutch')}}}"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of nations speak both English and French?",
        "query": "select distinct ?t1_name where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') . FILTER (?t1_name in (?t3_name)) .   ?t3 a :country . ?t4 a :countrylanguage . ?t4 :countrylanguage\\#ref-countrycode ?t3 .  ?t3 :country\\#name ?t3_name . ?t4 :countrylanguage\\#language ?t4_language .  FILTER(?t4_language = 'French') .             }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the names of nations that speak both English and French.",
        "query": "select distinct ?t1_name where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') . FILTER (?t1_name in (?t3_name)) .   ?t3 a :country . ?t4 a :countrylanguage . ?t4 :countrylanguage\\#ref-countrycode ?t3 .  ?t3 :country\\#name ?t3_name . ?t4 :countrylanguage\\#language ?t4_language .  FILTER(?t4_language = 'French') .             }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of nations where both English and French are official languages?",
        "query": "select distinct ?t1_name where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . FILTER(?t2_language = 'English' && ?t2_isofficial = 'T') . FILTER (?t1_name in (?t3_name)) .   ?t3 a :country . ?t4 a :countrylanguage . ?t4 :countrylanguage\\#ref-countrycode ?t3 .  ?t3 :country\\#name ?t3_name . ?t4 :countrylanguage\\#language ?t4_language . ?t4 :countrylanguage\\#isofficial ?t4_isofficial .  FILTER(?t4_language = 'French' && ?t4_isofficial = 'T') .             }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the names of countries with English and French as official languages.",
        "query": "select distinct ?t1_name where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#name ?t1_name . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . FILTER(?t2_language = 'English' && ?t2_isofficial = 'T') . FILTER (?t1_name in (?t3_name)) .   ?t3 a :country . ?t4 a :countrylanguage . ?t4 :countrylanguage\\#ref-countrycode ?t3 .  ?t3 :country\\#name ?t3_name . ?t4 :countrylanguage\\#language ?t4_language . ?t4 :countrylanguage\\#isofficial ?t4_isofficial .  FILTER(?t4_language = 'French' && ?t4_isofficial = 'T') .             }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "query": "select distinct (count(distinct ?t1_continent) as ?aggregation_t1_continent_63 ) where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#continent ?t1_continent . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'Chinese') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "How many continents speak Chinese?",
        "query": "select distinct (count(distinct ?t1_continent) as ?aggregation_t1_continent_63 ) where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#continent ?t1_continent . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'Chinese') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the regions that use English or Dutch?",
        "query": "select distinct ?t1_region where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#region ?t1_region . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English' || ?t2_language = 'Dutch') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Which regions speak Dutch or English?",
        "query": "select distinct ?t1_region where { ?t1 a :country . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t1 .  ?t1 :country\\#region ?t1_region . ?t2 :countrylanguage\\#language ?t2_language . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English' || ?t2_language = 'Dutch') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the countries where either English or Dutch is the official language ?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_name as ?col1) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T2 :countrylanguage\\#language ?T2_language . ?T2 :countrylanguage\\#isofficial ?T2_isofficial . FILTER(?T2_language = 'english' && ?T2_isofficial = 't') .   }} UNION {SELECT (?T1_name as ?col1) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T2 :countrylanguage\\#language ?T2_language . ?T2 :countrylanguage\\#isofficial ?T2_isofficial . FILTER(?T2_language = 'dutch' && ?T2_isofficial = 't') .        }      } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which countries have either English or Dutch as an official language?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_name as ?col1) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T2 :countrylanguage\\#language ?T2_language . ?T2 :countrylanguage\\#isofficial ?T2_isofficial . FILTER(?T2_language = 'english' && ?T2_isofficial = 't') .   }} UNION {SELECT (?T1_name as ?col1) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T1 :country\\#name ?T1_name . ?T2 :countrylanguage\\#language ?T2_language . ?T2 :countrylanguage\\#isofficial ?T2_isofficial . FILTER(?T2_language = 'dutch' && ?T2_isofficial = 't') .        }      } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which language is the most popular on the Asian continent?",
        "query": "SELECT ?T1_language (count( *) as ?aggregation_all) WHERE { ?T1 a :countrylanguage . ?T2 a :country . ?T1 :countrylanguage\\#ref-countrycode ?T2 .  ?T1 :countrylanguage\\#language ?T1_language . ?T2 :country\\#continent ?T2_continent . FILTER(?T2_continent = 'Asia') .        } GROUP BY ?T1_language  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "What is the language that is used by the largest number of Asian nations?",
        "query": "SELECT ?T1_language (count( *) as ?aggregation_all) WHERE { ?T1 a :countrylanguage . ?T2 a :country . ?T1 :countrylanguage\\#ref-countrycode ?T2 .  ?T1 :countrylanguage\\#language ?T1_language . ?T2 :country\\#continent ?T2_continent . FILTER(?T2_continent = 'Asia') .        } GROUP BY ?T1_language  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "Which languages are spoken by only one country in republic governments?",
        "query": "SELECT ?T1_language WHERE { ?T1 a :countrylanguage . ?T2 a :country . ?T1 :countrylanguage\\#ref-countrycode ?T2 .  ?T1 :countrylanguage\\#language ?T1_language . ?T2 :country\\#governmentform ?T2_governmentform . FILTER(?T2_governmentform = 'Republic') .        } GROUP BY ?T1_language   HAVING(count( *)  = 1)"
    },
    {
        "kg_name": "world_1",
        "question": "What languages are only used by a single country with a republic government?",
        "query": "SELECT ?T1_language WHERE { ?T1 a :countrylanguage . ?T2 a :country . ?T1 :countrylanguage\\#ref-countrycode ?T2 .  ?T1 :countrylanguage\\#language ?T1_language . ?T2 :country\\#governmentform ?T2_governmentform . FILTER(?T2_governmentform = 'Republic') .        } GROUP BY ?T1_language   HAVING(count( *)  = 1)"
    },
    {
        "kg_name": "world_1",
        "question": "Find the city with the largest population that uses English.",
        "query": "select ?t1_name ?t1_population where { ?t1 a :city . ?t13 a :country . ?t1 :city\\#ref-countrycode ?t13 .  ?t1 :city\\#name ?t1_name . ?t1 :city\\#population ?t1_population . ?t1 :city\\#population ?t1_population . ?t2 :countrylanguage\\#language ?t2_language . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t13 .  ?t1 :city\\#name ?t1_name . ?t1 :city\\#population ?t1_population . ?t1 :city\\#population ?t1_population . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }   order by desc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What is the most populace city that speaks English?",
        "query": "select ?t1_name ?t1_population where { ?t1 a :city . ?t13 a :country . ?t1 :city\\#ref-countrycode ?t13 .  ?t1 :city\\#name ?t1_name . ?t1 :city\\#population ?t1_population . ?t1 :city\\#population ?t1_population . ?t2 :countrylanguage\\#language ?t2_language . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t13 .  ?t1 :city\\#name ?t1_name . ?t1 :city\\#population ?t1_population . ?t1 :city\\#population ?t1_population . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }   order by desc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "query": "select ?t1_name ?t1_population ?t1_lifeexpectancy where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "query": "select ?t1_name ?t1_population ?t1_lifeexpectancy where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_85 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a :country . ?t23 a :countrylanguage . ?t23 :countrylanguage\\#ref-countrycode ?t22 .  ?t22 :country\\#name ?t22_name . ?t23 :countrylanguage\\#language ?t23_language . ?t23 :countrylanguage\\#isofficial ?t23_isofficial . FILTER(?t23_language = 'English' && ?t23_isofficial = 'T') .        }    } FILTER (?t1_name in (?t22_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "query": "select (avg( ?t1_lifeexpectancy) as ?aggregation_t1_lifeexpectancy_85 ) where { ?t1 a :country . ?t1 :country\\#lifeexpectancy ?t1_lifeexpectancy . ?t1 :country\\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a :country . ?t23 a :countrylanguage . ?t23 :countrylanguage\\#ref-countrycode ?t22 .  ?t22 :country\\#name ?t22_name . ?t23 :countrylanguage\\#language ?t23_language . ?t23 :countrylanguage\\#isofficial ?t23_isofficial . FILTER(?t23_language = 'English' && ?t23_isofficial = 'T') .        }    } FILTER (?t1_name in (?t22_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total number of people living in the nations that do not use English?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_31 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a :country . ?t23 a :countrylanguage . ?t23 :countrylanguage\\#ref-countrycode ?t22 .  ?t22 :country\\#name ?t22_name . ?t23 :countrylanguage\\#language ?t23_language . FILTER(?t23_language = 'English') .        }    } FILTER (?t1_name in (?t22_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "How many people live in countries that do not speak English?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_31 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#name ?t1_name .     Filter not exists {{select ?t22_name where { ?t22 a :country . ?t23 a :countrylanguage . ?t23 :countrylanguage\\#ref-countrycode ?t22 .  ?t22 :country\\#name ?t22_name . ?t23 :countrylanguage\\#language ?t23_language . FILTER(?t23_language = 'English') .        }    } FILTER (?t1_name in (?t22_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "query": "select ?t1_language where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#headofstate ?t2_headofstate . ?t1 :countrylanguage\\#isofficial ?t1_isofficial . FILTER(?t2_headofstate = 'Beatrix' && ?t1_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "query": "select ?t1_language where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#headofstate ?t2_headofstate . ?t1 :countrylanguage\\#isofficial ?t1_isofficial . FILTER(?t2_headofstate = 'Beatrix' && ?t1_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "query": "select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_83 ) where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#indepyear ?t2_indepyear . ?t1 :countrylanguage\\#isofficial ?t1_isofficial . FILTER(?t2_indepyear < 1930 && ?t1_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "query": "select distinct (count(distinct ?t1_language) as ?aggregation_t1_language_83 ) where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#indepyear ?t2_indepyear . ?t1 :countrylanguage\\#isofficial ?t1_isofficial . FILTER(?t2_indepyear < 1930 && ?t1_isofficial = 'T') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#surfacearea ?T1_surfacearea . FILTER(?T1_surfacearea > ?aggregation_T22_surfacearea_183) .       { SELECT (min( ?T22_surfacearea) as ?aggregation_T22_surfacearea_183 ) WHERE { ?T22 a :country . ?T22 :country\\#surfacearea ?T22_surfacearea . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Europe') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which countries have greater area than that of any country in Europe?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#surfacearea ?T1_surfacearea . FILTER(?T1_surfacearea > ?aggregation_T22_surfacearea_183) .       { SELECT (min( ?T22_surfacearea) as ?aggregation_T22_surfacearea_183 ) WHERE { ?T22 a :country . ?T22 :country\\#surfacearea ?T22_surfacearea . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Europe') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the African countries that have a  population less than any country in Asia?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#population ?T1_population . FILTER(?T1_continent = 'Africa' && ?T1_population < ?aggregation_T22_population_106) .       {SELECT (max( ?T22_population) as ?aggregation_T22_population_106 ) WHERE { ?T22 a :country . ?T22 :country\\#population ?T22_population . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Asia') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#population ?T1_population . FILTER(?T1_continent = 'Africa' && ?T1_population < ?aggregation_T22_population_48) .       {SELECT (max( ?T22_population) as ?aggregation_T22_population_48 ) WHERE { ?T22 a :country . ?T22 :country\\#population ?T22_population . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Asia') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#population ?T1_population . FILTER(?T1_continent = 'Africa' && ?T1_population < ?aggregation_T22_population_48) .       {SELECT (max( ?T22_population) as ?aggregation_T22_population_48 ) WHERE { ?T22 a :country . ?T22 :country\\#population ?T22_population . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Asia') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#population ?T1_population . FILTER(?T1_continent = 'Asia' && ?T1_population > ?aggregation_T22_population_151) .       {SELECT (min( ?T22_population) as ?aggregation_T22_population_151 ) WHERE { ?T22 a :country . ?T22 :country\\#population ?T22_population . ?T22 :country\\#continent ?T22_continent . FILTER(?T22_continent = 'Africa') .        }    } }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the country codes for countries that do not speak English?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_countrycode as ?col1) where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#countrycode ?t1_countrycode .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a :countrylanguage . ?t2 :countrylanguage\\#countrycode ?t2_countrycode . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } }"
    },
    {
        "kg_name": "world_1",
        "question": "Return the country codes for countries that do not speak English.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_countrycode as ?col1) where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#countrycode ?t1_countrycode .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a :countrylanguage . ?t2 :countrylanguage\\#countrycode ?t2_countrycode . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the country codes of countries where people use languages other than English?",
        "query": "select distinct ?t1_countrycode where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#countrycode ?t1_countrycode . ?t1 :countrylanguage\\#language ?t1_language . FILTER(?t1_language != 'English') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "query": "select distinct ?t1_countrycode where { ?t1 a :countrylanguage . ?t1 :countrylanguage\\#countrycode ?t1_countrycode . ?t1 :countrylanguage\\#language ?t1_language . FILTER(?t1_language != 'English') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_code as ?col1) where { ?t1 a :country . ?t1 :country\\#code ?t1_code . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform != 'Republic') .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a :countrylanguage . ?t2 :countrylanguage\\#countrycode ?t2_countrycode . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } }"
    },
    {
        "kg_name": "world_1",
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_code as ?col1) where { ?t1 a :country . ?t1 :country\\#code ?t1_code . ?t1 :country\\#governmentform ?t1_governmentform . FILTER(?t1_governmentform != 'Republic') .   }}  MINUS {select (?t2_countrycode as ?col1) where { ?t2 a :countrylanguage . ?t2 :countrylanguage\\#countrycode ?t2_countrycode . ?t2 :countrylanguage\\#language ?t2_language . FILTER(?t2_language = 'English') .        }     } }"
    },
    {
        "kg_name": "world_1",
        "question": "Which cities are in European countries where English is not the official language?",
        "query": "select distinct ?t1_name where { ?t1 a :city . ?t2 a :country . ?t1 :city\\#ref-countrycode ?t2 .  ?t1 :city\\#name ?t1_name . ?t2 :country\\#continent ?t2_continent . ?t2 :country\\#name ?t2_name . FILTER(?t2_continent = 'Europe') .     Filter not exists {{select ?t23_name where { ?t23 a :country . ?t24 a :countrylanguage . ?t24 :countrylanguage\\#ref-countrycode ?t23 .  ?t23 :country\\#name ?t23_name . ?t24 :countrylanguage\\#isofficial ?t24_isofficial . ?t24 :countrylanguage\\#language ?t24_language . FILTER(?t24_isofficial = 'T' && ?t24_language = 'English') .        }    } FILTER (?t2_name in (?t23_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "query": "select distinct ?t1_name where { ?t1 a :city . ?t2 a :country . ?t1 :city\\#ref-countrycode ?t2 .  ?t1 :city\\#name ?t1_name . ?t2 :country\\#continent ?t2_continent . ?t2 :country\\#name ?t2_name . FILTER(?t2_continent = 'Europe') .     Filter not exists {{select ?t23_name where { ?t23 a :country . ?t24 a :countrylanguage . ?t24 :countrylanguage\\#ref-countrycode ?t23 .  ?t23 :country\\#name ?t23_name . ?t24 :countrylanguage\\#isofficial ?t24_isofficial . ?t24 :countrylanguage\\#language ?t24_language . FILTER(?t24_isofficial = 'T' && ?t24_language = 'English') .        }    } FILTER (?t2_name in (?t23_name))}  }"
    },
    {
        "kg_name": "world_1",
        "question": "Which unique cities are in Asian countries where Chinese is the official language ?",
        "query": "select distinct ?t1_name where { ?t1 a :city . ?t3 a :country . ?t1 :city\\#ref-countrycode ?t3 .  ?t1 :city\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . ?t2 :countrylanguage\\#language ?t2_language . ?t3 :country\\#continent ?t3_continent . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t3 .  ?t1 :city\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . ?t2 :countrylanguage\\#language ?t2_language . ?t3 :country\\#continent ?t3_continent . FILTER(?t2_isofficial = 'T' && ?t2_language = 'Chinese' && ?t3_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "query": "select distinct ?t1_name where { ?t1 a :city . ?t3 a :country . ?t1 :city\\#ref-countrycode ?t3 .  ?t1 :city\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . ?t2 :countrylanguage\\#language ?t2_language . ?t3 :country\\#continent ?t3_continent . ?t2 a :countrylanguage . ?t2 :countrylanguage\\#ref-countrycode ?t3 .  ?t1 :city\\#name ?t1_name . ?t2 :countrylanguage\\#isofficial ?t2_isofficial . ?t2 :countrylanguage\\#language ?t2_language . ?t3 :country\\#continent ?t3_continent . FILTER(?t2_isofficial = 'T' && ?t2_language = 'Chinese' && ?t3_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "query": "SELECT ?T1_name ?T1_surfacearea ?T1_indepyear WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#surfacearea ?T1_surfacearea . ?T1 :country\\#indepyear ?T1_indepyear . ?T1 :country\\#population ?T1_population .        }   ORDER BY ASC (?T1_population) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "query": "SELECT ?T1_name ?T1_surfacearea ?T1_indepyear WHERE { ?T1 a :country . ?T1 :country\\#name ?T1_name . ?T1 :country\\#surfacearea ?T1_surfacearea . ?T1 :country\\#indepyear ?T1_indepyear . ?T1 :country\\#population ?T1_population .        }   ORDER BY ASC (?T1_population) LIMIT 1"
    },
    {
        "kg_name": "world_1",
        "question": "What are the population, name and leader of the country with the largest area?",
        "query": "select ?t1_name ?t1_population ?t1_headofstate where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population . ?t1 :country\\#headofstate ?t1_headofstate . ?t1 :country\\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "query": "select ?t1_name ?t1_population ?t1_headofstate where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population . ?t1 :country\\#headofstate ?t1_headofstate . ?t1 :country\\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "query": "select (count( ?t1_language) as ?aggregation_t1_language_137 ) ?t2_name where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#name ?t2_name .        } group by ?t2_name   having(count( *)  >= 3)"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "query": "select (count( ?t1_language) as ?aggregation_t1_language_137 ) ?t2_name where { ?t1 a :countrylanguage . ?t2 a :country . ?t1 :countrylanguage\\#ref-countrycode ?t2 .  ?t1 :countrylanguage\\#language ?t1_language . ?t2 :country\\#name ?t2_name .        } group by ?t2_name   having(count( *)  >= 3)"
    },
    {
        "kg_name": "world_1",
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "query": "select (count( *) as ?aggregation_all) ?t1_district where { ?t1 a :city . ?t1 :city\\#district ?t1_district . ?t1 :city\\#population ?t1_population . FILTER(?t1_population > ?aggregation_t22_population_64) .       {select (avg( ?t22_population) as ?aggregation_t22_population_64 ) where { ?t22 a :city . ?t22 :city\\#population ?t22_population .        }    } } group by ?t1_district"
    },
    {
        "kg_name": "world_1",
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "query": "select (count( *) as ?aggregation_all) ?t1_district where { ?t1 a :city . ?t1 :city\\#district ?t1_district . ?t1 :city\\#population ?t1_population . FILTER(?t1_population > ?aggregation_t22_population_64) .       {select (avg( ?t22_population) as ?aggregation_t22_population_64 ) where { ?t22 a :city . ?t22 :city\\#population ?t22_population .        }    } } group by ?t1_district"
    },
    {
        "kg_name": "world_1",
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_186 ) ?T1_governmentform WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#governmentform ?T1_governmentform . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_governmentform   HAVING(avg( ?T1_lifeexpectancy)  > 72)"
    },
    {
        "kg_name": "world_1",
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_186 ) ?T1_governmentform WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#governmentform ?T1_governmentform . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_governmentform   HAVING(avg( ?T1_lifeexpectancy)  > 72)"
    },
    {
        "kg_name": "world_1",
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_146 ) (avg( ?T1_lifeexpectancy) as ?aggregation_T1_lifeexpectancy_6 ) ?T1_continent WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_continent   HAVING(avg( ?T1_lifeexpectancy)  < 72)"
    },
    {
        "kg_name": "world_1",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_146 ) (avg( ?T1_lifeexpectancy) as ?aggregation_T1_lifeexpectancy_6 ) ?T1_continent WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_continent   HAVING(avg( ?T1_lifeexpectancy)  < 72)"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names and areas of countries with the top 5 largest area?",
        "query": "select ?t1_name ?t1_surfacearea where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Return the names and surface areas of the 5 largest countries.",
        "query": "select ?t1_name ?t1_surfacearea where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#surfacearea ?t1_surfacearea .        }   order by desc (?t1_surfacearea) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What are names of countries with the top 3 largest population?",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population .        }   order by desc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Return the names of the 3 most populated countries.",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population .        }   order by desc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of the nations with the 3 lowest populations?",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population .        }   order by asc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "Return the names of the 3 countries with the fewest people.",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#population ?t1_population .        }   order by asc (?t1_population) limit 1"
    },
    {
        "kg_name": "world_1",
        "question": "how many countries are in Asia?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Count the number of countries in Asia.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :country . ?t1 :country\\#continent ?t1_continent . FILTER(?t1_continent = 'Asia') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#population ?t1_population . FILTER(?t1_continent = 'Europe' && ?t1_population = 80000) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "query": "select ?t1_name where { ?t1 a :country . ?t1 :country\\#name ?t1_name . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#population ?t1_population . FILTER(?t1_continent = 'Europe' && ?t1_population = 80000) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_135 ) (avg( ?t1_surfacearea) as ?aggregation_t1_surfacearea_76 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#surfacearea ?t1_surfacearea . FILTER(?t1_continent = 'North America' && ?t1_surfacearea > 3000) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
        "query": "select (sum( ?t1_population) as ?aggregation_t1_population_135 ) (avg( ?t1_surfacearea) as ?aggregation_t1_surfacearea_76 ) where { ?t1 a :country . ?t1 :country\\#population ?t1_population . ?t1 :country\\#surfacearea ?t1_surfacearea . ?t1 :country\\#continent ?t1_continent . ?t1 :country\\#surfacearea ?t1_surfacearea . FILTER(?t1_continent = 'North America' && ?t1_surfacearea > 3000) .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the cities whose population is between 160000 and 900000?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :city . ?T1 :city\\#name ?T1_name . ?T1 :city\\#population ?T1_population . FILTER(?T1_population >= 160000 && ?T1_population <= 900000) .        }    "
    },
    {
        "kg_name": "world_1",
        "question": "Return the names of cities that have a population between 160000 and 900000 .",
        "query": "SELECT ?T1_name WHERE { ?T1 a :city . ?T1 :city\\#name ?T1_name . ?T1 :city\\#population ?T1_population . FILTER(?T1_population >= 160000 && ?T1_population <= 900000) .        }    "
    },
    {
        "kg_name": "world_1",
        "question": "Which language is spoken by the largest number of countries?",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_146 ) (avg( ?T1_lifeexpectancy) as ?aggregation_T1_lifeexpectancy_6 ) ?T1_continent WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_continent   HAVING(avg( ?T1_lifeexpectancy)  < 72)"
    },
    {
        "kg_name": "world_1",
        "question": "Give the language that is spoken in the most countries.",
        "query": "SELECT (sum( ?T1_population) as ?aggregation_T1_population_146 ) (avg( ?T1_lifeexpectancy) as ?aggregation_T1_lifeexpectancy_6 ) ?T1_continent WHERE { ?T1 a :country . ?T1 :country\\#population ?T1_population . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy . ?T1 :country\\#continent ?T1_continent . ?T1 :country\\#lifeexpectancy ?T1_lifeexpectancy .        } GROUP BY ?T1_continent   HAVING(avg( ?T1_lifeexpectancy)  < 72)"
    },
    {
        "kg_name": "world_1",
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "query": "SELECT ?T1_lang ?T1_code (max (?T1_percentage) as ?agg) WHERE {?T1 a :countrylanguage . ?T1 :countrylanguage\\#countrycode ?T1_code . ?T1 :countrylanguage\\#language ?T1_lang . ?T1 :countrylanguage\\#percentage ?T1_percentage .} GROUP BY ?T1_code ?T1_lang"
    },
    {
        "kg_name": "world_1",
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "query": "SELECT ?T1_lang ?T1_code (max (?T1_percentage) as ?agg) WHERE {?T1 a :countrylanguage . ?T1 :countrylanguage\\#countrycode ?T1_code . ?T1 :countrylanguage\\#language ?T1_lang . ?T1 :countrylanguage\\#percentage ?T1_percentage .} GROUP BY ?T1_code ?T1_lang"
    },
    {
        "kg_name": "world_1",
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "query": "SELECT (count( *) as ?aggregation_all) (max( ?T2_percentage) as ?aggregation_T2_percentage_156 ) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T2 :countrylanguage\\#percentage ?T2_percentage . ?T2 :countrylanguage\\#language ?T2_language . FILTER(?T2_language = 'Spanish') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "query": "SELECT (count( *) as ?aggregation_all) (max( ?T2_percentage) as ?aggregation_T2_percentage_156 ) WHERE { ?T1 a :country . ?T2 a :countrylanguage . ?T2 :countrylanguage\\#ref-countrycode ?T1 .  ?T2 :countrylanguage\\#percentage ?T2_percentage . ?T2 :countrylanguage\\#language ?T2_language . FILTER(?T2_language = 'Spanish') .        }"
    },
    {
        "kg_name": "world_1",
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "query": "SELECT ?T1_countrycode (max( ?T1_percentage) as ?aggregation_T1_percentage_165 ) WHERE { ?T1 a :countrylanguage . ?T1 :countrylanguage\\#countrycode ?T1_countrycode . ?T1 :countrylanguage\\#percentage ?T1_percentage . ?T1 :countrylanguage\\#language ?T1_language . FILTER(?T1_language = 'Spanish') .        } GROUP BY ?T1_countrycode"
    },
    {
        "kg_name": "world_1",
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "query": "SELECT ?T1_countrycode (max( ?T1_percentage) as ?aggregation_T1_percentage_165 ) WHERE { ?T1 a :countrylanguage . ?T1 :countrylanguage\\#countrycode ?T1_countrycode . ?T1 :countrylanguage\\#percentage ?T1_percentage . ?T1 :countrylanguage\\#language ?T1_language . FILTER(?T1_language = 'Spanish') .        } GROUP BY ?T1_countrycode"
    },
    {
        "kg_name": "orchestra",
        "question": "How many conductors are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :conductor .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Count the number of conductors.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :conductor .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "List the names of conductors in ascending order of age.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors, ordered by age?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#age ?t1_age .        }  order by asc (?t1_age)"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors whose nationalities are not 'USA'?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#nationality ?t1_nationality . FILTER(?t1_nationality != 'USA') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Return the names of conductors that do not have the nationality 'USA'.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#nationality ?t1_nationality . FILTER(?t1_nationality != 'USA') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "query": "select ?t1_record_company where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company . ?t1 :orchestra\\#year_of_founded ?t1_year_of_founded .        }  order by desc (?t1_year_of_founded)"
    },
    {
        "kg_name": "orchestra",
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "query": "select ?t1_record_company where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company . ?t1 :orchestra\\#year_of_founded ?t1_year_of_founded .        }  order by desc (?t1_year_of_founded)"
    },
    {
        "kg_name": "orchestra",
        "question": "What is the average attendance of shows?",
        "query": "select (avg( ?t1_attendance) as ?aggregation_t1_attendance_48 ) where { ?t1 a :show . ?t1 :show\\#attendance ?t1_attendance .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Return the average attendance across all shows.",
        "query": "select (avg( ?t1_attendance) as ?aggregation_t1_attendance_48 ) where { ?t1 a :show . ?t1 :show\\#attendance ?t1_attendance .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the maximum and minimum share of performances whose type is not 'Live final'.",
        "query": "select (max( ?t1_share) as ?aggregation_t1_share_107 ) (min( ?t1_share) as ?aggregation_t1_share_137 ) where { ?t1 a :performance . ?t1 :performance\\#share ?t1_share . ?t1 :performance\\#share ?t1_share . ?t1 :performance\\#type ?t1_type . FILTER(?t1_type != 'Live final') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Return the maximum and minimum shares for performances that do not have the type 'Live final'.",
        "query": "select (max( ?t1_share) as ?aggregation_t1_share_107 ) (min( ?t1_share) as ?aggregation_t1_share_137 ) where { ?t1 a :performance . ?t1 :performance\\#share ?t1_share . ?t1 :performance\\#share ?t1_share . ?t1 :performance\\#type ?t1_type . FILTER(?t1_type != 'Live final') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "How many different nationalities do conductors have?",
        "query": "select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_4 ) where { ?t1 a :conductor . ?t1 :conductor\\#nationality ?t1_nationality .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Count the number of different nationalities of conductors.",
        "query": "select distinct (count(distinct ?t1_nationality) as ?aggregation_t1_nationality_4 ) where { ?t1 a :conductor . ?t1 :conductor\\#nationality ?t1_nationality .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "List names of conductors in descending order of years of work.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#year_of_work ?t1_year_of_work .        }  order by desc (?t1_year_of_work)"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#year_of_work ?t1_year_of_work .        }  order by desc (?t1_year_of_work)"
    },
    {
        "kg_name": "orchestra",
        "question": "List the name of the conductor with the most years of work.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#year_of_work ?t1_year_of_work .        }   order by desc (?t1_year_of_work) limit 1"
    },
    {
        "kg_name": "orchestra",
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#year_of_work ?t1_year_of_work .        }   order by desc (?t1_year_of_work) limit 1"
    },
    {
        "kg_name": "orchestra",
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "query": "select ?t1_name ?t2_orchestra where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t2 :orchestra\\#orchestra ?t2_orchestra .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "query": "select ?t1_name ?t2_orchestra where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t2 :orchestra\\#orchestra ?t2_orchestra .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#conductor_id ?t1_conductor_id .        } group by ?t1_name   having(count( *)  > 1)"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#conductor_id ?t1_conductor_id .        } group by ?t1_name   having(count( *)  > 1)"
    },
    {
        "kg_name": "orchestra",
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#conductor_id ?t1_conductor_id .        } group by ?t1_name  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "orchestra",
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t1 :conductor\\#conductor_id ?t1_conductor_id .        } group by ?t1_name  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "orchestra",
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t2 :orchestra\\#year_of_founded ?t2_year_of_founded . FILTER(?t2_year_of_founded > 2008) .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "query": "select ?t1_name where { ?t1 a :conductor . ?t2 a :orchestra . ?t2 :orchestra\\#ref-conductor_id ?t1 .  ?t1 :conductor\\#name ?t1_name . ?t2 :orchestra\\#year_of_founded ?t2_year_of_founded . FILTER(?t2_year_of_founded > 2008) .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Please show the different record companies and the corresponding number of orchestras.",
        "query": "select ?t1_record_company (count( *) as ?aggregation_all) where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company .        } group by ?t1_record_company"
    },
    {
        "kg_name": "orchestra",
        "question": "How many orchestras does each record company manage?",
        "query": "select ?t1_record_company (count( *) as ?aggregation_all) where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company .        } group by ?t1_record_company"
    },
    {
        "kg_name": "orchestra",
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "query": "select ?t1_major_record_format where { ?t1 a :orchestra . \n    ?t13 a :performance . \n    ?t13 :performance\\#ref-orchestra_id ?t1 . \n    ?t1 :orchestra\\#major_record_format ?t1_major_record_format .       \n} group by ?t1_major_record_format \norder by asc (count( *))"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "query": "select ?t1_major_record_format where { ?t1 a :orchestra . \n    ?t13 a :performance . \n    ?t13 :performance\\#ref-orchestra_id ?t1 . \n    ?t1 :orchestra\\#major_record_format ?t1_major_record_format .       \n} group by ?t1_major_record_format \norder by asc (count( *))"
    },
    {
        "kg_name": "orchestra",
        "question": "List the record company shared by the most number of orchestras.",
        "query": "SELECT ?T1_record_company (count( *) as ?aggregation_all) WHERE { ?T1 a :orchestra . ?T1 :orchestra\\#record_company ?T1_record_company .        } GROUP BY ?T1_record_company  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "orchestra",
        "question": "What is the record company used by the greatest number of orchestras?",
        "query": "SELECT ?T1_record_company (count( *) as ?aggregation_all) WHERE { ?T1 a :orchestra . ?T1 :orchestra\\#record_company ?T1_record_company .        } GROUP BY ?T1_record_company  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "orchestra",
        "question": "List the names of orchestras that have no performance.",
        "query": "select ?t1_orchestra where { ?t1 a :orchestra . ?t1 :orchestra\\#orchestra ?t1_orchestra . ?t1 :orchestra\\#orchestra_id ?t1_orchestra_id .     Filter not exists {{select ?t22_orchestra_id where { ?t22 a :performance . ?t22 :performance\\#orchestra_id ?t22_orchestra_id .        }    } FILTER (?t1_orchestra_id in (?t22_orchestra_id))}  }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the orchestras that do not have any performances?",
        "query": "select ?t1_orchestra where { ?t1 a :orchestra . ?t1 :orchestra\\#orchestra ?t1_orchestra . ?t1 :orchestra\\#orchestra_id ?t1_orchestra_id .     Filter not exists {{select ?t22_orchestra_id where { ?t22 a :performance . ?t22 :performance\\#orchestra_id ?t22_orchestra_id .        }    } FILTER (?t1_orchestra_id in (?t22_orchestra_id))}  }"
    },
    {
        "kg_name": "orchestra",
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "query": "select distinct ?t1_record_company where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company . ?t1 :orchestra\\#year_of_founded ?t1_year_of_founded . FILTER(?t1_year_of_founded < 2003) . FILTER (?t1_record_company in (?t2_record_company)) .   ?t2 a :orchestra . ?t2 :orchestra\\#record_company ?t2_record_company . ?t2 :orchestra\\#year_of_founded ?t2_year_of_founded .  FILTER(?t2_year_of_founded > 2003) .             }"
    },
    {
        "kg_name": "orchestra",
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "query": "select distinct ?t1_record_company where { ?t1 a :orchestra . ?t1 :orchestra\\#record_company ?t1_record_company . ?t1 :orchestra\\#year_of_founded ?t1_year_of_founded . FILTER(?t1_year_of_founded < 2003) . FILTER (?t1_record_company in (?t2_record_company)) .   ?t2 a :orchestra . ?t2 :orchestra\\#record_company ?t2_record_company . ?t2 :orchestra\\#year_of_founded ?t2_year_of_founded .  FILTER(?t2_year_of_founded > 2003) .             }"
    },
    {
        "kg_name": "orchestra",
        "question": "Find the number of orchestras whose record format is 'CD' or 'DVD'.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :orchestra . ?t1 :orchestra\\#major_record_format ?t1_major_record_format . ?t1 :orchestra\\#major_record_format ?t1_major_record_format . FILTER(?t1_major_record_format = 'CD' || ?t1_major_record_format = 'DVD') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :orchestra . ?t1 :orchestra\\#major_record_format ?t1_major_record_format . ?t1 :orchestra\\#major_record_format ?t1_major_record_format . FILTER(?t1_major_record_format = 'CD' || ?t1_major_record_format = 'DVD') .        }"
    },
    {
        "kg_name": "orchestra",
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "query": "SELECT ?T1_year_of_founded WHERE { ?T1 a :orchestra . ?T2 a :performance . ?T2 :performance\\#ref-orchestra_id ?T1 .  ?T1 :orchestra\\#year_of_founded ?T1_year_of_founded . ?T1 :orchestra\\#orchestra_id ?T1_orchestra_id .        } GROUP BY ?T1_year_of_founded   HAVING(count( *)  > 1)"
    },
    {
        "kg_name": "orchestra",
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "query": "SELECT ?T1_year_of_founded WHERE { ?T1 a :orchestra . ?T2 a :performance . ?T2 :performance\\#ref-orchestra_id ?T1 .  ?T1 :orchestra\\#year_of_founded ?T1_year_of_founded . ?T1 :orchestra\\#orchestra_id ?T1_orchestra_id .        } GROUP BY ?T1_year_of_founded   HAVING(count( *)  > 1)"
    },
    {
        "kg_name": "network_1",
        "question": "How many high schoolers are there?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Count the number of high schoolers.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names and grades of each high schooler.",
        "query": "SELECT ?T1_name ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#grade ?T1_grade .        }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names and grades for each high schooler?",
        "query": "SELECT ?T1_name ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#grade ?T1_grade .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show all the grades of the high schoolers.",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        }"
    },
    {
        "kg_name": "network_1",
        "question": "What is the grade of each high schooler?",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        }"
    },
    {
        "kg_name": "network_1",
        "question": "What grade is Kyle in?",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#name ?T1_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Return the grade for the high schooler named Kyle.",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#name ?T1_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of all high schoolers in grade 10.",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#grade ?T1_grade . FILTER(?T1_grade = 10) .        }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of all high schoolers in grade 10?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#grade ?T1_grade . FILTER(?T1_grade = 10) .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show the ID of the high schooler named Kyle.",
        "query": "SELECT ?T1_id WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#id ?T1_id . ?T1 :highschooler\\#name ?T1_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "What is Kyle's id?",
        "query": "SELECT ?T1_id WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#id ?T1_id . ?T1 :highschooler\\#name ?T1_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "How many high schoolers are there in grade 9 or 10?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#grade ?T1_grade . FILTER(?T1_grade = 9 || ?T1_grade = 10) .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Count the number of high schoolers in grades 9 or 10.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#grade ?T1_grade . FILTER(?T1_grade = 9 || ?T1_grade = 10) .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show the number of high schoolers for each grade.",
        "query": "SELECT ?T1_grade (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade"
    },
    {
        "kg_name": "network_1",
        "question": "How many high schoolers are in each grade?",
        "query": "SELECT ?T1_grade (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade"
    },
    {
        "kg_name": "network_1",
        "question": "Which grade has the most high schoolers?",
        "query": "SELECT ?T1_grade (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "network_1",
        "question": "Return the grade that has the greatest number of high schoolers.",
        "query": "SELECT ?T1_grade (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "network_1",
        "question": "Show me all grades that have at least 4 students.",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade   HAVING(count( *)  >= 4)"
    },
    {
        "kg_name": "network_1",
        "question": "Which grades have 4 or more high schoolers?",
        "query": "SELECT ?T1_grade WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade .        } GROUP BY ?T1_grade   HAVING(count( *)  >= 4)"
    },
    {
        "kg_name": "network_1",
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "query": "select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a :friend . ?t1 :friend\\#student_id ?t1_student_id .        } group by ?t1_student_id"
    },
    {
        "kg_name": "network_1",
        "question": "How many friends does each student have?",
        "query": "select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a :friend . ?t1 :friend\\#student_id ?t1_student_id .        } group by ?t1_student_id"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of high school students and their corresponding number of friends.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T2 a :friend . ?T2 :friend\\#ref-friend_id ?T1 .  ?T1 :highschooler\\#name ?T1_name .        } GROUP BY ?T1_name"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of the high schoolers and how many friends does each have?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T2 a :friend . ?T2 :friend\\#ref-friend_id ?T1 .  ?T1 :highschooler\\#name ?T1_name .        } GROUP BY ?T1_name"
    },
    {
        "kg_name": "network_1",
        "question": "What is the name of the high schooler who has the greatest number of friends?",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :high_schooler . ?t2 a :friend . ?t2 :friend\\#ref-friend_id ?t1 .  ?t1 :high_schooler\\#name ?t1_name . ?t1 :high_schooler\\#id ?t1_id .        } group by ?t1_name  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "network_1",
        "question": "Return the name of the high school student with the most friends.",
        "query": "select ?t1_name (count( *) as ?aggregation_all) where { ?t1 a :high_schooler . ?t2 a :friend . ?t2 :friend\\#ref-friend_id ?t1 .  ?t1 :high_schooler\\#name ?t1_name . ?t1 :high_schooler\\#id ?t1_id .        } group by ?t1_name  order by desc (?aggregation_all) limit 1"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of high schoolers who have at least 3 friends.",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T2 a :friend . ?T2 :friend\\#ref-student_id ?T1 . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id . } GROUP BY ?T1_id ?T1_name HAVING(count( *) >= 3)"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of high schoolers who have 3 or more friends?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T2 a :friend . ?T2 :friend\\#ref-student_id ?T1 . ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id . } GROUP BY ?T1_id ?T1_name HAVING(count( *) >= 3)"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "query": "SELECT ?T5_name WHERE { ?T3 a :friend . ?T3 :friend\\#ref-friend_id ?T5 . ?T3 :friend\\#ref-student_id ?T1 . ?T1 :highschooler\\#name ?T1_name . ?T5 :highschooler\\#id ?T5_id . ?T1 :highschooler\\#id ?T1_id . ?T5 :highschooler\\#name ?T5_name . FILTER(?T1_name = 'Kyle') . }"
    },
    {
        "kg_name": "network_1",
        "question": "Return the names of friends of the high school student Kyle.",
        "query": "SELECT ?T5_name WHERE { ?T3 a :friend . ?T3 :friend\\#ref-friend_id ?T5 . ?T3 :friend\\#ref-student_id ?T1 . ?T1 :highschooler\\#name ?T1_name . ?T5 :highschooler\\#id ?T5_id . ?T1 :highschooler\\#id ?T1_id . ?T5 :highschooler\\#name ?T5_name . FILTER(?T1_name = 'Kyle') . }"
    },
    {
        "kg_name": "network_1",
        "question": "How many friends does the high school student Kyle have?",
        "query": "SELECT (count(*) as ?agg) WHERE {  ?T3 a :friend . ?T3 :friend\\#ref-friend_id ?T5 . ?T3 :friend\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T5 :highschooler\\#id ?T5_id . ?T1 :highschooler\\#id ?T1_id . ?T5 :highschooler\\#name ?T5_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Count the number of friends Kyle has.",
        "query": "SELECT (count(*) as ?agg) WHERE {  ?T3 a :friend . ?T3 :friend\\#ref-friend_id ?T5 . ?T3 :friend\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T5 :highschooler\\#id ?T5_id . ?T1 :highschooler\\#id ?T1_id . ?T5 :highschooler\\#name ?T5_name . FILTER(?T1_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Show ids of all students who do not have any friends.",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_id as ?col1) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#id ?T1_id .   }}  MINUS {SELECT (?T2_student_id as ?col1) WHERE { ?T2 a :friend . ?T2 :friend\\#student_id ?T2_student_id .        }     } }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the ids of high school students who do not have friends?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_id as ?col1) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#id ?T1_id .   }}  MINUS {SELECT (?T2_student_id as ?col1) WHERE { ?T2 a :friend . ?T2 :friend\\#student_id ?T2_student_id .        }     } }"
    },
    {
        "kg_name": "network_1",
        "question": "Show names of all high school students who do not have any friends.",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_name as ?col1) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name .   }}  MINUS {SELECT (?T2_name as ?col1) WHERE { ?T2 a :highschooler . ?T3 a :friend . ?T3 :friend\\#ref-student_id ?T2.  ?T2 :highschooler\\#name ?T2_name . ?T2 :highschooler\\#id ?T2_id .        }     } }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of students who have no friends?",
        "query": "SELECT distinct?col1 WHERE { { SELECT (?T1_name as ?col1) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name .   }}  MINUS {SELECT (?T2_name as ?col1) WHERE { ?T2 a :highschooler . ?T3 a :friend . ?T3 :friend\\#ref-student_id ?T2.  ?T2 :highschooler\\#name ?T2_name . ?T2 :highschooler\\#id ?T2_id .        }     } }"
    },
    {
        "kg_name": "network_1",
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "query": "select distinct ?t1_student_id where { ?t1 a :friend . ?t1 :friend\\#student_id ?t1_student_id . FILTER (?t1_student_id in (?t2_liked_id)) .   ?t2 a :likes . ?t2 :likes\\#liked_id ?t2_liked_id .              }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the ids of students who both have friends and are liked?",
        "query": "select distinct ?t1_student_id where { ?t1 a :friend . ?t1 :friend\\#student_id ?t1_student_id . FILTER (?t1_student_id in (?t2_liked_id)) .   ?t2 a :likes . ?t2 :likes\\#liked_id ?t2_liked_id .              }"
    },
    {
        "kg_name": "network_1",
        "question": "Show name of all students who have some friends and also are liked by someone else.",
        "query": "SELECT DISTINCT ?T1_name WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T4 a :friend . ?T4 :friend\\#ref-student_id ?T1 . FILTER (?T1_name in (?T2_name)) . ?T2 a :highschooler . ?T3 a :likes . ?T3 :likes\\#ref-liked_id ?T2 .?T2 :highschooler\\#name ?T2_name . ?T2 :highschooler\\#id ?T2_id . }"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of high schoolers who both have friends and are liked?",
        "query": "SELECT DISTINCT ?T1_name WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#name ?T1_name . ?T4 a :friend . ?T4 :friend\\#ref-student_id ?T1 . FILTER (?T1_name in (?T2_name)) . ?T2 a :highschooler . ?T3 a :likes . ?T3 :likes\\#ref-liked_id ?T2 .?T2 :highschooler\\#name ?T2_name . ?T2 :highschooler\\#id ?T2_id . }"
    },
    {
        "kg_name": "network_1",
        "question": "Count the number of likes for each student id.",
        "query": "select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a :likes . ?t1 :likes\\#student_id ?t1_student_id .        } group by ?t1_student_id"
    },
    {
        "kg_name": "network_1",
        "question": "How many likes correspond to each student id?",
        "query": "select ?t1_student_id (count( *) as ?aggregation_all) where { ?t1 a :likes . ?t1 :likes\\#student_id ?t1_student_id .        } group by ?t1_student_id"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T2 a :likes . ?T2 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T2 :likes\\#student_id ?T2_student_id      } GROUP BY ?T2_student_id ?T1_name"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T2 a :likes . ?T2 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T2 :likes\\#student_id ?T2_student_id      } GROUP BY ?T2_student_id ?T1_name"
    },
    {
        "kg_name": "network_1",
        "question": "What is the name of the high schooler who has the greatest number of likes?",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T3 a :likes . ?T3 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "network_1",
        "question": "Give the name of the student with the most likes.",
        "query": "SELECT ?T1_name (count( *) as ?aggregation_all) WHERE { ?T1 a :highschooler . ?T3 a :likes . ?T3 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id .        } GROUP BY ?T1_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of students who have at least 2 likes.",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T2 a :likes . ?T2 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id .     ?T2 :likes\\#student_id ?T2_student_id  } GROUP BY ?T2_student_id ?T1_name   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of students who have 2 or more likes?",
        "query": "SELECT ?T1_name WHERE { ?T1 a :highschooler . ?T2 a :likes . ?T2 :likes\\#ref-student_id ?T1 .  ?T1 :highschooler\\#name ?T1_name . ?T1 :highschooler\\#id ?T1_id .     ?T2 :likes\\#student_id ?T2_student_id  } GROUP BY ?T2_student_id ?T1_name   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "network_1",
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "query": "SELECT ?T1_name WHERE { \n    ?T1 a :highschooler . \n    ?T2 a :friend . \n    ?T2 :friend\\#ref-student_id ?T1 .  \n    ?T1 :highschooler\\#name ?T1_name . \n    ?T1 :highschooler\\#id ?T1_id . \n    ?T2 :friend\\#student_id ?T2_student_id .\n    ?T1 :highschooler\\#grade ?T1_grade . \n    FILTER(?T1_grade > 5) .        } GROUP BY ?T2_student_id ?T1_name   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "network_1",
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "query": "SELECT ?T1_name WHERE { \n    ?T1 a :highschooler . \n    ?T2 a :friend . \n    ?T2 :friend\\#ref-student_id ?T1 .  \n    ?T1 :highschooler\\#name ?T1_name . \n    ?T1 :highschooler\\#id ?T1_id . \n    ?T2 :friend\\#student_id ?T2_student_id .\n    ?T1 :highschooler\\#grade ?T1_grade . \n    FILTER(?T1_grade > 5) .        } GROUP BY ?T2_student_id ?T1_name   HAVING(count( *)  >= 2)"
    },
    {
        "kg_name": "network_1",
        "question": "How many likes does Kyle have?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :likes . ?T2 a :highschooler . ?T1 :likes\\#ref-student_id ?T2 .  ?T2 :highschooler\\#name ?T2_name . FILTER(?T2_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Return the number of likes that the high schooler named Kyle has.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :likes . ?T2 a :highschooler . ?T1 :likes\\#ref-student_id ?T2 .  ?T2 :highschooler\\#name ?T2_name . FILTER(?T2_name = 'Kyle') .        }"
    },
    {
        "kg_name": "network_1",
        "question": "Find the average grade of all students who have some friends.",
        "query": "SELECT (avg(?T1_grade) as ?avg) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#id ?T1_id .FILTER(?T1_id in (?T22_student_id)) . {SELECT DISTINCT ?T22_student_id WHERE { ?T22 a :friend . ?T23 a :highschooler . ?T22 :friend\\#ref-friend_id ?T23 .  ?T22 :friend\\#student_id ?T22_student_id .        }    }  }"
    },
    {
        "kg_name": "network_1",
        "question": "What is the average grade of students who have friends?",
        "query": "SELECT (avg(?T1_grade) as ?avg) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#id ?T1_id .FILTER(?T1_id in (?T22_student_id)) . {SELECT DISTINCT ?T22_student_id WHERE { ?T22 a :friend . ?T23 a :highschooler . ?T22 :friend\\#ref-friend_id ?T23 .  ?T22 :friend\\#student_id ?T22_student_id .        }    }  }"
    },
    {
        "kg_name": "network_1",
        "question": "Find the minimum grade of students who have no friends.",
        "query": "SELECT (min( ?T1_grade) as ?aggregation_T1_grade_3 ) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#id ?T1_id .      FILTER NOT EXISTS {{SELECT ?T22_student_id WHERE { ?T22 a :friend . ?T23 a :highschooler . ?T22 :friend\\#ref-friend_id ?T23 .  ?T22 :friend\\#student_id ?T22_student_id . ?T22 :friend\\#student_id ?T22_student_id .        }    }}FILTER(?T1_id not in (?T22_student_id)) .  }"
    },
    {
        "kg_name": "network_1",
        "question": "What is the lowest grade of students who do not have any friends?",
        "query": "SELECT (min( ?T1_grade) as ?aggregation_T1_grade_3 ) WHERE { ?T1 a :highschooler . ?T1 :highschooler\\#grade ?T1_grade . ?T1 :highschooler\\#id ?T1_id .      FILTER NOT EXISTS {{SELECT ?T22_student_id WHERE { ?T22 a :friend . ?T23 a :highschooler . ?T22 :friend\\#ref-friend_id ?T23 .  ?T22 :friend\\#student_id ?T22_student_id . ?T22 :friend\\#student_id ?T22_student_id .        }    }}FILTER(?T1_id not in (?T22_student_id)) .  }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which states have both owners and professionals living there?",
        "query": "select distinct ?t1_state where { ?t1 a :owners . ?t1 :owners\\#state ?t1_state . FILTER (?t1_state in (?t2_state)) .   ?t2 a :professionals . ?t2 :professionals\\#state ?t2_state .              }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the states where both owners and professionals live.",
        "query": "select distinct ?t1_state where { ?t1 a :owners . ?t1 :owners\\#state ?t1_state . FILTER (?t1_state in (?t2_state)) .   ?t2 a :professionals . ?t2 :professionals\\#state ?t2_state .              }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the average age of the dogs who have gone through any treatments?",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_5 ) where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#age ?t1_age . ?t1 :dogs\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the average age of the dogs who went through treatments.",
        "query": "select (avg( ?t1_age) as ?aggregation_t1_age_5 ) where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#age ?t1_age . ?t1 :dogs\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "query": "SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a :professionals . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#last_name ?t1_last_name . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#state ?t1_state . FILTER(?t1_state = 'Indiana') .   }} UNION {select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#last_name ?t1_last_name . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_last_name ?t1_cell_number   having(count( *)  > 2)  } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "query": "SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a :professionals . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#last_name ?t1_last_name . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#state ?t1_state . FILTER(?t1_state = 'Indiana') .   }} UNION {select (?t1_professional_id as ?col1) (?t1_last_name as ?col2) (?t1_cell_number as ?col3) where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#last_name ?t1_last_name . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_last_name ?t1_cell_number   having(count( *)  > 2)  } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
        "query": "select ?t1_name where { ?t1 a :dogs . ?t1 :dogs\\#name ?t1_name . ?t1 :dogs\\#dog_id ?t1_dog_id .     Filter not exists {{select ?t22_dog_id where { ?t22 a :treatments . ?t22 :treatments\\#dog_id ?t22_dog_id . ?t22 :treatments\\#cost_of_treatment ?t22_cost_of_treatment .        } group by ?t22_dog_id   having(sum( ?t22_cost_of_treatment)  > 1000)} FILTER (?t1_dog_id in (?t22_dog_id))}  }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
        "query": "select ?t1_name where { ?t1 a :dogs . ?t1 :dogs\\#name ?t1_name . ?t1 :dogs\\#dog_id ?t1_dog_id .     Filter not exists {{select ?t22_dog_id where { ?t22 a :treatments . ?t22 :treatments\\#dog_id ?t22_dog_id . ?t22 :treatments\\#cost_of_treatment ?t22_cost_of_treatment .        } group by ?t22_dog_id   having(sum( ?t22_cost_of_treatment)  > 1000)} FILTER (?t1_dog_id in (?t22_dog_id))}  }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which first names are used for professionals or owners but are not used as dog names?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a :professionals . ?t1 :professionals\\#first_name ?t1_first_name .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a :owners . ?t1 :owners\\#first_name ?t1_first_name .        }      } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the first names that are used for professionals or owners but are not used as dog names.",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_first_name as ?col1) where { ?t1 a :professionals . ?t1 :professionals\\#first_name ?t1_first_name .   }} UNION {select (?t1_first_name as ?col1) where { ?t1 a :owners . ?t1 :owners\\#first_name ?t1_first_name .        }      } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "query": "SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_role_code as ?col2) (?t1_email_address as ?col3) where { ?t1 a :professionals . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#role_code ?t1_role_code . ?t1 :professionals\\#email_address ?t1_email_address .   }}  MINUS {select (?t2_professional_id as ?col1) (?t2_role_code as ?col2) (?t2_email_address as ?col3) where { ?t2 a :professionals . ?t3 a :treatments . ?t3 :treatments\\#ref-professional_id ?t2 .  ?t2 :professionals\\#professional_id ?t2_professional_id . ?t2 :professionals\\#role_code ?t2_role_code . ?t2 :professionals\\#email_address ?t2_email_address . ?t2 :professionals\\#professional_id ?t2_professional_id .        }     } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "query": "SELECT distinct?col1?col2?col3 WHERE { { select (?t1_professional_id as ?col1) (?t1_role_code as ?col2) (?t1_email_address as ?col3) where { ?t1 a :professionals . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#role_code ?t1_role_code . ?t1 :professionals\\#email_address ?t1_email_address .   }}  MINUS {select (?t2_professional_id as ?col1) (?t2_role_code as ?col2) (?t2_email_address as ?col3) where { ?t2 a :professionals . ?t3 a :treatments . ?t3 :treatments\\#ref-professional_id ?t2 .  ?t2 :professionals\\#professional_id ?t2_professional_id . ?t2 :professionals\\#role_code ?t2_role_code . ?t2 :professionals\\#email_address ?t2_email_address . ?t2 :professionals\\#professional_id ?t2_professional_id .        }     } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
        "query": "SELECT ?T1_owner_id (count( *) as ?aggregation_all) ?T2_first_name ?T2_last_name WHERE { ?T1 a :dogs . ?T2 a :owners . ?T1 :dogs\\#ref-owner_id ?T2 .  ?T1 :dogs\\#owner_id ?T1_owner_id . ?T2 :owners\\#first_name ?T2_first_name . ?T2 :owners\\#last_name ?T2_last_name .        } GROUP BY ?T1_owner_id ?T2_first_name ?T2_last_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
        "query": "SELECT ?T1_owner_id (count( *) as ?aggregation_all) ?T2_first_name ?T2_last_name WHERE { ?T1 a :dogs . ?T2 a :owners . ?T1 :dogs\\#ref-owner_id ?T2 .  ?T1 :dogs\\#owner_id ?T1_owner_id . ?T2 :owners\\#first_name ?T2_first_name . ?T2 :owners\\#last_name ?T2_last_name .        } GROUP BY ?T1_owner_id ?T2_first_name ?T2_last_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "query": "select ?t1_professional_id ?t1_role_code ?t1_first_name where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#role_code ?t1_role_code . ?t1 :professionals\\#first_name ?t1_first_name . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_role_code ?t1_first_name   having(count( *)  >= 2)"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "query": "select ?t1_professional_id ?t1_role_code ?t1_first_name where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#role_code ?t1_role_code . ?t1 :professionals\\#first_name ?t1_first_name . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_role_code ?t1_first_name   having(count( *)  >= 2)"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the name of the breed with the most dogs?",
        "query": "SELECT ?T1_breed_name (count( *) as ?aggregation_all) WHERE { ?T1 a :breeds . ?T3 a :dogs . ?T3 :dogs\\#ref-breed_code ?T1 .  ?T1 :breeds\\#breed_name ?T1_breed_name . ?T1 :breeds\\#breed_code ?T1_breed_code .        } GROUP BY ?T1_breed_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which breed do the most dogs have? Give me the breed name.",
        "query": "SELECT ?T1_breed_name (count( *) as ?aggregation_all) WHERE { ?T1 a :breeds . ?T3 a :dogs . ?T3 :dogs\\#ref-breed_code ?T1 .  ?T1 :breeds\\#breed_name ?T1_breed_name . ?T1 :breeds\\#breed_code ?T1_breed_code .        } GROUP BY ?T1_breed_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "query": "SELECT ?T1_owner_id (count( *) as ?aggregation_all) ?T1_last_name WHERE { ?T1 a :owners . ?T2 a :dogs . ?T3 a :treatments . ?T1 :owners\\#owner_id ?T1_owner_id . ?T2 :dogs\\#dog_id ?T2_dog_id . ?T3 :treatments\\#ref-dog_id ?T2 . ?T2 :dogs\\#ref-owner_id ?T1 . ?T1 :owners\\#last_name ?T1_last_name . } GROUP BY ?T1_owner_id ?T1_last_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "query": "SELECT ?T1_owner_id (count( *) as ?aggregation_all) ?T1_last_name WHERE { ?T1 a :owners . ?T2 a :dogs . ?T3 a :treatments . ?T1 :owners\\#owner_id ?T1_owner_id . ?T2 :dogs\\#dog_id ?T2_dog_id . ?T3 :treatments\\#ref-dog_id ?T2 . ?T2 :dogs\\#ref-owner_id ?T1 . ?T1 :owners\\#last_name ?T1_last_name . } GROUP BY ?T1_owner_id ?T1_last_name  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the description of the treatment type that costs the least money in total?",
        "query": "select ?t1_treatment_type_description where { ?t1 a :treatment_types . ?t2 a :treatments . ?t2 :treatments\\#ref-treatment_type_code ?t1 .  ?t1 :treatment_types\\#treatment_type_description ?t1_treatment_type_description . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment .        } group by ?t1_treatment_type_description  order by asc (sum( ?t2_cost_of_treatment) ) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Give me the description of the treatment type whose total cost is the lowest.",
        "query": "select ?t1_treatment_type_description where { ?t1 a :treatment_types . ?t2 a :treatments . ?t2 :treatments\\#ref-treatment_type_code ?t1 .  ?t1 :treatment_types\\#treatment_type_description ?t1_treatment_type_description . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment .        } group by ?t1_treatment_type_description  order by asc (sum( ?t2_cost_of_treatment) ) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "query": "select ?t1_owner_id ?t1_zip_code where { ?t1 a :owners . ?t3 a :dogs . ?t3 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#owner_id ?t1_owner_id . ?t1 :owners\\#zip_code ?t1_zip_code . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment . ?t1 :owners\\#owner_id ?t1_owner_id . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t3 .  ?t1 :owners\\#owner_id ?t1_owner_id . ?t1 :owners\\#zip_code ?t1_zip_code . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment . ?t1 :owners\\#owner_id ?t1_owner_id .        } group by ?t1_owner_id ?t1_zip_code  order by desc (sum( ?t2_cost_of_treatment)) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "query": "select ?t1_owner_id ?t1_zip_code where { ?t1 a :owners . ?t3 a :dogs . ?t3 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#owner_id ?t1_owner_id . ?t1 :owners\\#zip_code ?t1_zip_code . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment . ?t1 :owners\\#owner_id ?t1_owner_id . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t3 .  ?t1 :owners\\#owner_id ?t1_owner_id . ?t1 :owners\\#zip_code ?t1_zip_code . ?t2 :treatments\\#cost_of_treatment ?t2_cost_of_treatment . ?t1 :owners\\#owner_id ?t1_owner_id .        } group by ?t1_owner_id ?t1_zip_code  order by desc (sum( ?t2_cost_of_treatment)) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "query": "select ?t1_professional_id ?t1_cell_number where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t3 a :treatment_types . ?t2 :treatments\\#ref-treatment_type_code ?t3 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_cell_number   having(count( *)  >= 2)"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "query": "select ?t1_professional_id ?t1_cell_number where { ?t1 a :professionals . ?t2 a :treatments . ?t2 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t3 a :treatment_types . ?t2 :treatments\\#ref-treatment_type_code ?t3 .  ?t1 :professionals\\#professional_id ?t1_professional_id . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#professional_id ?t1_professional_id .        } group by ?t1_professional_id ?t1_cell_number   having(count( *)  >= 2)"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "query": "SELECT DISTINCT ?T1_first_name ?T1_last_name WHERE { ?T1 a :professionals . ?T2 a :treatments . ?T2 :treatments\\#ref-professional_id ?T1 .  ?T1 :professionals\\#first_name ?T1_first_name . ?T1 :professionals\\#last_name ?T1_last_name . ?T2 :treatments\\#cost_of_treatment ?T2_cost_of_treatment . FILTER(?T2_cost_of_treatment < ?aggregation_T23_cost_of_treatment_180) .       {SELECT (avg( ?T23_cost_of_treatment) as ?aggregation_T23_cost_of_treatment_180 ) WHERE { ?T23 a :treatments . ?T23 :treatments\\#cost_of_treatment ?T23_cost_of_treatment .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "query": "SELECT DISTINCT ?T1_first_name ?T1_last_name WHERE { ?T1 a :professionals . ?T2 a :treatments . ?T2 :treatments\\#ref-professional_id ?T1 .  ?T1 :professionals\\#first_name ?T1_first_name . ?T1 :professionals\\#last_name ?T1_last_name . ?T2 :treatments\\#cost_of_treatment ?T2_cost_of_treatment . FILTER(?T2_cost_of_treatment < ?aggregation_T23_cost_of_treatment_180) .       {SELECT (avg( ?T23_cost_of_treatment) as ?aggregation_T23_cost_of_treatment_180 ) WHERE { ?T23 a :treatments . ?T23 :treatments\\#cost_of_treatment ?T23_cost_of_treatment .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "query": "select ?t1_date_of_treatment ?t2_first_name where { ?t1 a :treatments . ?t2 a :professionals . ?t1 :treatments\\#ref-professional_id ?t2 .  ?t1 :treatments\\#date_of_treatment ?t1_date_of_treatment . ?t2 :professionals\\#first_name ?t2_first_name .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the date and the operating professional's first name of each treatment?",
        "query": "select ?t1_date_of_treatment ?t2_first_name where { ?t1 a :treatments . ?t2 a :professionals . ?t1 :treatments\\#ref-professional_id ?t2 .  ?t1 :treatments\\#date_of_treatment ?t1_date_of_treatment . ?t2 :professionals\\#first_name ?t2_first_name .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the cost of each treatment and the corresponding treatment type description.",
        "query": "select ?t1_cost_of_treatment ?t2_treatment_type_description where { ?t1 a :treatments . ?t2 a :treatment_types . ?t1 :treatments\\#ref-treatment_type_code ?t2 .  ?t1 :treatments\\#cost_of_treatment ?t1_cost_of_treatment . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the cost and treatment type description of each treatment?",
        "query": "select ?t1_cost_of_treatment ?t2_treatment_type_description where { ?t1 a :treatments . ?t2 a :treatment_types . ?t1 :treatments\\#ref-treatment_type_code ?t2 .  ?t1 :treatments\\#cost_of_treatment ?t1_cost_of_treatment . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List each owner's first name, last name, and the size of his for her dog.",
        "query": "select ?t1_first_name ?t1_last_name ?t2_size_code where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t1 :owners\\#last_name ?t1_last_name . ?t2 :dogs\\#size_code ?t2_size_code .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are each owner's first name, last name, and the size of their dog?",
        "query": "select ?t1_first_name ?t1_last_name ?t2_size_code where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t1 :owners\\#last_name ?t1_last_name . ?t2 :dogs\\#size_code ?t2_size_code .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List pairs of the owner's first name and the dogs's name.",
        "query": "select ?t1_first_name ?t2_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t2 :dogs\\#name ?t2_name .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are each owner's first name and their dogs's name?",
        "query": "select ?t1_first_name ?t2_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t2 :dogs\\#name ?t2_name .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "query": "select ?t1_name ?t2_date_of_treatment where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#name ?t1_name . ?t2 :treatments\\#date_of_treatment ?t2_date_of_treatment . ?t1 :dogs\\#breed_code ?t1_breed_code . FILTER(?t1_breed_code = ?t23_breed_code) .       {select ?t23_breed_code (count( *) as ?aggregation_all) where { ?t23 a :dogs . ?t23 :dogs\\#breed_code ?t23_breed_code .        } group by ?t23_breed_code  order by asc (?aggregation_all) limit 1 } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "query": "select ?t1_name ?t2_date_of_treatment where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#name ?t1_name . ?t2 :treatments\\#date_of_treatment ?t2_date_of_treatment . ?t1 :dogs\\#breed_code ?t1_breed_code . FILTER(?t1_breed_code = ?t23_breed_code) .       {select ?t23_breed_code (count( *) as ?aggregation_all) where { ?t23 a :dogs . ?t23 :dogs\\#breed_code ?t23_breed_code .        } group by ?t23_breed_code  order by asc (?aggregation_all) limit 1 } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "query": "select ?t1_first_name ?t2_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t2 :dogs\\#name ?t2_name . ?t1 :owners\\#state ?t1_state . FILTER(?t1_state = 'Virginia') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
        "query": "select ?t1_first_name ?t2_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#first_name ?t1_first_name . ?t2 :dogs\\#name ?t2_name . ?t1 :owners\\#state ?t1_state . FILTER(?t1_state = 'Virginia') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "query": "select distinct ?t1_date_arrived ?t1_date_departed where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#date_arrived ?t1_date_arrived . ?t1 :dogs\\#date_departed ?t1_date_departed . ?t1 :dogs\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "query": "select distinct ?t1_date_arrived ?t1_date_departed where { ?t1 a :dogs . ?t2 a :treatments . ?t2 :treatments\\#ref-dog_id ?t1 .  ?t1 :dogs\\#date_arrived ?t1_date_arrived . ?t1 :dogs\\#date_departed ?t1_date_departed . ?t1 :dogs\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the last name of the owner owning the youngest dog.",
        "query": "select ?t1_last_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#last_name ?t1_last_name . ?t2 :dogs\\#age ?t2_age . FILTER(?t2_age = ?aggregation_t23_age_85) .       {select (max( ?t23_age) as ?aggregation_t23_age_85 ) where { ?t23 a :dogs . ?t23 :dogs\\#age ?t23_age .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Who owns the youngest dog? Give me his or her last name.",
        "query": "select ?t1_last_name where { ?t1 a :owners . ?t2 a :dogs . ?t2 :dogs\\#ref-owner_id ?t1 .  ?t1 :owners\\#last_name ?t1_last_name . ?t2 :dogs\\#age ?t2_age . FILTER(?t2_age = ?aggregation_t23_age_85) .       {select (max( ?t23_age) as ?aggregation_t23_age_85 ) where { ?t23 a :dogs . ?t23 :dogs\\#age ?t23_age .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "query": "select ?t1_email_address where { ?t1 a :professionals . ?t1 :professionals\\#email_address ?t1_email_address . ?t1 :professionals\\#state ?t1_state . ?t1 :professionals\\#state ?t1_state . FILTER(?t1_state = 'Hawaii' || ?t1_state = 'Wisconsin') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "query": "select ?t1_email_address where { ?t1 a :professionals . ?t1 :professionals\\#email_address ?t1_email_address . ?t1 :professionals\\#state ?t1_state . ?t1 :professionals\\#state ?t1_state . FILTER(?t1_state = 'Hawaii' || ?t1_state = 'Wisconsin') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the arriving date and the departing date of all the dogs?",
        "query": "select ?t1_date_arrived ?t1_date_departed where { ?t1 a :dogs . ?t1 :dogs\\#date_arrived ?t1_date_arrived . ?t1 :dogs\\#date_departed ?t1_date_departed .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the arrival date and the departure date for all the dogs.",
        "query": "select ?t1_date_arrived ?t1_date_departed where { ?t1 a :dogs . ?t1 :dogs\\#date_arrived ?t1_date_arrived . ?t1 :dogs\\#date_departed ?t1_date_departed .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many dogs went through any treatments?",
        "query": "select distinct (count(distinct ?t1_dog_id) as ?aggregation_t1_dog_id_182 ) where { ?t1 a :treatments . ?t1 :treatments\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Count the number of dogs that went through a treatment.",
        "query": "select distinct (count(distinct ?t1_dog_id) as ?aggregation_t1_dog_id_182 ) where { ?t1 a :treatments . ?t1 :treatments\\#dog_id ?t1_dog_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many professionals have performed any treatment to dogs?",
        "query": "select distinct (count(distinct ?t1_professional_id) as ?aggregation_t1_professional_id_132 ) where { ?t1 a :treatments . ?t1 :treatments\\#professional_id ?t1_professional_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the number of professionals who have ever treated dogs.",
        "query": "select distinct (count(distinct ?t1_professional_id) as ?aggregation_t1_professional_id_132 ) where { ?t1 a :treatments . ?t1 :treatments\\#professional_id ?t1_professional_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "query": "SELECT ?T1_role_code ?T1_street ?T1_city ?T1_state WHERE { ?T1 a :professionals . ?T1 :professionals\\#role_code ?T1_role_code . ?T1 :professionals\\#street ?T1_street . ?T1 :professionals\\#city ?T1_city . ?T1 :professionals\\#state ?T1_state . ?T1 :professionals\\#city ?T1_city . FILTER(contains (?T1_city, 'West')) .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "query": "SELECT ?T1_role_code ?T1_street ?T1_city ?T1_state WHERE { ?T1 a :professionals . ?T1 :professionals\\#role_code ?T1_role_code . ?T1 :professionals\\#street ?T1_street . ?T1 :professionals\\#city ?T1_city . ?T1 :professionals\\#state ?T1_state . ?T1 :professionals\\#city ?T1_city . FILTER(contains (?T1_city, 'West')) .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "query": "select ?t1_first_name ?t1_last_name ?t1_email_address where { ?t1 a :owners . ?t1 :owners\\#first_name ?t1_first_name . ?t1 :owners\\#last_name ?t1_last_name . ?t1 :owners\\#email_address ?t1_email_address . ?t1 :owners\\#state ?t1_state . FILTER(contains (?t1_state, 'North')) .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "query": "select ?t1_first_name ?t1_last_name ?t1_email_address where { ?t1 a :owners . ?t1 :owners\\#first_name ?t1_first_name . ?t1 :owners\\#last_name ?t1_last_name . ?t1 :owners\\#email_address ?t1_email_address . ?t1 :owners\\#state ?t1_state . FILTER(contains (?t1_state, 'North')) .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many dogs have an age below the average?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :dogs . ?t1 :dogs\\#age ?t1_age . FILTER(?t1_age < ?aggregation_t22_age_5) .       {select (avg( ?t22_age) as ?aggregation_t22_age_5 ) where { ?t22 a :dogs . ?t22 :dogs\\#age ?t22_age .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Count the number of dogs of an age below the average.",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :dogs . ?t1 :dogs\\#age ?t1_age . FILTER(?t1_age < ?aggregation_t22_age_5) .       {select (avg( ?t22_age) as ?aggregation_t22_age_5 ) where { ?t22 a :dogs . ?t22 :dogs\\#age ?t22_age .        }    } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How much does the most recent treatment cost?",
        "query": "select ?t1_cost_of_treatment where { ?t1 a :treatments . ?t1 :treatments\\#cost_of_treatment ?t1_cost_of_treatment . ?t1 :treatments\\#date_of_treatment ?t1_date_of_treatment .        }   order by desc (?t1_date_of_treatment) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Show me the cost of the most recently performed treatment.",
        "query": "select ?t1_cost_of_treatment where { ?t1 a :treatments . ?t1 :treatments\\#cost_of_treatment ?t1_cost_of_treatment . ?t1 :treatments\\#date_of_treatment ?t1_date_of_treatment .        }   order by desc (?t1_date_of_treatment) limit 1"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many dogs have not gone through any treatment?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :dogs . ?t1 :dogs\\#dog_id ?t1_dog_id .     Filter not exists {{select ?t22_dog_id where { ?t22 a :treatments . ?t22 :treatments\\#dog_id ?t22_dog_id .        }    } FILTER (?t1_dog_id in (?t22_dog_id))}  }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Tell me the number of dogs that have not received any treatment .",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE {     ?T1 a :dogs .     ?T1 :dogs\\#dog_id ?T1_dog_id .            FILTER NOT EXISTS{{            SELECT ?T22_dog_id WHERE {                 ?T22 a :treatments .                 ?T22 :treatments\\#dog_id ?T22_dog_id .                    }}         FILTER(?T1_dog_id in (?T22_dog_id)) . }}"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many owners temporarily do not have any dogs?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :owners . ?T1 :owners\\#owner_id ?T1_owner_id .   FILTER NOT EXISTS    {{SELECT ?T22_owner_id WHERE { ?T22 a :dogs . ?T22 :dogs\\#owner_id ?T22_owner_id .        }}   FILTER(?T1_owner_id in (?T22_owner_id))   } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the number of owners who do not own any dogs at this moment.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :owners . ?T1 :owners\\#owner_id ?T1_owner_id .   FILTER NOT EXISTS    {{SELECT ?T22_owner_id WHERE { ?T22 a :dogs . ?T22 :dogs\\#owner_id ?T22_owner_id .        }}   FILTER(?T1_owner_id in (?T22_owner_id))   } }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How many professionals did not operate any treatment on dogs?",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :professionals . ?T1 :professionals\\#professional_id ?T1_professional_id .  FILTER NOT EXISTS      {{SELECT ?T22_professional_id WHERE { ?T22 a :treatments . ?T22 :treatments\\#professional_id ?T22_professional_id .        }    }FILTER(?T1_professional_id in (?T22_professional_id)) .} }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the number of professionals who have not treated any dogs.",
        "query": "SELECT (count( *) as ?aggregation_all) WHERE { ?T1 a :professionals . ?T1 :professionals\\#professional_id ?T1_professional_id .  FILTER NOT EXISTS      {{SELECT ?T22_professional_id WHERE { ?T22 a :treatments . ?T22 :treatments\\#professional_id ?T22_professional_id .        }    }FILTER(?T1_professional_id in (?T22_professional_id)) .} }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "query": "SELECT ?T1_name ?T1_age ?T1_weight WHERE { ?T1 a :dogs . ?T1 :dogs\\#name ?T1_name . ?T1 :dogs\\#age ?T1_age . ?T1 :dogs\\#weight ?T1_weight . ?T1 :dogs\\#abandoned_yn ?T1_abandoned_yn . FILTER(?T1_abandoned_yn = '1') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "query": "SELECT ?T1_name ?T1_age ?T1_weight WHERE { ?T1 a :dogs . ?T1 :dogs\\#name ?T1_name . ?T1 :dogs\\#age ?T1_age . ?T1 :dogs\\#weight ?T1_weight . ?T1 :dogs\\#abandoned_yn ?T1_abandoned_yn . FILTER(?T1_abandoned_yn = '1') .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the average age of all the dogs?",
        "query": "SELECT (avg( ?T1_age) as ?aggregation_T1_age_71 ) WHERE { ?T1 a :dogs . ?T1 :dogs\\#age ?T1_age .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Compute the average age of all the dogs.",
        "query": "SELECT (avg( ?T1_age) as ?aggregation_T1_age_71 ) WHERE { ?T1 a :dogs . ?T1 :dogs\\#age ?T1_age .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the age of the oldest dog?",
        "query": "SELECT (max( ?T1_age) as ?aggregation_T1_age_59 ) WHERE { ?T1 a :dogs . ?T1 :dogs\\#age ?T1_age .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Tell me the age of the oldest dog.",
        "query": "SELECT (max( ?T1_age) as ?aggregation_T1_age_59 ) WHERE { ?T1 a :dogs . ?T1 :dogs\\#age ?T1_age .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How much does each charge type costs? List both charge type and amount.",
        "query": "select ?t1_charge_type ?t1_charge_amount where { ?t1 a :charges . ?t1 :charges\\#charge_type ?t1_charge_type . ?t1 :charges\\#charge_amount ?t1_charge_amount .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List each charge type and its amount.",
        "query": "select ?t1_charge_type ?t1_charge_amount where { ?t1 a :charges . ?t1 :charges\\#charge_type ?t1_charge_type . ?t1 :charges\\#charge_amount ?t1_charge_amount .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "How much does the most expensive charge type costs?",
        "query": "select (max( ?t1_charge_amount) as ?aggregation_t1_charge_amount_72 ) where { ?t1 a :charges . ?t1 :charges\\#charge_amount ?t1_charge_amount .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What is the charge amount of the most expensive charge type?",
        "query": "select (max( ?t1_charge_amount) as ?aggregation_t1_charge_amount_72 ) where { ?t1 a :charges . ?t1 :charges\\#charge_amount ?t1_charge_amount .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the email, cell phone and home phone of all the professionals.",
        "query": "select ?t1_email_address ?t1_cell_number ?t1_home_phone where { ?t1 a :professionals . ?t1 :professionals\\#email_address ?t1_email_address . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#home_phone ?t1_home_phone .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are the email, cell phone and home phone of each professional?",
        "query": "select ?t1_email_address ?t1_cell_number ?t1_home_phone where { ?t1 a :professionals . ?t1 :professionals\\#email_address ?t1_email_address . ?t1 :professionals\\#cell_number ?t1_cell_number . ?t1 :professionals\\#home_phone ?t1_home_phone .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are all the possible breed type and size type combinations?",
        "query": "select distinct ?t1_breed_code ?t1_size_code where { ?t1 a :dogs . ?t1 :dogs\\#breed_code ?t1_breed_code . ?t1 :dogs\\#size_code ?t1_size_code .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "Find the distinct breed type and size type combinations for dogs.",
        "query": "select distinct ?t1_breed_code ?t1_size_code where { ?t1 a :dogs . ?t1 :dogs\\#breed_code ?t1_breed_code . ?t1 :dogs\\#size_code ?t1_size_code .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "List the first name of all the professionals along with the description of the treatment they have done.",
        "query": "select distinct ?t1_first_name ?t2_treatment_type_description where { ?t1 a :professionals . ?t3 a :treatments . ?t3 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#first_name ?t1_first_name . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t2 a :treatment_types . ?t3 :treatments\\#ref-treatment_type_code ?t2 .  ?t1 :professionals\\#first_name ?t1_first_name . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description . ?t1 :professionals\\#professional_id ?t1_professional_id .        }"
    },
    {
        "kg_name": "dog_kennels",
        "question": "What are each professional's first name and description of the treatment they have performed?",
        "query": "select distinct ?t1_first_name ?t2_treatment_type_description where { ?t1 a :professionals . ?t3 a :treatments . ?t3 :treatments\\#ref-professional_id ?t1 .  ?t1 :professionals\\#first_name ?t1_first_name . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description . ?t1 :professionals\\#professional_id ?t1_professional_id . ?t2 a :treatment_types . ?t3 :treatments\\#ref-treatment_type_code ?t2 .  ?t1 :professionals\\#first_name ?t1_first_name . ?t2 :treatment_types\\#treatment_type_description ?t2_treatment_type_description . ?t1 :professionals\\#professional_id ?t1_professional_id .        }"
    },
    {
        "kg_name": "singer",
        "question": "How many singers are there?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :singer .        }"
    },
    {
        "kg_name": "singer",
        "question": "What is the count of singers?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :singer .        }"
    },
    {
        "kg_name": "singer",
        "question": "List the name of singers in ascending order of net worth.",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        }  order by asc (?t1_net_worth_millions)"
    },
    {
        "kg_name": "singer",
        "question": "What are the names of singers ordered by ascending net worth?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        }  order by asc (?t1_net_worth_millions)"
    },
    {
        "kg_name": "singer",
        "question": "What are the birth year and citizenship of singers?",
        "query": "select ?t1_birth_year ?t1_citizenship where { ?t1 a :singer . ?t1 :singer\\#birth_year ?t1_birth_year . ?t1 :singer\\#citizenship ?t1_citizenship .        }"
    },
    {
        "kg_name": "singer",
        "question": "What are the birth years and citizenships of the singers?",
        "query": "select ?t1_birth_year ?t1_citizenship where { ?t1 a :singer . ?t1 :singer\\#birth_year ?t1_birth_year . ?t1 :singer\\#citizenship ?t1_citizenship .        }"
    },
    {
        "kg_name": "singer",
        "question": "List the name of singers whose citizenship is not 'France'.",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#citizenship ?t1_citizenship . FILTER(?t1_citizenship != 'France') .        }"
    },
    {
        "kg_name": "singer",
        "question": "What are the names of the singers who are not French citizens?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#citizenship ?t1_citizenship . FILTER(?t1_citizenship != 'France') .        }"
    },
    {
        "kg_name": "singer",
        "question": "Show the name of singers whose birth year is either 1948 or 1949?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#birth_year ?t1_birth_year . ?t1 :singer\\#birth_year ?t1_birth_year . FILTER(?t1_birth_year = 1948 || ?t1_birth_year = 1949) .        }"
    },
    {
        "kg_name": "singer",
        "question": "What are the names of the singers whose birth years are either 1948 or 1949?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#birth_year ?t1_birth_year . ?t1 :singer\\#birth_year ?t1_birth_year . FILTER(?t1_birth_year = 1948 || ?t1_birth_year = 1949) .        }"
    },
    {
        "kg_name": "singer",
        "question": "What is the name of the singer with the largest net worth?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        }   order by desc (?t1_net_worth_millions) limit 1"
    },
    {
        "kg_name": "singer",
        "question": "What is the name of the singer who is worth the most?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        }   order by desc (?t1_net_worth_millions) limit 1"
    },
    {
        "kg_name": "singer",
        "question": "Show different citizenship of singers and the number of singers of each citizenship.",
        "query": "select ?t1_citizenship (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship .        } group by ?t1_citizenship"
    },
    {
        "kg_name": "singer",
        "question": "For each citizenship, how many singers are from that country?",
        "query": "select ?t1_citizenship (count( *) as ?aggregation_all) where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship .        } group by ?t1_citizenship"
    },
    {
        "kg_name": "singer",
        "question": "Please show the most common citizenship of singers.",
        "query": "SELECT ?T1_citizenship (count( *) as ?aggregation_all) WHERE { ?T1 a :singer . ?T1 :singer\\#citizenship ?T1_citizenship .        } GROUP BY ?T1_citizenship  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "singer",
        "question": "What is the most common singer citizenship ?",
        "query": "SELECT ?T1_citizenship (count( *) as ?aggregation_all) WHERE { ?T1 a :singer . ?T1 :singer\\#citizenship ?T1_citizenship .        } GROUP BY ?T1_citizenship  ORDER BY DESC (?aggregation_all) LIMIT 1"
    },
    {
        "kg_name": "singer",
        "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "query": "select ?t1_citizenship (max( ?t1_net_worth_millions) as ?aggregation_t1_net_worth_millions_168 ) where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        } group by ?t1_citizenship"
    },
    {
        "kg_name": "singer",
        "question": "For each citizenship, what is the maximum net worth?",
        "query": "select ?t1_citizenship (max( ?t1_net_worth_millions) as ?aggregation_t1_net_worth_millions_168 ) where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship . ?t1 :singer\\#net_worth_millions ?t1_net_worth_millions .        } group by ?t1_citizenship"
    },
    {
        "kg_name": "singer",
        "question": "Show titles of songs and names of singers.",
        "query": "select ?t1_title ?t2_name where { ?t1 a :song . ?t2 a :singer . ?t1 :song\\#ref-singer_id ?t2 .  ?t1 :song\\#title ?t1_title . ?t2 :singer\\#name ?t2_name .        }"
    },
    {
        "kg_name": "singer",
        "question": "What are the song titles and singer names?",
        "query": "select ?t1_title ?t2_name where { ?t1 a :song . ?t2 a :singer . ?t1 :song\\#ref-singer_id ?t2 .  ?t1 :song\\#title ?t1_title . ?t2 :singer\\#name ?t2_name .        }"
    },
    {
        "kg_name": "singer",
        "question": "Show distinct names of singers that have songs with sales more than 300000.",
        "query": "select distinct ?t1_name where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t2 :song\\#sales ?t2_sales . FILTER(?t2_sales > 300000) .        }"
    },
    {
        "kg_name": "singer",
        "question": "what are the different names of the singers that have sales more than 300000?",
        "query": "select distinct ?t1_name where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t2 :song\\#sales ?t2_sales . FILTER(?t2_sales > 300000) .        }"
    },
    {
        "kg_name": "singer",
        "question": "Show the names of singers that have more than one song.",
        "query": "select ?t1_name where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id .        } group by ?t1_name   having(count( *)  > 1)"
    },
    {
        "kg_name": "singer",
        "question": "What are the names of the singers that have more than one songs?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id .        } group by ?t1_name   having(count( *)  > 1)"
    },
    {
        "kg_name": "singer",
        "question": "Show the names of singers and the total sales of their songs.",
        "query": "select ?t1_name (sum( ?t2_sales) as ?aggregation_t2_sales_149 ) where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t2 :song\\#sales ?t2_sales .        } group by ?t1_name"
    },
    {
        "kg_name": "singer",
        "question": "For each singer name, what is the total sales for their songs?",
        "query": "select ?t1_name (sum( ?t2_sales) as ?aggregation_t2_sales_149 ) where { ?t1 a :singer . ?t2 a :song . ?t2 :song\\#ref-singer_id ?t1 .  ?t1 :singer\\#name ?t1_name . ?t2 :song\\#sales ?t2_sales .        } group by ?t1_name"
    },
    {
        "kg_name": "singer",
        "question": "List the name of singers that do not have any song.",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id .     Filter not exists {{select ?t22_singer_id where { ?t22 a :song . ?t22 :song\\#singer_id ?t22_singer_id .        }    } FILTER (?t1_singer_id in (?t22_singer_id))}  }"
    },
    {
        "kg_name": "singer",
        "question": "What is the name of every singer that does not have any song?",
        "query": "select ?t1_name where { ?t1 a :singer . ?t1 :singer\\#name ?t1_name . ?t1 :singer\\#singer_id ?t1_singer_id .     Filter not exists {{select ?t22_singer_id where { ?t22 a :song . ?t22 :song\\#singer_id ?t22_singer_id .        }    } FILTER (?t1_singer_id in (?t22_singer_id))}  }"
    },
    {
        "kg_name": "singer",
        "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "query": "select distinct ?t1_citizenship where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship . ?t1 :singer\\#birth_year ?t1_birth_year . FILTER(?t1_birth_year < 1945) . FILTER (?t1_citizenship in (?t2_citizenship)) .   ?t2 a :singer . ?t2 :singer\\#citizenship ?t2_citizenship . ?t2 :singer\\#birth_year ?t2_birth_year .  FILTER(?t2_birth_year > 1955) .             }"
    },
    {
        "kg_name": "singer",
        "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "query": "select distinct ?t1_citizenship where { ?t1 a :singer . ?t1 :singer\\#citizenship ?t1_citizenship . ?t1 :singer\\#birth_year ?t1_birth_year . FILTER(?t1_birth_year < 1945) . FILTER (?t1_citizenship in (?t2_citizenship)) .   ?t2 a :singer . ?t2 :singer\\#citizenship ?t2_citizenship . ?t2 :singer\\#birth_year ?t2_birth_year .  FILTER(?t2_birth_year > 1955) .             }"
    },
    {
        "kg_name": "real_estate_properties",
        "question": "How many available features are there in total?",
        "query": "select (count( *) as ?aggregation_all) where { ?t1 a :other_available_features .        }"
    },
    {
        "kg_name": "real_estate_properties",
        "question": "What is the feature type name of feature AirCon?",
        "query": "select ?t1_feature_type_name where { ?t1 a :reference_feature_types . ?t2 a :other_available_features . ?t2 :other_available_features\\#ref-feature_type_code ?t1 .  ?t1 :reference_feature_types\\#feature_type_name ?t1_feature_type_name . ?t2 :other_available_features\\#feature_name ?t2_feature_name . FILTER(?t2_feature_name = 'AirCon') .        }"
    },
    {
        "kg_name": "real_estate_properties",
        "question": "Show the property type descriptions of properties belonging to that code.",
        "query": "select ?t1_feature_type_name where { ?t1 a :reference_feature_types . ?t2 a :other_available_features . ?t2 :other_available_features\\#ref-feature_type_code ?t1 .  ?t1 :reference_feature_types\\#feature_type_name ?t1_feature_type_name . ?t2 :other_available_features\\#feature_name ?t2_feature_name . FILTER(?t2_feature_name = 'AirCon') .        }"
    },
    {
        "kg_name": "real_estate_properties",
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "query": "SELECT distinct?col1 WHERE { { select (?t1_property_name as ?col1) where { ?t1 a :properties . ?t1 :properties\\#property_name ?t1_property_name . ?t1 :properties\\#property_type_code ?t1_property_type_code . FILTER(?t1_property_type_code = 'House') .   }} UNION {select (?t1_property_name as ?col1) where { ?t1 a :properties . ?t1 :properties\\#property_name ?t1_property_name . ?t1 :properties\\#property_type_code ?t1_property_type_code . ?t1 :properties\\#room_count ?t1_room_count . FILTER(?t1_property_type_code = 'Apartment' && ?t1_room_count > 1) .        }      } }"
    }
]